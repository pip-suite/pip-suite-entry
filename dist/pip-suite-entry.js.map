{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/change_password/ChangePassword.ts","src/change_password/ChangePasswordDialog.ts","src/change_password/ChangePasswordModel.ts","src/change_password/ChangePasswordPanel.ts","src/change_password/ChangePasswordViewModel.ts","src/common/EmailUnique.ts","src/common/EntryCommonService.ts","src/common/EntryHideObject.ts","src/common/EntryInit.ts","src/common/EntryModel.ts","src/common/EntryPageConfig.ts","src/common/EntryService.ts","src/common/EntryStrings.ts","src/common/PasswordMatch.ts","src/common/index.ts","src/data/Account.ts","src/data/EmailSettings.ts","src/data/EntryDataService.ts","src/data/Enums.ts","src/data/Role.ts","src/data/Session.ts","src/data/SessionData.ts","src/data/SessionDataService.ts","src/data/index.ts","src/expire_change_password/ExpireChangePassword.ts","src/expire_change_password/ExpireChangePasswordDialog.ts","src/expire_change_password/ExpireChangePasswordModel.ts","src/expire_change_password/ExpireChangePasswordPanel.ts","src/expire_change_password/ExpireChangePasswordViewModel.ts","src/index.ts","src/post_signup/PostSignup.ts","src/post_signup/PostSignupDialog.ts","src/post_signup/PostSignupModel.ts","src/post_signup/PostSignupPanel.ts","src/post_signup/PostSignupViewModel.ts","src/recover_password/RecoverPassword.ts","src/recover_password/RecoverPasswordDialog.ts","src/recover_password/RecoverPasswordModel.ts","src/recover_password/RecoverPasswordPanel.ts","src/recover_password/RecoverPasswordViewModel.ts","src/reset_password/ResetPassword.ts","src/reset_password/ResetPasswordDialog.ts","src/reset_password/ResetPasswordModel.ts","src/reset_password/ResetPasswordPanel.ts","src/reset_password/ResetPasswordViewModel.ts","src/rest/EntryResources.ts","src/rest/SessionResources.ts","src/rest/SettingsResources.ts","src/rest/index.ts","src/signin/Signin.ts","src/signin/SigninDialog.ts","src/signin/SigninModel.ts","src/signin/SigninPanel.ts","src/signin/SigninViewModel.ts","src/signout/Signout.ts","src/signup/Signup.ts","src/signup/SignupDialog.ts","src/signup/SignupModel.ts","src/signup/SignupPanel.ts","src/signup/SignupViewModel.ts","src/verify_email/VerifyEmail.ts","src/verify_email/VerifyEmailModel.ts","src/verify_email/VerifyEmailViewModel.ts","temp/pip-suite-entry-html.min.js"],"names":[],"mappings":"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":"pip-suite-entry.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import { IEntryCommonService } from \"../common/IEntryCommonService\";\nimport { ChangePasswordViewModel } from './ChangePasswordViewModel';\nimport { IEntryService } from \"../common/EntryService\";\n\nexport class ChangePasswordController {\n\n    constructor(\n        $state: ng.ui.IStateService,\n        private pipChangePasswordViewModel: ChangePasswordViewModel,\n        pipEntryCommon: IEntryCommonService,\n        pipEntry: IEntryService,\n        pipAuthState: pip.rest.IAuthStateService,\n        pipSession: pip.services.ISessionService,\n        private $window: ng.IWindowService\n    ) {\n        \"ngInject\";\n\n        pipEntryCommon.configureAppBar();\n\n        if (pipEntry.passwordExpire === false || !pipSession.isOpened()) {\n            $state.go(pipAuthState.signinState(), {});\n        }\n    }\n\n    public goBack() {\n        this.$window.history.back();\n    }\n\n    public get config(): any {\n        return this.pipChangePasswordViewModel.config;\n    }\n\n    public onChange() {\n        this.pipChangePasswordViewModel.onChange();\n    }\n}\n\n{\n    angular.module('pipEntry.ChangePassword', ['pipEntry.Common', 'pipChangePasswordPanel']);\n\n}","import { ChangePasswordViewModel } from './ChangePasswordViewModel';\n\nexport interface IChangePasswordDialogService {\n    show(params: any, successCallback?: () => void, cancelCallback?: () => void): void;\n}\n\n{\n    class ChangePasswordDialogService implements IChangePasswordDialogService {\n        public constructor(private $mdDialog: angular.material.IDialogService) { };\n        public show(params: any, successCallback?: () => void, cancelCallback?: () => void) {\n            this.$mdDialog.show({\n                targetEvent: params.event,\n                templateUrl: 'change_password/ChangePasswordDialog.html',\n                controller: ChangePasswordDialogController,\n                controllerAs: '$ctrl',\n                locals: {\n                    params: params\n                },\n                clickOutsideToClose: false\n            })\n                .then(() => {\n                    if (successCallback) {\n                        successCallback();\n                    }\n                }, () => {\n                    if (cancelCallback) {\n                        cancelCallback();\n                    }\n                });\n        }\n    }\n\n    class ChangePasswordDialogController {\n        public goBack: any;\n\n        constructor(\n            $mdDialog: angular.material.IDialogService,\n            private pipChangePasswordViewModel: ChangePasswordViewModel\n        ) {\n            \"ngInject\";\n\n            this.goBack = $mdDialog.cancel;\n        }\n\n        public get config(): any {\n            return this.pipChangePasswordViewModel.config;\n        }\n\n        public onChange() {\n            this.pipChangePasswordViewModel.onChange(() => {\n                this.goBack();\n            });\n        }\n\n    }\n\n    angular.module('pipEntry.ChangePasswordDialog', ['pipEntry.Common', \"pipChangePasswordPanel\"])\n        .service('pipChangePasswordDialog', ChangePasswordDialogService);\n\n}","import { EntryModel } from '../common/EntryModel';\nimport { IEntryCommonService } from \"../common/IEntryCommonService\";\nimport { IEntryDataService } from '../data/IEntryDataService';\nimport { IEntryService } from \"../common/EntryService\";\n\nexport class ChangePasswordModel extends EntryModel {\n    constructor(\n        pipEntryCommon: IEntryCommonService,\n        pipTransaction: pip.services.ITransactionService,\n        private $rootScope: ng.IRootScopeService,\n        private $location: ng.ILocationService,\n        private $state: ng.ui.IStateService,\n        private $injector: ng.auto.IInjectorService,\n        private pipAuthState: pip.rest.IAuthStateService,\n        private pipFormErrors: pip.errors.IFormErrorsService,\n        private pipRest: pip.rest.IRestService,\n        private pipTranslate: pip.services.ITranslateService,\n        private pipEntryData: IEntryDataService,\n        private pipEntry: IEntryService,\n        private pipToasts: pip.controls.IToastService\n    ) {\n        \"ngInject\";\n\n        super(pipEntryCommon);\n        this.transaction = pipTransaction.create('entry.change_password');\n\n    }\n\n    public init($scope): void {\n        this.initModel($scope);\n        this.setElementVisability();\n    }\n\n    private setElementVisability(): void {\n        this.hideObject.subTitle = new Boolean(this.hideObject.subTitle) == true;\n        this.hideObject.title = new Boolean(this.hideObject.title) == true;\n        this.hideObject.server = new Boolean(this.hideObject.server) == true;\n        this.hideObject.hint = new Boolean(this.hideObject.hint) == true;\n        this.hideObject.progress = new Boolean(this.hideObject.progress) == true;\n    }\n\n    public onShowToast(message: string, type: string): void {\n        if (!message) return;\n        message = this.pipTranslate.translate(message);\n        type = type || 'message';\n\n        if (type == 'message') {\n            this.pipToasts.showMessage(message, null, null, null);\n            return;\n        }\n        if (type == 'error') {\n            this.pipToasts.showError(message, null, null, null, null);\n            return;\n        }\n    }\n\n    public onChange(callback?: () => void): void {\n        if (this.config.form.$invalid) {\n            this.pipFormErrors.resetFormErrors(this.config.form, true);\n\n            return;\n        }\n\n        const transactionId = this.transaction.begin('PROCESSING');\n        if (!transactionId) return;\n        if (!this.pipRest.lockServerUrl) {\n            this.pipRest.serverUrl = this.config.data.serverUrl;\n        }\n\n        this.pipEntryData.expireChangePassword({\n            login: this.config.data.login,\n            old_password: this.config.data.password,\n            new_password: this.config.data.passwordNew,\n            user_id: this.pipEntryData.getUserId()\n        },\n            (data: any) => {\n                this.pipFormErrors.resetFormErrors(this.config.form, false);\n                if (this.transaction.aborted(transactionId)) return;\n\n                const message = String() + 'CHANGE_PWD_SUCCESS_TEXT';\n                this.onShowToast(message, 'message');\n                this.transaction.end();\n                if (callback) callback();\n                this.pipEntry.signout(\n                    () => {\n                        this.$state.go('signin', {\n                            server_url: this.config.data.serverUrl,\n                            login: this.config.data.login\n                        });\n                    }\n                );\n\n            },\n            (error: any) => {\n                this.transaction.end(error);\n                this.pipFormErrors.resetFormErrors(this.config.form, true);\n                this.pipFormErrors.setFormError(\n                    this.config.form, error, {\n                        'NO_LOGIN': 'login', // Missing account login\n                        'WRONG_LOGIN': 'login', // Account  was not found\n                        'LOGIN_NOT_FOUND': 'login', // Account  was not found\n                        'WRONG_PASSWORD': 'password', // Invalid password\n                        'act_execute': 'form', // Unknown error\n                        'UNKNOWN': 'form',\n                        '-1': 'form' // server not response\n                    }\n                );\n            }\n        );\n    }\n\n}","import { EntryPageConfig } from '../common/EntryPageConfig';\nimport { IEntryCommonService } from \"../common/IEntryCommonService\";\nimport { ChangePasswordViewModel } from './ChangePasswordViewModel';\n\n{\n    interface IChangePasswordPanelBindings {\n        [key: string]: any;\n\n\n    }\n\n    const ChangePasswordPanelBindings: IChangePasswordPanelBindings = {\n\n    }\n\n    class ChangePasswordPanelController {\n        public touchedErrorsWithHint: Function;\n        constructor(\n            private $scope: ng.IScope,\n            private pipFormErrors: pip.errors.IFormErrorsService,\n            private pipRest: pip.rest.IRestService,\n            private pipChangePasswordViewModel: ChangePasswordViewModel\n        ) {\n            \"ngInject\";\n\n            this.touchedErrorsWithHint = pipFormErrors.touchedErrorsWithHint;\n            pipChangePasswordViewModel.initModel($scope);\n\n\n        }\n\n        public $postLink(): void {\n            this.config.form = this.$scope.form;\n            this.config.data.password = null;\n            this.config.data.passwordNew = null;\n        }\n\n        public get config(): any {\n            return this.pipChangePasswordViewModel.config;\n        }\n\n        public get transaction(): any {\n            return this.pipChangePasswordViewModel.transaction;\n        }\n\n        public get showServerError(): any {\n            return this.pipChangePasswordViewModel.showServerError;\n        }\n\n        public get hideObject(): any {\n            return this.pipChangePasswordViewModel.hideObject;\n        }\n\n        public onShowToast(message: string, type: string): void {\n            this.pipChangePasswordViewModel.onShowToast(message, type);\n        }\n        \n        public onServerUrlChanged() {\n            this.config.onServerUrlChanged(this.config.form, this.config.selected.searchURLs);\n        }\n    \n        public onChanged() {\n            this.pipFormErrors.resetFormErrors(this.config.form, false);\n            this.pipFormErrors.resetFieldsErrors(this.config.form, null);\n            this.pipRest.serverUrl = this.config.selected.searchURLs;\n            this.config.data.serverUrl = this.config.selected.searchURLs;\n        }\n\n        public onChangePassword() {\n            this.pipFormErrors.resetFieldsErrors(this.config.form, 'passwordNew');\n        }\n        \n        public onChangePasswordNew() {\n            this.pipFormErrors.resetFieldsErrors(this.config.form, 'password');\n            this.pipFormErrors.resetFieldsErrors(this.config.form, 'passwordConfirm');\n        }\n        \n        public onChangePasswordConfirm() {\n            this.pipFormErrors.resetFieldsErrors(this.config.form, 'passwordNew');\n        }\n    }\n\n    const ChangePasswordPanel: ng.IComponentOptions = {\n        bindings: ChangePasswordPanelBindings,\n        controller: ChangePasswordPanelController,\n        templateUrl: 'change_password/ChangePasswordPanel.html'\n    }\n\n    angular.module(\"pipChangePasswordPanel\", ['pipFocused', 'pipEntry.Strings'])\n        .component('pipChangePasswordPanel', ChangePasswordPanel);\n}","import { ChangePasswordModel } from './ChangePasswordModel';\nimport { IEntryService } from \"../common/EntryService\";\n\nexport class ChangePasswordViewModel {\n    public model: ChangePasswordModel;\n\n    constructor(\n        pipEntryCommon: any,\n        pipTransaction: pip.services.ITransactionService,\n        $rootScope: ng.IRootScopeService,\n        $location: ng.ILocationService,\n        $state: ng.ui.IStateService,\n        $injector: ng.auto.IInjectorService,\n        pipAuthState: pip.rest.IAuthStateService,\n        pipFormErrors: pip.errors.IFormErrorsService,\n        pipRest: pip.rest.IRestService,\n        pipEntry: IEntryService,\n        private pipTranslate: pip.services.ITranslateService,\n        private pipEntryData: any,\n        private pipToasts: any\n    ) {\n        \"ngInject\";\n\n        this.model = new ChangePasswordModel(pipEntryCommon, pipTransaction, $rootScope, $location, $state,\n            $injector, pipAuthState, pipFormErrors, pipRest, pipTranslate, pipEntryData, pipEntry, pipToasts);\n    }\n\n    public get transaction(): pip.services.Transaction {\n        return this.model.transaction;\n    }\n\n    public get hideObject(): any {\n        return this.model.hideObject;\n    }\n\n    public get showServerError(): any {\n        return this.model.showServerError;\n    }\n\n    public get config(): any {\n        return this.model.config;\n    }\n\n    public initModel($scope) {\n        this.model.init($scope);\n    }\n\n    public onShowToast(message, type) {\n        this.model.onShowToast(message, type);\n    }\n\n    public onChange(callback?: () => void) {\n        this.model.onChange(callback);\n    }\n}\n\nangular.module('pipEntry.ChangePassword')\n    .service('pipChangePasswordViewModel', ChangePasswordViewModel);","/// <reference path=\"../../typings/tsd.d.ts\" />\nimport { IEntryDataService } from '../data/IEntryDataService';\n\n{\n    class LinkEmailUnique {\n        private oldEmail: string;\n\n        constructor(\n            $scope: ng.IScope,\n            $element: ng.IRootElementService,\n            $attrs: ng.IAttributes,\n            ngModel: any,\n            $http: ng.IHttpService,\n            pipEntryData: IEntryDataService\n        ) {\n            \"ngInject\";\n            \n            this.oldEmail = $attrs['pipEmailUnique'];\n\n            $scope.$watch($attrs['ngModel'], _.throttle((newValue) => {\n                const oldHint = ngModel.$validators.emailUnique;\n                if (!newValue || newValue.length == 0 || this.oldEmail == newValue) {\n                    ngModel.$setValidity('emailUnique', oldHint);\n                    return;\n                }\n                \n                if (!newValue) ngModel.$setValidity('emailUnique', true);\n\n                pipEntryData.signupValidate(newValue,\n                    (data) => {\n                        ngModel.$setValidity('emailUnique', true);\n                    },\n                    (err) => {\n                        ngModel.$setValidity('emailUnique', false);\n                    });\n            }, 500));\n        }\n    }\n\n    angular.module('pipEmailUnique', ['ngResource', 'pipEntryData'])\n        .directive('pipEmailUnique',\n            (\n                $http: ng.IHttpService,\n                pipEntryData: any\n            ) => {\n                return {\n                    restrict: 'A',\n                    require: 'ngModel',\n                    link: function (\n                        $scope: ng.IScope,\n                        $element: ng.IRootElementService,\n                        $attrs: ng.IAttributes,\n                        ngModel: any\n                    ) {\n                        new LinkEmailUnique($scope, $element, $attrs, ngModel, $http, pipEntryData);\n                    }\n                };\n            }\n        );\n}","import { IEntryService } from \"./EntryService\";\nimport { IEntryCommonService } from \"./IEntryCommonService\";\nimport { EntryPageConfig, IPastSessions, AuthSessionData } from './EntryPageConfig';\n\nclass EntryCommonService implements IEntryCommonService {\n    private _config: EntryPageConfig = new EntryPageConfig();\n\n    constructor(\n        private $rootScope: ng.IRootScopeService,\n        private $state: ng.ui.IState,\n        private pipAppBar: pip.nav.IAppBarService,\n        private pipNavService: pip.nav.INavService,\n        private pipRest: pip.rest.IRestService,\n        private pipEntry: IEntryService,\n        private pipFormErrors: pip.errors.IFormErrorsService,\n        private pipIdentity: pip.services.IIdentityService,\n        private pipTranslate: pip.services.ITranslateService,\n        private localStorageService: any\n    ) {\n        \"ngInject\";\n\n    }\n\n    private getLastUsedLogin(serverUrl: string): string {\n        let servers: IPastSessions = <IPastSessions>this.localStorageService.get('servers');\n        if (servers && servers[serverUrl]) {\n            return servers[serverUrl].login;\n        }\n\n        return undefined;\n    }\n\n    private getPastSessions(): IPastSessions {\n        let servers: IPastSessions = this.localStorageService.get('servers') || <IPastSessions>{};\n\n        return servers;\n    }\n\n    private getUsedServerUrls(): string[] {\n        let servers: IPastSessions = this.localStorageService.get('servers') || <IPastSessions>{};\n        let serverUrls: string[] = [];\n        let serverUrl: string;\n\n        for (var prop in servers) {\n            if (servers.hasOwnProperty(prop)) {\n                serverUrl = servers[prop].serverUrl;\n                if (serverUrl) {\n                    serverUrls.push(serverUrl);\n                }\n            }\n        }\n\n        return serverUrls;\n    }\n\n    public configureAppBar(): void {\n        this.pipNavService.sidenav.hide();\n        this.pipNavService.actions.hide();\n        this.pipNavService.appbar.part('menu', false);\n        if (this.pipEntry.showLanguage) {\n            this.pipNavService.appbar.part('actions', 'language');\n        }\n        if (this.pipEntry.appbarTitle) {\n            this.pipNavService.appbar.part('title', 'breadcrumb');\n        } else {\n            this.pipNavService.appbar.part('title', false);\n        }\n        this.pipNavService.breadcrumb.text = this.pipEntry.appbarTitle;\n        this.pipNavService.appbar.addShadow();\n        this.pipNavService.icon.hide();\n        this.pipNavService.search.close();\n        this.pipAppBar.part('icon', this.pipEntry.showIcon);\n        if (this.pipEntry.showIcon) {\n            this.pipNavService.icon.showIcon(this.pipEntry.appbarIcon);\n        }\n\n    };\n\n    public initScope($scope): EntryPageConfig {\n        this._config.appbarTitle = this.pipEntry.appbarTitle;\n        this._config.showIcon = this.pipEntry.showIcon;\n        this._config.showLanguage = this.pipEntry.showLanguage;\n        this._config.adminOnly = this.pipEntry.adminOnly;\n        this._config.fixedServerUrl = this.pipEntry.fixedServerUrl;\n        this._config.enableAvatar = this.pipEntry.enableAvatar;\n        this._config.useEmailAsLogin = this.pipEntry.useEmailAsLogin;\n        this._config.entryHideObject = this.pipEntry.entryHideObject;\n\n        let language: string = this.$state.params.language;\n        if (language) this.pipTranslate.use(language);\n\n        let email: string = null;\n        if (this._config.useEmailAsLogin) {\n            email = this.$state.params.email ? decodeURIComponent(this.$state.params.email) : this.$state.params.login ? decodeURIComponent(this.$state.params.login) : null;\n        } else {\n            email = this.$state.params.email ? decodeURIComponent(this.$state.params.email) : null;\n        }\n  \n        let login: string = null;\n        login = (this.$state.params.login) ? decodeURIComponent(this.$state.params.login) : null;\n\n        if (this.$state['current'].auth) {\n            if (this.pipIdentity.identity && this.pipIdentity.identity.user) {\n                email = this.pipIdentity.identity.user.email || this.pipIdentity.identity.user.login;\n                login = this.pipIdentity.identity.user.login;\n            }\n        }\n\n        this._config.data = {\n            serverUrl: this.$state.params.server_url ? decodeURIComponent(this.$state.params.server_url) : this.pipRest.serverUrl,\n            login: login,\n            email: email,\n            password: '',\n            remember: false,\n            adminOnly: this._config.adminOnly,\n            name: (this.$state.name != 'signup' && this.$state.params.name) ? this.$state.params.name : null,\n            code: this.$state.params.code || null,\n            resetCode: this.$state.params.reset_code || null\n        };\n        if (this._config.data.email && !this._config.data.login) {\n            this._config.data.login = this._config.data.email;\n        }\n        if (!this._config.data.serverUrl) {\n            throw new Error('Server url can not be empty!');\n        }\n\n        this._config.showServerUrl = false;\n        this._config.fixedServerUrl = false;\n        this._config.data.serverUrl = this._config.data.serverUrl || this.pipRest.serverUrl;\n\n        // Fixed server url shall disable changing URL by the user\n        if (this.pipEntry.fixedServerUrl) {\n            this._config.data.serverUrl = this.pipRest.serverUrl;\n            this._config.fixedServerUrl = true;\n        }\n\n        if (this.$state.name != 'signup') {\n            this._config.data.login = this._config.data.login || this.getLastUsedLogin(this._config.data.serverUrl);\n        }\n        this._config.serverUrls = this.getUsedServerUrls();\n        this._config.servers = this.getPastSessions();\n\n        this._config.selected = {};\n        this._config.selected.searchURLs = this._config.data.serverUrl;\n\n        // Set login from history\n        if (!this.$state['current'].auth) {\n            if (this._config.data.serverUrl && !this._config.data.login && this.$state.name != 'signup') {\n                let server: any = this._config.servers[this._config.data.serverUrl];\n                this._config.data.login = (server || {}).login;\n            }\n        }\n\n        this._config.filterItem = (item) => { return this.filterItem(item) };\n        this._config.getMatches = (query) => { return this.getMatches(query) };\n        this._config.onServerUrlChanged = (form?: any, url?: string) => { this.onServerUrlChanged(form, url) };\n        this._config.isEmpty = _.isEmpty;\n\n        return _.cloneDeep(this._config);\n    }\n\n    private filterItem(item): any {\n        let result = (this._config.selected.searchURLs && item\n            && item.toLowerCase().indexOf(this._config.selected.searchURLs.toLowerCase()) >= 0);\n        return result;\n    }\n\n    private getMatches(query: string): any {\n        if (!query)\n            return this._config.showServerUrl;\n\n        this._config.data.serverUrl = query;\n        this._config.selected.searchURLs = query;\n        return _.filter(this._config.serverUrls, this._config.filterItem);\n    }\n\n    private onServerUrlChanged(form?: any, url?: string) {\n        form = form ? form : this._config.form;\n        url = url ? url : this._config.selected.searchURLs;\n\n        if (!url) return;\n        let server = this._config.servers[url];\n\n        if (server && this.$state.name != 'signup') {\n            this._config.data.login = server.login;\n            this.pipRest.serverUrl = url;\n            this._config.data.serverUrl = url;\n        }\n\n        if (form) {\n            this.pipFormErrors.resetFormErrors(form, false);\n            this.pipFormErrors.resetFieldsErrors(form, null);\n        }\n    }\n}\n\nangular.module('pipEntry.CommonService', [])\n    .service('pipEntryCommon', EntryCommonService);\n","export class EntryHideObject {\n    public remember?: boolean = false;\n    public title?: boolean;\n    public server?: boolean;\n    public forgotPassword?: boolean;\n    public signup?: boolean;\n    public hint?: boolean;\n    public progress?: boolean;\n    public subTitle?: boolean;\n    public successTitle?: boolean;\n    public subTitle1?: boolean;\n    public subTitle2?: boolean;\n    public agreement?: boolean;\n    public passwordConfirm?: boolean;\n    public signin?: boolean;\n    public resetSubTitle?: boolean;\n    public changePwdTitle?: boolean;\n    public changePwdSubTitle?: boolean;\n}","import { IEntryService } from \"../common/EntryService\";\nimport { AuthSessionData } from '../common/EntryPageConfig';\n\nfunction initEntry(pipEntry: IEntryService, $rootScope: ng.IRootScopeService, pipSession: pip.services.ISessionService,\n    pipDataCache: pip.rest.IDataCacheService, pipTimer: pip.services.ITimerService): void {\n\n    // Reload session to avoid signin\n    $rootScope.$on(pip.services.SessionOpenedEvent, (event: ng.IAngularEvent, data: AuthSessionData) => {\n        pipDataCache.clear();\n        pipTimer.start();\n    });\n\n    $rootScope.$on(pip.services.SessionClosedEvent, (event: ng.IAngularEvent, data: AuthSessionData) => {\n        pipDataCache.clear();\n    });\n\n    // Reload session to avoid signin\n    // todo may be start optionaly\n    pipEntry.reopenSession();\n}\n\nangular.module('pipEntry.Service')\n    .run(initEntry);","import { EntryPageConfig } from './EntryPageConfig';\nimport { IEntryCommonService } from \"./IEntryCommonService\";\nimport { EntryHideObject } from './EntryHideObject';\n\nexport class EntryModel {\n    public config: EntryPageConfig;\n    public hideObject: EntryHideObject;\n    public showServerError: boolean = true;\n    public transaction: pip.services.Transaction;\n\n    constructor(\n        public pipEntryCommon: IEntryCommonService,\n    ) { \n        \"ngInject\";\n        \n    }\n\n    protected initModel($scope) {\n        this.config = this.pipEntryCommon.initScope($scope);\n        this.config.form = this.config.form || $scope.form;\n        this.hideObject = this.config.entryHideObject; \n    }\n}","import { EntryConfig } from './EntryService';\n\nexport class EntryPageConfig extends EntryConfig {\n    data: EntryDataConfig;\n    showServerUrl: boolean = false;\n    serverUrls: string[];\n    servers: IPastSessions;\n    selected: any;\n    filterItem: Function;\n    getMatches: Function;\n    onServerUrlChanged: Function;\n    isEmpty: Function;\n    form: any;\n}\n\nexport class EntryDataConfig {\n    login: string;\n    serverUrl: string;\n    email: string;\n    password: string;\n    passwordNew?: string;\n    remember: boolean;\n    adminOnly: boolean;\n    name: string;\n    code: string;\n    resetCode: string;\n}\n\n// export angular events\n// export const AuthSessionOpenedEvent = 'pipSessionOpened';\n// export const AuthSessionClosedEvent = 'pipSessionClosed';\n// export const AutoPullChangesEvent = 'pipAutoPullChanges';\n\nexport class SigninParams {\n    public email?: string;\n    public login: string;\n    public serverUrl: string;\n    public password?: string;\n    public remember?: boolean;\n    public adminOnly?: boolean;\n}\n\nexport class SignupParams {\n    public login: string;\n    public email?: string;\n    public name?: string;\n    public serverUrl: string;\n    public password?: string;\n    public remember?: boolean;\n    public adminOnly?: boolean;\n    public language?: string;\n    public theme?: string; \n    public time_zone?: string;\n}\n\nexport class AuthSessionData {\n    serverUrl: string = undefined;\n    sessionId: string = undefined;\n    userId: string = undefined;\n}\n\n\nexport class PastSession { \n    public login: string;\n    public serverUrl: string;\n}\n\n\nexport interface IPastSessions {\n    [key: string]: PastSession\n}\n","import { IPastSessions, AuthSessionData } from './EntryPageConfig';\nimport { SessionData } from '../data/SessionData';\nimport { EmailSettings } from '../data/EmailSettings';\nimport { EntryHideObject } from './EntryHideObject';\n\nexport interface IEntryService {\n    appbarTitle: string;\n    appbarIcon: string;\n    showIcon: boolean;\n    showLanguage: boolean;\n    adminOnly: boolean;\n    fixedServerUrl: boolean;\n    enableAvatar: boolean;\n    useEmailAsLogin: boolean;\n    isPostSignup: boolean;\n    passwordExpire: boolean;\n    entryHideObject: EntryHideObject;\n\n    openSession(data: SessionData, remember?: boolean): void;\n    getUserId(data: SessionData): string;\n    // restoreSession(callback: Function): void;\n    reopenSession(): void;\n    closeSession(): void;\n    signout(successCallback?: () => void): void\n}\n\nexport interface IEntryProvider {\n    appbarTitle: string;\n    appbarIcon: string;\n    showIcon: boolean;\n    showLanguage: boolean;\n    adminOnly: boolean;\n    fixedServerUrl: boolean;\n    enableAvatar: boolean;\n    useEmailAsLogin: boolean;\n    isPostSignup: boolean;\n    passwordExpire: boolean;\n    entryHideObject: EntryHideObject;\n}\n\nexport class EntryConfig {\n    public appbarTitle: string;\n    public appbarIcon: string;\n    public showIcon: boolean;\n    public showLanguage: boolean;\n    public adminOnly: boolean;\n    public fixedServerUrl: boolean;\n    public enableAvatar: boolean;\n    public useEmailAsLogin: boolean;\n    public isPostSignup: boolean;\n    public entryHideObject: EntryHideObject;\n    // control expare password by change_pwd_time field\n    public passwordExpire: boolean;\n}\n\nclass EntryService implements IEntryService {\n    private sessionState: string;\n\n    constructor(\n        private config: EntryConfig,\n        private pipRest: pip.rest.IRestService,\n        private localStorageService: any,\n\t\tprivate $cookies: any,\n        private $cookieStore: any,\n        private pipSession: pip.services.ISessionService,\n        private pipIdentity: pip.services.IIdentityService,\n        private pipTimer: pip.services.ITimerService,\n        private pipTranslate: pip.services.ITranslateService,\n        private pipTheme: pip.themes.IThemeService,\n        private $timeout: ng.ITimeoutService,\n        private pipAuthState: pip.rest.IAuthStateService\n    ) {\n        \"ngInject\";\n\n        this.pipSession.addOpenListener((callback: Function) => {\n            this.restoreSession(callback);\n        });\n\n    }\n\n    private restore(data: AuthSessionData): AuthSessionData {\n        let result: AuthSessionData = new AuthSessionData();\n        for (let property in data) {\n            if (data.hasOwnProperty(property)) {\n                if (!_.isObject(data[property])) {\n                    result[property] = /* this.$cookieStore.get(property) */ this.$cookies.get(property) || this.localStorageService.get(property);\n                } else {\n                    result[property] = data[property];\n                }\n            }\n        }\n\n        return result;\n    }\n\n    private storeToLocal(data: any): void {\n        for (let property in data) {\n            if (data.hasOwnProperty(property) && !_.isObject(data[property])) {\n                this.localStorageService.set(property, data[property]);\n            }\n        }\n    }\n\n    private removeLocal(data: any): void {\n        for (let property in data) {\n            if (data.hasOwnProperty(property) && !_.isObject(data[property])) {\n                this.localStorageService.remove(property);\n            }\n        }\n    }\n\n    private storeToCookie(data: any): void {\n        for (let property in data) {\n            if (data.hasOwnProperty(property) && !_.isObject(data[property])) {\n                // this.$cookieStore.put(property, data[property]);\n\t\t\t\tthis.$cookies.put(property, data[property], {path: '/'});\n            }\n        }\n    }\n\n    private removeCookie(data: any): void {\n        for (let property in data) {\n            if (data.hasOwnProperty(property) && !_.isObject(data[property])) {\n                // this.$cookieStore.remove(property);\n\t\t\t\tthis.$cookies.remove(property);\n            }\n        }\n    }\n\n    private storeKnownServer(value: string): void {\n        if (!value) return;\n        \n        // this.$cookieStore.put(value, value);\n\t\tthis.$cookies.put(value, value, {path: '/'});\n        this.localStorageService.set(value, value);\n    }\n\n    public get appbarIcon(): string {\n        return this.config.appbarIcon;\n    }\n\n    public get appbarTitle(): string {\n        return this.config.appbarTitle;\n    }\n\n    public get showIcon(): boolean {\n        return this.config.showIcon;\n    }\n\n    public get showLanguage(): boolean {\n        return this.config.showLanguage;\n    }\n\n    public get adminOnly(): boolean {\n        return this.config.adminOnly;\n    }\n\n    public get fixedServerUrl(): boolean {\n        return this.config.fixedServerUrl;\n    }\n\n    public get passwordExpire(): boolean {\n        return this.config.passwordExpire;\n    }\n\n    public get entryHideObject(): EntryHideObject {\n        return this.config.entryHideObject;\n    }\n\n    public get enableAvatar(): boolean {\n        return this.config.enableAvatar;\n    }\n\n    public get useEmailAsLogin(): boolean {\n        return this.config.useEmailAsLogin;\n    }\n\n    public get isPostSignup(): boolean {\n        return this.config.isPostSignup;\n    }\n\n    public openSession(data: SessionData, remember?: boolean): void {\n        let session: AuthSessionData = new AuthSessionData();\n        session.sessionId = data ? data.id : null;\n        session.userId = this.getUserId(data);\n        session.serverUrl = this.pipRest.serverUrl;\n\n        if (!session.sessionId) {\n            throw new Error('Error: session Id not found');\n        }\n\n        if (!session.userId) {\n            throw new Error('Error: user Id not found');\n        }\n\n        this.sessionState = 'open';\n\n        // Set default headers for subsequent HTTP requests\n        this.pipRest.setHeaders({\n            'x-session-id': session.sessionId\n        });\n\n        // Save ids into local storage\n        if (remember) {\n            let servers: IPastSessions = this.localStorageService.get('servers') || <IPastSessions>{};\n            servers[session.serverUrl] = {\n                serverUrl: session.serverUrl,\n                login: data.user.login\n            };\n            this.localStorageService.set('servers', servers);\n            this.storeToLocal(session);\n        }\n\n        this.storeKnownServer(session.serverUrl)\n\n        // Remove from cookie store\n        this.storeToCookie(session);\n        // Send broadcast\n \n        this.pipIdentity.identity = data;\n        this.pipSession.open(session);\n        this.pipTranslate.use(data.user.language);\n\n        if (data.user.theme && data.user.theme != this.pipTheme.theme) {\n            this.pipTheme.use(data.user.theme);\n        }\n    }\n\n    public getUserId(data: SessionData): string {\n        if (!data) {\n            return null;\n        }\n        let id: string;\n        id = data.user_id ? data.user_id : data.user ? data.user.id : null;\n\n        return id;\n    }\n\n    private checkEmailVerification(data: SessionData): boolean {\n        return (data.user && data.user.settings &&\n            data.user.settings['verified_email'] && data.user.settings['verified_email'] == \"true\");\n    }\n\n    private restoreSessionComplete(data: SessionData, callback: Function): void {\n        if (angular.isFunction(callback)) {\n            callback()\n        }\n        this.pipIdentity.identity = data;\n        this.pipTranslate.use(data.user.language);        \n    }\n\n    private restoreSession(callback: Function): void {\n        if (this.sessionState === 'open') {\n            if (angular.isFunction(callback)) {\n                callback()\n            }\n\n            return;\n        }\n\n        let session: AuthSessionData = new AuthSessionData();\n        session = this.restore(session);\n\n        if (!session || !session.sessionId) {\n            this.signout(() => {\n                this.pipAuthState.goToUnauthorized({});\n            });\n\n            return;\n        }\n\n        this.pipRest.getResource('restoreSessions').call(\n            {\n                session_id: session.sessionId\n            },\n            (data: SessionData) => {\n                if (!data || !data.id) {\n                    this.signout(() => {\n                        this.pipAuthState.goToUnauthorized({});\n                    });\n\n                    return;\n                }\n\n                session.userId = this.getUserId(data);\n                session.serverUrl = this.pipRest.serverUrl;\n                //  cookie store\n                this.storeToCookie(session);\n\n                if (this.checkEmailVerification(data)) {\n                    this.restoreSessionComplete(data, callback);\n                } else {\n                    this.pipRest.getResource('email_settings').get(\n                        {\n                            user_id: data.user.id\n                        },\n                        (setting: EmailSettings) => {\n                            if (setting && setting.verified && setting.email == data.user.login) {\n                                this.restoreSessionComplete(data, callback);\n                            } else {\n                                this.restoreSessionComplete(data, () => {\n                                    if (callback) callback();\n                                    this.pipAuthState.go('verify_email', { email: data.user.login || data.user['email'], serverUrl: this.pipRest.serverUrl });\n                                });\n                            }\n                        }, \n                        (error: any) => {\n\n                        });\n                }\n            },\n            (error: any) => {\n                if (angular.isFunction(callback)) {\n                    callback(error);\n                }\n\n                this.signout(() => {\n                    this.pipAuthState.goToUnauthorized({});\n                });\n            });\n    }\n\n    public reopenSession(): void {\n        let session: AuthSessionData = new AuthSessionData();\n        session = this.restore(session);\n\n        if (!session || !session.sessionId) {\n            this.signout(() => {\n                this.pipAuthState.goToUnauthorized({});\n            });\n\n            return;\n        }\n\n        this.sessionState = 'reopen';\n        // Set default headers for subsequent HTTP requests\n        this.pipRest.setHeaders({\n            'x-session-id': session.sessionId\n        });\n\n        if ((!this.pipRest.lockServerUrl || !this.pipRest.serverUrl) && session.serverUrl) {\n            this.pipRest.serverUrl = session.serverUrl;\n        }\n\n        this.pipSession.open(session);\n    }\n\n    public closeSession(): void {\n        let session: AuthSessionData = new AuthSessionData();\n        session.sessionId = null;\n        session.userId = null;\n        session.serverUrl = null;\n\n        this.pipRest.setHeaders({\n            'x-session-id': undefined\n        });\n        this.pipIdentity.identity = null;\n        // Remove ids into local storage\n        this.removeLocal(session);\n        // Remove from cookie store\n        this.removeCookie(session);\n        // Stop timer\n        this.pipTimer.stop();\n        // Send broadcast\n        this.pipSession.close();\n    }\n\n    public signout(successCallback?: () => void): void {\n        if (this.pipSession.isOpened()) {\n            this.pipRest.getResource('signout').call({}, successCallback, successCallback);\n        }\n\n        this.closeSession();\n    }\n}\n\n\nclass EntryProvider implements IEntryProvider {\n    private _service: IEntryService;\n    private config: EntryConfig;\n\n    constructor() {\n        this.config = new EntryConfig();\n        this.config.appbarTitle = '';\n        this.config.appbarIcon = '';\n        this.config.adminOnly = false;\n        this.config.showIcon = false;\n        this.config.showLanguage = true;\n        this.config.adminOnly = false;\n        this.config.fixedServerUrl = null;\n        this.config.passwordExpire = false;\n        this.config.enableAvatar = false;\n        this.config.useEmailAsLogin = false;\n        this.config.isPostSignup = true;\n        this.config.entryHideObject = new EntryHideObject();\n    }\n\n    public set appbarIcon(newAppbarIcon: string) {\n        this.config.appbarIcon = newAppbarIcon;\n    }\n\n    public set appbarTitle(newAppbarTitle: string) {\n        this.config.appbarTitle = newAppbarTitle;\n    }\n\n    public set showIcon(newShowIcon: boolean) {\n        this.config.showIcon = newShowIcon;\n    }\n\n    public set showLanguage(newShowLanguage: boolean) {\n        this.config.showLanguage = newShowLanguage;\n    }\n\n    public set adminOnly(newAdminOnly: boolean) {\n        this.config.adminOnly = newAdminOnly;\n    }\n\n    public set fixedServerUrl(newFixedServerUrl: boolean) {\n        this.config.fixedServerUrl = newFixedServerUrl;\n    }\n\n    public set passwordExpire(value: boolean) {\n        this.config.passwordExpire = value;\n    }\n\n    public set entryHideObject(entryHideObject: EntryHideObject) {\n        this.config.entryHideObject = entryHideObject;\n    }\n\n    public set enableAvatar(value: boolean) {\n        this.config.enableAvatar = value;\n    }\n\n    public set useEmailAsLogin(value: boolean) {\n        this.config.useEmailAsLogin = value;\n    }\n\n    public set isPostSignup(value: boolean) {\n        this.config.isPostSignup = value;\n    }\n\n    public $get(\n        pipRest: pip.rest.IRestService,\n        localStorageService: any,\n\t\t$cookies: any,\n        $cookieStore: any,\n        pipSession: pip.services.ISessionService,\n        pipIdentity: pip.services.IIdentityService,\n        pipTimer: pip.services.ITimerService,\n        pipTranslate: pip.services.ITranslateService,\n        pipTheme: pip.themes.IThemeService,\n        $timeout: ng.ITimeoutService,\n        pipAuthState: pip.rest.IAuthStateService\n    ) {\n        \"ngInject\";\n        if (_.isNull(this._service) || _.isUndefined(this._service)) {\n            this._service = new EntryService(this.config, pipRest, localStorageService, $cookies, $cookieStore,\n                pipSession, pipIdentity, pipTimer, pipTranslate, pipTheme, $timeout, pipAuthState);\n        }\n\n        return this._service;\n    }\n}\n\nangular.module('pipEntry.Service', [])\n    .provider('pipEntry', EntryProvider);","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n(() => {\n    'use strict';\n\n    angular.module('pipEntry.Strings', [])\n        .config(function (pipTranslateProvider) {\n\n            // Set translation strings for the module\n            pipTranslateProvider.translations('en', {\n                // Common labels\n                'FULLNAME': 'First and last name',\n                'EMAIL': 'Email',\n                'LOGIN': 'Login',\n                'PASSWORD': 'Password',\n                'LANGUAGE': 'Language',\n                'GENDER': 'Gender',\n                'BIRTHDAY': 'Birthday',\n                'LOCATION': 'Location',\n                'VERIFY': 'Verify',\n                'CONTINUE': 'Continue',\n\n\n                // Common hints\n                'HINT_FULLNAME': \"Use your real name, so others know who you are\",\n                'HINT_PASSWORD': 'Minimum 6 characters',\n                'SIGNIN_HINT_PASSWORD': 'Please, type password',\n                'HINT_ABOUT': 'Few words about yourself',\n                'VERIFY_EMAIL': 'Please, verify your email address. ',\n                'HINT_EMAIL': 'Enter your email address, please',\n                'VERIFY_LOGIN': 'Please, verify your login address. ',\n                'HINT_LOGIN': 'Enter your login, please',\n\n                // Sign In page\n                'SIGNIN_TITLE': 'Sign in',\n                'SIGNIN_NOT_MEMBER': 'Not a member?',\n                'SIGNIN_REMEMBER': 'Remember',\n                'SIGNIN_FORGOT_PASSWORD': 'Forgot password?',\n                'SIGNIN_SIGNUP_HERE': ' Sign up here',\n\n                // Sign Up page\n                'SIGNUP_TITLE': 'Sign up',\n                'SIGNUP_NOT_MEMBER': 'Not a member? Sign up now',\n                'SIGNUP_TEXT_11': 'By clicking Sign up, you agree to the',\n                'SIGNUP_PRIVACY': 'privacy statement',\n                'SIGNUP_TEXT_12': 'and',\n                'SIGNUP_SERVICES': 'services agreement',\n                'SIGNUP_TEXT_2': 'Do you have an account?',\n                'SIGNUP_SIGNIN_HERE': ' Sign in here',\n                'SIGNUP_EMAIL_REGISTERED': 'This email is already registered',\n                'SIGNUP_LOGIN_REGISTERED': 'This login is already registered',\n                'SIGNUP_FULLNAME_WRONG': 'xxxx',\n                'SIGNUP_EMAIL_WRONG': 'xxxx',\n                'SIGNUP_LOGIN_WRONG': 'xxxx',\n\n                // Sign Up Details page\n                'POST_SIGNUP_TITLE': 'Welcome to Pip.Life',\n                'POST_SIGNUP_TEXT_1': 'Your account was successfully created.',\n                'POST_SIGNUP_TEXT_2': 'Tell us some more about yourself.',\n\n                // Recover Password page\n                'RECOVER_PWD_TITLE': 'Forgot password?',\n                'RECOVER_PWD_TEXT_1_LOGIN': \"Enter the login you used when you joined and we'll send you instructions to reset your password.\",\n                'RECOVER_PWD_TEXT_1_EMAIL': \"Enter the e-mail you used when you joined and we'll send you instructions to reset your password.\",\n                'RECOVER_PWD_TEXT_2': 'For security reasons, we do NOT store your password. So rest assured that we will never send your password via email.',\n                'RECOVER_PWD_RECOVER': 'Recover password',\n\n                // Reset Password page\n                'RESET_PWD_PASSWORD': 'Reset password',\n                'RESET_PWD_TEXT_LOGIN': 'Enter the login together with the reset code you received in email from. Remember the code is only active for 24 hours.',\n                'RESET_PWD_TEXT_EMAIL': 'Enter the e-mail together with the reset code you received in email from. Remember the code is only active for 24 hours.',\n                'RESET_PWD_SUCCESS_TEXT': 'Your password was successfully changed',\n\n                // Verify Email page\n                'VERIFY_EMAIL_WAIT': 'Email verification. Please, wait.',\n                'VERIFY_EMAIL_TITLE': 'Email verification',\n                'VERIFY_EMAIL_TEXT_1': 'Confirm your email address using verification code',\n                'VERIFY_EMAIL_TEXT_21': \"If you haven't received the code, press \",\n                'VERIFY_EMAIL_RESEND': 'resend',\n                'VERIFY_EMAIL_TEXT_22': 'to send it again.',\n                'VERIFY_EMAIL_SUCCESS_TEXT': 'Your email address was successfully verified. Thank you!',\n\n                'PASSWORD_MATCH': 'Passwords don\\'t match',\n                'PASSWORD_CONFIRM': 'Confirm the password',\n                'PASSWORD_SET': 'Set a password',\n\n                // Common entry resources\n                'ENTRY_CHANGE_SERVER': 'Change server',\n                'ENTRY_SERVER_URL': 'Server URL',\n                'ENTRY_RESET_CODE': 'Reset code',\n                'ENTRY_VERIFICATION_CODE': 'Verification code',\n                'ENTRY_NEW_PASSWORD': 'New password',\n                'ENTRY_SET_PASSWORD': 'Set Password',\n                'ENTRY_RESET_PASSWORD': 'Set',\n                'ENTRY_FREE': 'Free',\n                'ENTRY_REPEAT': 'Repeat',\n\n                // password changed resource\n                'CHANGE_PWD_PASSWORD': 'Change password',\n                'EXPIRE_CHANGE_PWD_PASSWORD': 'Change expire password',\n                'CHANGE_PWD_TEXT': 'Enter a new password to login.',\n                'EXPIRE_CHANGE_PWD_TEXT': 'Your password has expired. Enter a new password to login.',\n                'ENTRY_CHANGE_PASSWORD': 'Change',\n                'ENTRY_EXPIRE_CHANGE_PASSWORD': 'Change',\n                'OLD_PASSWORD': 'Current password',\n                'NEW_PASSWORD_SET': 'New password',\n                'NEW_PASSWORD_CONFIRM': 'Repeat password',\n                'CHANGE_PWD_SUCCESS_TEXT': 'Password changed successfuly',\n                'EXPIRE_CHANGE_PWD_SUCCESS_TEXT': 'Password changed successfuly',\n\n\n                // Validation errors\n                'ERROR_EMAIL_INVALID': 'Enter a valid email',\n                'ERROR_LOGIN_INVALID': 'Enter a valid login',\n                'ERROR_PASSWORD_INVALID': 'Enter a valid password',\n                'MINLENGTH_PASSWORD': 'Minimum password length 6 characters',\n                'ERROR_FULLNAME_INVALID': 'Enter full name',\n                'ERROR_CODE_INVALID': 'Enter a code from mail',\n                'ERROR_CODE_WRONG': 'Wrong recovery code',\n                'ERROR_SERVER_INVALID': 'Enter server URL',\n\n                //Languages\n                'LANGUAGE_RUSSIAN': 'Russian',\n                'LANGUAGE_ENGLISH': 'English',\n\n                // errors handling strings\n\n                'ERROR_ACT_EXECUTE': 'Bad Request. User was not found.',\n                'ERROR_WRONG_LOGIN': 'Account was not found',\n                'ERROR_LOGIN_NOT_FOUND': 'Account was not found',\n                'ERROR_NO_LOGIN': 'Missing account login',\n                'ERROR_WRONG_PASSWORD': 'Invalid password',\n                'ERROR_WRONG_CODE': 'Invalid password recovery code',\n                'ERROR_INVALID_CODE': 'Invalid email verification code',\n                'ERROR_NO_EMAIL': 'Missing email',\n                'ERROR_NO_NAME': 'Missing account name',\n                'ERROR_ALREADY_EXIST': 'User account already exist',\n                'ERROR_LOGIN_ALREADY_USED': 'User account already exist',\n                'ERROR_ALREADY_EXIST_EMAIL': 'User account already exist',\n                'ERROR_WRONG_LOGIN_EMAIL': 'Account was not found',\n                'ERROR_NO_LOGIN_EMAIL': 'Missing account login',\n                'ERROR_SERVER': 'Server is not responding',\n                'ERROR_ACCOUNT_LOCKED': 'Number of attempts exceeded. You account was locked.',\n                'ERROR_UNKNOWN': 'Unknown error',\n                'PASSWORD_IDENTICAL': 'Old and new passwords are identical'\n            });\n\n            pipTranslateProvider.translations('ru', {\n                // Common labels\n                'FULLNAME': 'Имя и фамилия',\n                'EMAIL': 'Адрес эл.почты',\n                'LOGIN': 'Логин',\n                'PASSWORD': 'Пароль',\n                'LANGUAGE': 'Язык',\n                'GENDER': 'Пол',\n                'BIRTHDAY': 'Дата рождения',\n                'LOCATION': 'Местонахождение',\n                'VERIFY': 'Подтвердить',\n                'CONTINUE': 'Продолжить',\n\n                // Common hints\n                'HINT_FULLNAME': \"Пожалуйста, введите свое полное имя - так, как вы хотите чтобы вас видели другие пользователи.\",\n                'HINT_PASSWORD': 'Минимум 6 символов',\n                'SIGNIN_HINT_PASSWORD': 'Введите пароль',\n                'HINT_ABOUT': 'Несколько слов о себе',\n                'VERIFY_EMAIL': 'Подтвердите адрес своей эл.почты',\n                'HINT_EMAIL': 'Введите адрес своей эл.почты',\n                'VERIFY_LOGIN': 'Подтвердите свой логин',\n                'HINT_LOGIN': 'Введите свой логин',\n                // Sign In page\n                'SIGNIN_TITLE': 'Вход в систему',\n                'SIGNIN_NOT_MEMBER': 'Еще не зарегистрировались?',\n                'SIGNIN_REMEMBER': 'Запомнить',\n                'SIGNIN_FORGOT_PASSWORD': 'Забыли пароль?',\n                'SIGNIN_SIGNUP_HERE': ' Зарегистрироваться здесь',\n\n                // Sign Up page\n                'SIGNUP_TITLE': 'Регистрация',\n                'SIGNUP_NOT_MEMBER': 'Новенький? Зарегистрируйтесь сейчас',\n                'SIGNUP_TEXT_11': 'Нажимая кнопку регистрация, я соглашаюсь с',\n                'SIGNUP_SERVICES': 'договором об услугах',\n                'SIGNUP_TEXT_12': 'и',\n                'SIGNUP_PRIVACY': 'соглашением о личных данных',\n                'SIGNUP_TEXT_2': 'Уже зарегистрировались?',\n                'SIGNUP_SIGNIN_HERE': ' Вход здесь',\n                'SIGNUP_EMAIL_REGISTERED': 'Введенный адрес эл.почты уже занят',\n                'SIGNUP_LOGIN_REGISTERED': 'Введенный логин уже занят',\n\n                // Sign Up Details page\n                'POST_SIGNUP_TITLE': 'Добро пожаловать в Pip.Life',\n                'POST_SIGNUP_TEXT_1': 'Ваша учетная запись создана.',\n                'POST_SIGNUP_TEXT_2': 'Несклько слов о о себе',\n\n                // Recover Password page\n                'RECOVER_PWD_TITLE': 'Забыли пароль?',\n                'RECOVER_PWD_TEXT_1_LOGIN': 'Введите логин, который вы использовали при регистрации и мы вышлем вам инструкции как изменить пароль.',\n                'RECOVER_PWD_TEXT_1_EMAIL': 'Введите эл. почту, которую вы использовали при регистрации и мы вышлем вам инструкции как изменить пароль.',\n                'RECOVER_PWD_TEXT_2': 'По соображениям безопасности мы НЕ храним пароли. Таким образом, мы никогда не пошлем ваш пароль по электронной почте.',\n                'RECOVER_PWD_RECOVER': 'Восстановить пароль',\n\n                // Reset Password page\n                'RESET_PWD_PASSWORD': 'Изменить пароль',\n                'RESET_PWD_TEXT_LOGIN': 'Введите логин вместе с кодом, который вы получили в почтовом сообщении. Помните, что код действителен только 24 часа.',\n                'RESET_PWD_TEXT_EMAIL': 'Введите эл. почту вместе с кодом, который вы получили в почтовом сообщении. Помните, что код действителен только 24 часа.',\n                'RESET_PWD_SUCCESS_TEXT': 'Ваш пароль успешно изменён',\n\n                // Verify Email page\n                'VERIFY_EMAIL_WAIT': 'Верификация эл. почты. Подождите немного.',\n                'VERIFY_EMAIL_TITLE': 'Подтверждение адреса эл.почты',\n                'VERIFY_EMAIL_TEXT_1': 'Введите код, который вы получили по эл.почте',\n                'VERIFY_EMAIL_TEXT_21': \"Если вы не получили почтовое сообщение с кодом, нажмите \",\n                'VERIFY_EMAIL_RESEND': 'отправить снова',\n                'VERIFY_EMAIL_TEXT_22': '.',\n                'VERIFY_EMAIL_SUCCESS_TEXT': 'Адрес вашей электронной почты успешно подтвержден. Спасибо!',\n\n                'PASSWORD_MATCH': 'Пароли не совпадают',\n                'PASSWORD_CONFIRM': 'Подтвердите пароль',\n                'PASSWORD_SET': 'Задайте пароль',\n\n                // Common entry resources\n                'ENTRY_CHANGE_SERVER': 'Изменить сервер',\n                'ENTRY_SERVER_URL': 'URL сервера',\n                'ENTRY_RESET_CODE': 'Код сброса пароля',\n                'ENTRY_VERIFICATION_CODE': 'Код проверки электронной почты',\n                'ENTRY_NEW_PASSWORD': 'Новый пароль',\n                'ENTRY_SET_PASSWORD': 'Изменить пароль',\n                'ENTRY_RESET_PASSWORD': 'Изменить',\n                'ENTRY_FREE': 'бесплатно',\n                'ENTRY_REPEAT': 'Повторить',\n\n                // password changed resource\n                'CHANGE_PWD_PASSWORD': 'Изменение пароля',\n                'EXPIRE_CHANGE_PWD_PASSWORD': 'Изменение пароля',\n                'CHANGE_PWD_TEXT': 'Для входа введите новый пароль.',\n                'EXPIRE_CHANGE_PWD_TEXT': 'Время действия Вашего пароля истекло. Для входа введите новый пароль.',\n                'ENTRY_CHANGE_PASSWORD': 'Изменить',\n                'ENTRY_EXPIRE_CHANGE_PASSWORD': 'Изменить',\n                'OLD_PASSWORD': 'Текущий пароль',\n                'NEW_PASSWORD_SET': 'Новый пароль',\n                'NEW_PASSWORD_CONFIRM': 'Повторите пароль',\n                'CHANGE_PWD_SUCCESS_TEXT': 'Пароль был успешно изменен',\n                'EXPIRE_CHANGE_PWD_SUCCESS_TEXT': 'Пароль был успешно изменен',\n\n                // Validation errors\n                'ERROR_EMAIL_INVALID': 'Введите адрес электронной почты',\n                'ERROR_LOGIN_INVALID': 'Введите логин',\n                'ERROR_PASSWORD_INVALID': 'Введите пароль',\n                'MINLENGTH_PASSWORD': 'Минимальная длинна пароля 6 символов',\n                'ERROR_FULLNAME_INVALID': 'Введите полное имя',\n                'ERROR_CODE_INVALID': 'Введите код',\n                'ERROR_CODE_WRONG': 'Неправильный код',\n                'ERROR_SERVER_INVALID': 'Введите URL сервера',\n\n                //Languages\n                'LANGUAGE_RUSSIAN': 'Русский',\n                'LANGUAGE_ENGLISH': 'Английский',\n\n                // errors handling strings\n\n                'ERROR_ACT_EXECUTE': 'Неверный запрос. Пользователь не найден.',\n                'ERROR_WRONG_LOGIN': 'Учетная запись пользователя не существует',\n                'ERROR_LOGIN_NOT_FOUND': 'Учетная запись пользователя не существует',\n                'ERROR_NO_LOGIN': 'Не задан логин',\n                'ERROR_WRONG_PASSWORD': 'Не верный пароль',\n                'ERROR_WRONG_CODE': 'Не верный код восстановления пароля',\n                'ERROR_INVALID_CODE': 'Не верный код верификации электронной почты',\n                'ERROR_NO_EMAIL': 'Не задан адресс электронной почты',\n                'ERROR_NO_NAME': 'Не задано имя пользователя',\n                'ERROR_ALREADY_EXIST': 'Логин уже зарегистрирован',\n                'ERROR_LOGIN_ALREADY_USED': 'Логин уже зарегистрирован',\n                'ERROR_ALREADY_EXIST_EMAIL': 'Логин уже зарегистрирован',\n                'ERROR_WRONG_LOGIN_EMAIL': 'Учетная запись пользователя не существует',\n                'ERROR_NO_LOGIN_EMAIL': 'Не задан логин',\n                'ERROR_SERVER': 'Сервер не отвечает. Проверьте URL сервера.',\n                'ERROR_ACCOUNT_LOCKED': 'Количесво попыток превышено. Ваша учетная запись заблокирована.',\n                'ERROR_UNKNOWN': 'Неизвестная ошибка',\n                'PASSWORD_IDENTICAL': 'Старый и новый пароль совпадают'\n            });\n\n        });\n\n})();","/// <reference path=\"../../typings/tsd.d.ts\" />\n\nfunction compareOldPassword($parse: ng.IParseService): ng.IDirective {\n    return {\n        require: 'ngModel',\n        link: function (scope, elm, attrs, ngModelCtrl) {\n            ngModelCtrl['$validators'].ERROR_compareTo = function (modelValue, viewValue) {\n                if (ngModelCtrl['$isEmpty'](modelValue)) {\n                    return true;\n                }\n\n                let otherModelValue;\n                let otherModelValueGetter = $parse(attrs.compareTo);\n\n                if (!modelValue || !!otherModelValue) return true;\n\n                if (otherModelValueGetter) {\n                    otherModelValue = otherModelValueGetter(scope);\n\n                    return modelValue != otherModelValue;\n                } else {\n                    return true;\n                }\n            }\n        }\n    };\n}\nfunction compareNewPassword($parse: ng.IParseService): ng.IDirective {\n    return {\n        require: 'ngModel',\n        link: function (scope, elm, attrs, ngModelCtrl) {\n            ngModelCtrl['$validators'].ERROR_compareTo = function (modelValue, viewValue) {\n                if (ngModelCtrl['$isEmpty'](modelValue)) {\n                    return true;\n                }\n                let otherModelValue;\n                let otherModelValueGetter = $parse(attrs.compareTo1);\n\n                if (!modelValue || !!otherModelValue) return true;\n\n                if (otherModelValueGetter) {\n                    otherModelValue = otherModelValueGetter(scope);\n\n                    return modelValue != otherModelValue;\n                } else {\n                    return true;\n                }\n            }\n        }\n    };\n}\nfunction comparePasswordMatch($parse: ng.IParseService): ng.IDirective {\n    return {\n        require: 'ngModel',\n        link: function (scope, elm, attrs, ngModelCtrl) {\n            ngModelCtrl['$validators'].ERROR_compareTo = function (modelValue, viewValue) {\n                if (ngModelCtrl['$isEmpty'](modelValue)) {\n                    return true;\n                }\n                let otherModelValue;\n                let otherModelValueGetter = $parse(attrs.compareTo2);\n\n                if (!modelValue || !!otherModelValue) return true;\n\n                if (otherModelValueGetter) {\n                    otherModelValue = otherModelValueGetter(scope);\n\n                    return modelValue == otherModelValue;\n                } else {\n                    return true;\n                }\n            }\n        }\n    };\n}\nangular.module('pipPasswordMatch', [])\n    .directive('pipCompareOldPassword', compareOldPassword)\n    .directive('pipCompareNewPassword', compareNewPassword)\n    .directive('pipComparePasswordMatch', comparePasswordMatch);","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n(() => {\n    'use strict';\n\n    angular.module('pipEntry.Common', ['pipEntry.CommonService', 'pipEntry.Service'])\n   \n})();","import { Role } from './Role';\n\nexport class Account {\n    public roles: string[];\n    public theme: string;\n    public language: string;\n    public time_zone: string;\n    public create_time: string; // JSON date\n    public change_pwd_time: string; // JSON date\n    public login: string;\n    public name: string;\n    public id: string;\n    public custom_hdr?: any;\n    public custom_dat?: any;\n    public settings?: any;\n}","export class EmailSettings {\n    public name?: string;\n    public email?: string;\n    public language?: string;\n    public verified?: boolean;\n    public id?: string;\n}","import { SessionData } from './SessionData';\nimport { IEntryDataService } from './IEntryDataService';\nimport { IEntryService } from \"../common/EntryService\";\n\nclass EntryData implements IEntryDataService {\n    constructor(\n        private $stateParams: angular.ui.IStateParamsService,\n        private pipRest: pip.rest.IRestService,\n        private pipEntry: IEntryService,\n        private pipSession: pip.services.ISessionService\n    ) {\n        \"ngInject\";\n    }\n\n    public getUserId(): string {\n        let userId: string;\n        userId = this.pipSession.session ? this.pipSession.session.userId : null;\n\n        return userId;\n    }\n\n    public signup(params: any, successCallback?: (user: SessionData) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('signup').call(params, successCallback, errorCallback);\n    }\n\n    public recoverPassword(params: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('recoverPassword').call(\n            {\n                login: params.login\n            }, successCallback, errorCallback);\n    }\n\n    public resetPassword(params: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('resetPassword').call(\n            {\n                login: params.login,\n                code: params.code,\n                password: params.password\n            }, successCallback, errorCallback);\n    }\n\n    public expireChangePassword(params: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        let param = params || {};\n        param.user_id = this.getUserId();\n\n        return this.pipRest.getResource('changePassword').save(param, successCallback, errorCallback);\n    }\n\n    public requestEmailVerification(params: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('requestEmailVerification').call(\n            {\n     //           user_id: this.getUserId(),\n                login: params.login\n            }, successCallback, errorCallback);\n    }\n\n    public verifyEmail(params: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('verifyEmail').call(params, successCallback, errorCallback);\n    }\n\n    public readEmailSettings(params: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        let param = params || {};\n        param.user_id = param.user_id ? param.user_id : this.getUserId();  \n\n        return this.pipRest.getResource('email_settings').get(params, successCallback, errorCallback);\n    }\n\n    public signupValidate(login: string, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('signupValidate').get(\n            {\n                login: login\n            }, successCallback, errorCallback);\n    }\n\n    public saveSettingsKey(section: string, key: string, value: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('settings').save(\n            {\n                section: section,\n                key: key\n            },\n            { value: value },\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n}\n\n\nangular\n    .module('pipEntryData', ['pipRest'])\n    .service('pipEntryData', EntryData);\n\n\n","export class GENDER {\n    static MALE: 'male';\n    static FEMALE: 'female';\n    static NOT_SPECIFIED: 'n/s'\n}\n","export class Role {\n\n}\n\n","export class Session {\n    public user_id: string;\n    public user_name: string;\n    public address: string;\n    public client: string;\n    public request_time: string; // JSON date\n    public open_time: string; // JSON date\n    public active: boolean;\n    public id: string;\n}","import { Session } from './Session';\nimport { Account } from './Account';\n\nexport class SessionData extends Session {\n    public user: Account;\n    public data: any; // todo\n    public change_pwd_time?: string; // JSON date\n}\n\n","import { ISessionDataService } from './ISessionDataService';\nimport { IEntryService } from \"../common/EntryService\";\n\nclass SessionData implements ISessionDataService {\n    private RESOURCE: string = 'sessions';\n    private RESOURCE_USER: string = 'userSessions';\n    private RESOURCE_RESTORE: string = 'restoreSessions';\n\n    constructor(\n        private $stateParams: angular.ui.IStateParamsService,\n        private pipRest: pip.rest.IRestService,\n        private pipSession: pip.services.ISessionService\n    ) {\n        \"ngInject\";\n    }\n\n    public getSessionId(): string {\n        let sessionId: string;\n        sessionId = this.pipSession.session ? this.pipSession.session.sessionId : null;\n\n        return sessionId;\n    }\n\n    public getUserId(): string {\n        let userId: string;\n        userId = this.pipSession.session ? this.pipSession.session.userId : null;\n\n        return userId;\n    }\n\n    public getSessions(params: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params = params || {};\n        return this.pipRest.getResource(this.RESOURCE).call(params, successCallback, errorCallback);\n    }\n\n    public restoreSession(params: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params = params || {};\n        params.session_id = this.getSessionId();\n\n        return this.pipRest.getResource(this.RESOURCE_RESTORE).call(params, successCallback, errorCallback);\n    }\n\n    public getUserSessions(params: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params = params || {};\n        params.user_id = this.getUserId();\n\n        return this.pipRest.getResource(this.RESOURCE_USER).get(params, successCallback, errorCallback);\n    }\n\n}\n\n\nangular\n    .module('pipSessionData', ['pipRest'])\n    .service('pipSessionData', SessionData);","// data model\nimport './Session';\nimport './Account';\nimport './Enums';\nimport './Role';\nimport './SessionData'\n\n// data services\nimport './SessionDataService';\nimport './ISessionDataService';\nimport './EntryDataService';\nimport './IEntryDataService';\n\nangular.module('pipEntry.Data', ['pipRest', 'pipEntryData', 'pipSessionData']);\n\nexport * from './IEntryDataService';\nexport * from './ISessionDataService';\nexport * from './Session';\nexport * from './Account';\nexport * from './Enums';\nexport * from './Role';\nexport * from './SessionData'","import { IEntryCommonService } from \"../common/IEntryCommonService\";\nimport { ExpireChangePasswordViewModel } from './ExpireChangePasswordViewModel';\nimport { IEntryService } from \"../common/EntryService\";\n\nexport class ExpireChangePasswordController {\n\n    constructor(\n        $state: ng.ui.IStateService,\n        private pipExpireChangePasswordViewModel: ExpireChangePasswordViewModel,\n        pipEntryCommon: IEntryCommonService,\n        pipEntry: IEntryService,\n        pipAuthState: pip.rest.IAuthStateService,\n        pipSession: pip.services.ISessionService,\n        private $window: ng.IWindowService\n    ) {\n        \"ngInject\";\n\n        pipEntryCommon.configureAppBar();\n\n        if (pipEntry.passwordExpire === false || !pipSession.isOpened()) {\n            $state.go(pipAuthState.signinState(), {});\n        }\n    }\n\n    public goBack() {\n        this.$window.history.back();\n    }\n\n    public get config(): any {\n        return this.pipExpireChangePasswordViewModel.config;\n    }\n\n    public onChange() {\n        this.pipExpireChangePasswordViewModel.onChange();\n    }\n}\n\n{\n    angular.module('pipEntry.ExpireChangePassword', ['pipEntry.Common', 'pipExpireChangePasswordPanel']);\n\n}","import { ExpireChangePasswordViewModel } from './ExpireChangePasswordViewModel';\n\nexport interface IExpireChangePasswordDialogService {\n    show(params: any, successCallback?: () => void, cancelCallback?: () => void): void;\n}\n\n{\n    class ExpireChangePasswordDialogService implements IExpireChangePasswordDialogService {\n        public constructor(private $mdDialog: angular.material.IDialogService) { };\n        public show(params: any, successCallback?: () => void, cancelCallback?: () => void) {\n            this.$mdDialog.show({\n                targetEvent: params.event,\n                templateUrl: 'expire_change_password/ExpireChangePasswordDialog.html',\n                controller: ExpireChangePasswordDialogController,\n                controllerAs: '$ctrl',\n                locals: {\n                    params: params\n                },\n                clickOutsideToClose: false\n            })\n                .then(() => {\n                    if (successCallback) {\n                        successCallback();\n                    }\n                }, () => {\n                    if (cancelCallback) {\n                        cancelCallback();\n                    }\n                });\n        }\n    }\n\n    class ExpireChangePasswordDialogController {\n        public goBack: any;\n\n        constructor(\n            $mdDialog: angular.material.IDialogService,\n            private pipExpireChangePasswordViewModel: ExpireChangePasswordViewModel\n        ) {\n            \"ngInject\";\n\n            this.goBack = $mdDialog.cancel;\n        }\n\n        public get config(): any {\n            return this.pipExpireChangePasswordViewModel.config;\n        }\n\n        public onChange() {\n            this.pipExpireChangePasswordViewModel.onChange(() => {\n                this.goBack();\n            });\n        }\n\n    }\n\n    angular.module('pipEntry.ExpireChangePasswordDialog', ['pipEntry.Common', \"pipExpireChangePasswordPanel\"])\n        .service('pipExpireChangePasswordDialog', ExpireChangePasswordDialogService);\n\n}","import { EntryModel } from '../common/EntryModel';\nimport { IEntryCommonService } from \"../common/IEntryCommonService\";\nimport { IEntryDataService } from '../data/IEntryDataService';\nimport { IEntryService } from \"../common/EntryService\";\n\nexport class ExpireChangePasswordModel extends EntryModel {\n    constructor(\n        pipEntryCommon: IEntryCommonService,\n        pipTransaction: pip.services.ITransactionService,\n        private $rootScope: ng.IRootScopeService,\n        private $location: ng.ILocationService,\n        private $state: ng.ui.IStateService,\n        private $injector: ng.auto.IInjectorService,\n        private pipAuthState: pip.rest.IAuthStateService,\n        private pipFormErrors: pip.errors.IFormErrorsService,\n        private pipRest: pip.rest.IRestService,\n        private pipTranslate: pip.services.ITranslateService,\n        private pipEntryData: IEntryDataService,\n        private pipEntry: IEntryService,\n        private pipToasts: pip.controls.IToastService\n    ) {\n        \"ngInject\";\n\n        super(pipEntryCommon);\n        this.transaction = pipTransaction.create('entry.expire_change_password');\n\n    }\n\n    public init($scope): void {\n        this.initModel($scope);\n        this.setElementVisability();\n    }\n\n    private setElementVisability(): void {\n        this.hideObject.subTitle = new Boolean(this.hideObject.subTitle) == true;\n        this.hideObject.title = new Boolean(this.hideObject.title) == true;\n        this.hideObject.server = new Boolean(this.hideObject.server) == true;\n        this.hideObject.hint = new Boolean(this.hideObject.hint) == true;\n        this.hideObject.progress = new Boolean(this.hideObject.progress) == true;\n    }\n\n    public onShowToast(message: string, type: string): void {\n        if (!message) return;\n        message = this.pipTranslate.translate(message);\n        type = type || 'message';\n\n        if (type == 'message') {\n            this.pipToasts.showMessage(message, null, null, null);\n            return;\n        }\n        if (type == 'error') {\n            this.pipToasts.showError(message, null, null, null, null);\n            return;\n        }\n    }\n\n    public onChange(callback?: () => void): void {\n        if (this.config.form.$invalid) {\n            this.pipFormErrors.resetFormErrors(this.config.form, true);\n\n            return;\n        }\n\n        const transactionId = this.transaction.begin('PROCESSING');\n        if (!transactionId) return;\n        if (!this.pipRest.lockServerUrl) {\n            this.pipRest.serverUrl = this.config.data.serverUrl;\n        }\n\n        this.pipEntryData.expireChangePassword({\n            login: this.config.data.login,\n            old_password: this.config.data.password,\n            new_password: this.config.data.passwordNew,\n            user_id: this.pipEntryData.getUserId()\n        },\n            (data: any) => {\n                this.pipFormErrors.resetFormErrors(this.config.form, false);\n                if (this.transaction.aborted(transactionId)) return;\n\n                const message = String() + 'EXPIRE_CHANGE_PWD_SUCCESS_TEXT';\n                this.onShowToast(message, 'message');\n                this.transaction.end();\n                if (callback) callback();\n                this.pipEntry.signout(\n                    () => {\n                        this.$state.go('signin', {\n                            server_url: this.config.data.serverUrl,\n                            login: this.config.data.login\n                        });\n                    }\n                );\n\n            },\n            (error: any) => {\n                this.transaction.end(error);\n                this.pipFormErrors.resetFormErrors(this.config.form, true);\n                this.pipFormErrors.setFormError(\n                    this.config.form, error, {\n                        'NO_LOGIN': 'login', // Missing account login\n                        'WRONG_LOGIN': 'login', // Account  was not found\n                        'LOGIN_NOT_FOUND': 'login', // Account  was not found\n                        'WRONG_PASSWORD': 'password', // Invalid password\n                        'act_execute': 'form', // Unknown error\n                        '-1': 'form' // server not response\n                    }\n                );\n            }\n        );\n    }\n\n}","import { EntryPageConfig } from '../common/EntryPageConfig';\nimport { IEntryCommonService } from \"../common/IEntryCommonService\";\nimport { ExpireChangePasswordViewModel } from './ExpireChangePasswordViewModel';\n\n{\n    interface IExpireChangePasswordPanelBindings {\n        [key: string]: any;\n\n\n    }\n\n    const ExpireChangePasswordPanelBindings: IExpireChangePasswordPanelBindings = {\n\n    }\n\n    class ExpireChangePasswordPanelController {\n        public touchedErrorsWithHint: Function;\n        constructor(\n            private $scope: ng.IScope,\n            private pipFormErrors: pip.errors.IFormErrorsService,\n            private pipRest: pip.rest.IRestService,\n            private pipExpireChangePasswordViewModel: ExpireChangePasswordViewModel\n        ) {\n            \"ngInject\";\n\n            this.touchedErrorsWithHint = pipFormErrors.touchedErrorsWithHint;\n            pipExpireChangePasswordViewModel.initModel($scope);\n   \n\n        }\n\n        public $postLink(): void {\n            this.config.form = this.$scope.form;\n            this.config.data.password = null;\n            this.config.data.passwordNew = null;\n        }\n\n        public get config(): any {\n            return this.pipExpireChangePasswordViewModel.config;\n        }\n\n        public get transaction(): any {\n            return this.pipExpireChangePasswordViewModel.transaction;\n        }\n\n        public get showServerError(): any {\n            return this.pipExpireChangePasswordViewModel.showServerError;\n        }\n\n        public get hideObject(): any {\n            return this.pipExpireChangePasswordViewModel.hideObject;\n        }\n\n        public onServerUrlChanged() {\n            this.config.onServerUrlChanged(this.config.form, this.config.selected.searchURLs);\n        }\n    \n        public onChanged() {\n            this.pipFormErrors.resetFormErrors(this.config.form, false);\n            this.pipFormErrors.resetFieldsErrors(this.config.form, null);\n            this.pipRest.serverUrl = this.config.selected.searchURLs;\n            this.config.data.serverUrl = this.config.selected.searchURLs;\n        }\n\n        public onShowToast(message: string, type: string): void {\n            this.pipExpireChangePasswordViewModel.onShowToast(message, type);\n        }\n\n    }\n\n    const ExpireChangePasswordPanel: ng.IComponentOptions = {\n        bindings: ExpireChangePasswordPanelBindings,\n        controller: ExpireChangePasswordPanelController,\n        templateUrl: 'expire_change_password/ExpireChangePasswordPanel.html'\n    }\n\n    angular.module(\"pipExpireChangePasswordPanel\", ['pipFocused', 'pipEntry.Strings'])\n        .component('pipExpireChangePasswordPanel', ExpireChangePasswordPanel);\n}","import { ExpireChangePasswordModel } from './ExpireChangePasswordModel';\nimport { IEntryService } from \"../common/EntryService\";\n\nexport class ExpireChangePasswordViewModel {\n    public model: ExpireChangePasswordModel;\n\n    constructor(\n        pipEntryCommon: any,\n        pipTransaction: pip.services.ITransactionService,\n        $rootScope: ng.IRootScopeService,\n        $location: ng.ILocationService,\n        $state: ng.ui.IStateService,\n        $injector: ng.auto.IInjectorService,\n        pipAuthState: pip.rest.IAuthStateService,\n        pipFormErrors: pip.errors.IFormErrorsService,\n        pipRest: pip.rest.IRestService,\n        pipEntry: IEntryService,\n        private pipTranslate: pip.services.ITranslateService,\n        private pipEntryData: any,\n        private pipToasts: any\n    ) {\n        \"ngInject\";\n\n        this.model = new ExpireChangePasswordModel(pipEntryCommon, pipTransaction, $rootScope, $location, $state,\n            $injector, pipAuthState, pipFormErrors, pipRest, pipTranslate, pipEntryData, pipEntry, pipToasts);\n    }\n\n    public get transaction(): pip.services.Transaction {\n        return this.model.transaction;\n    }\n\n    public get hideObject(): any {\n        return this.model.hideObject;\n    }\n\n    public get showServerError(): any {\n        return this.model.showServerError;\n    }\n\n    public get config(): any {\n        return this.model.config;\n    }\n\n    public initModel($scope) {\n        this.model.init($scope);\n    }\n\n    public onShowToast(message, type) {\n        this.model.onShowToast(message, type);\n    }\n\n    public onChange(callback?: () => void) {\n        this.model.onChange(callback);\n    }\n}\n\nangular.module('pipEntry.ExpireChangePassword')\n    .service('pipExpireChangePasswordViewModel', ExpireChangePasswordViewModel);","import './data';\nimport './rest';\nimport './common';\nimport { VerifyEmailController, VerifyEmailSuccessController } from './verify_email/VerifyEmail';\nimport { RecoverPasswordController } from './recover_password/RecoverPassword';\nimport { ResetPasswordController } from './reset_password/ResetPassword';\nimport { PostSignupController } from './post_signup/PostSignup';\nimport { SignoutController } from './signout/Signout';\nimport { ChangePasswordController } from './change_password/ChangePassword';\nimport { ExpireChangePasswordController } from './expire_change_password/ExpireChangePassword';\n\n\n{\n    const configEntryRoutes = function (\n        $stateProvider: any,\n        $locationProvider: ng.ILocationProvider,\n        $httpProvider: ng.IHttpProvider,\n        pipAuthStateProvider: pip.rest.IAuthStateProvider,\n        // pipPartyDataProvider: any\n    ) {\n        // Switch to HTML5 routing mode\n        //$locationProvider.html5Mode(true);\n        // Configure module routes for all users\n        $stateProvider\n            .state('recover_password', {\n                url: '/recover_password?server_url&email',\n                auth: false,\n                controllerAs: '$ctrl',\n                controller: RecoverPasswordController,\n                templateUrl: 'recover_password/RecoverPassword.html'\n            })\n            .state('change_password', {\n                url: '/change_password?server_url&login',\n                auth: true,\n                controllerAs: '$ctrl',\n                controller: ChangePasswordController,\n                templateUrl: 'change_password/ChangePassword.html'\n            })   \n            .state('expire_change_password', {\n                url: '/expire_change_password?server_url&login',\n                auth: true,\n                controllerAs: '$ctrl',\n                controller: ExpireChangePasswordController,\n                templateUrl: 'expire_change_password/ExpireChangePassword.html'\n            })                      \n            .state('reset_password', {\n                url: '/reset_password?server_url&email&reset_code',\n                auth: false,\n                controller: ResetPasswordController,\n                controllerAs: '$ctrl',\n                templateUrl: 'reset_password/ResetPassword.html'\n            })\n            .state('signout', {\n                url: '/signout',\n                controller: SignoutController,\n                auth: false\n            })\n            .state('post_signup', {\n                url: '/post_signup?party_id',\n                auth: true,\n                controller: PostSignupController,\n                controllerAs: '$ctrl',\n                templateUrl: 'post_signup/PostSignup.html'\n            })\n            .state('verify_email', {\n                url: '/verify_email?server_url&email&code&language',\n                auth: true,\n                controller: VerifyEmailController,\n                controllerAs: '$ctrl',\n                templateUrl: 'verify_email/VerifyEmail.html'\n            })\n            .state('verify_email_success', {\n                url: '/verify_email_success',\n                auth: true,\n                controller: VerifyEmailSuccessController,\n                controllerAs: '$ctrl',\n                templateUrl: 'verify_email/VerifyEmailSuccess.html'\n            });\n\n        // Set default paths and states\n        pipAuthStateProvider.signinState = 'signin';\n        pipAuthStateProvider.signoutState = 'signout';\n    }\n\n    angular.module('pipEntry', [\n        'ui.router', 'ngMessages', 'ngCookies', 'LocalStorageModule',\n\n        'pipControls', 'pipLocations', 'pipErrors',\n        'pipTranslate', 'pipCommonRest',\n\n        'pipEntry.Strings',\n        'pipEntry.Data', 'pipEntry.Rest',\n        'pipEntry.Common', 'pipEntry.Signin', 'pipEntry.Signup',\n        'pipEntry.PostSignup', 'pipEntry.VerifyEmail',\n        'pipEntry.RecoverPassword', 'pipEntry.ResetPassword',\n        'pipEntry.ResetPasswordDialog', 'pipEntry.RecoverPasswordDialog',\n        'pipEntry.ChangePassword', 'pipEntry.ChangePasswordDialog',        \n        'pipEntry.ExpireChangePassword', 'pipEntry.ExpireChangePasswordDialog',     \n        'pipEntry.Templates'\n    ])\n        .config(configEntryRoutes);\n}\n\nexport * from './data';","import { PostSignupViewModel } from './PostSignupViewModel';\n\nexport class PostSignupController implements ng.IController {\n\tpublic $onInit() {}\n\t\n    constructor(\n        private $window: ng.IWindowService,\n        public $party: any,\n        private pipPostSignupViewModel: PostSignupViewModel\n    ) {\n        \"ngInject\";\n\n    }\n\n    public onPostSignupSubmit() {\n        this.pipPostSignupViewModel.onPostSignupSubmit();\n    }\n\n    public get transaction(): any {\n        return this.pipPostSignupViewModel.transaction;\n    }\n}\n\n{\n    angular.module('pipEntry.PostSignup', ['pipEntry.Common', \"pipPostSignupPanel\"])\n        .controller('pipPostSignupController', PostSignupController);\n}","import { PostSignupViewModel } from './PostSignupViewModel';\n\nexport interface IPostSignupDialogService {\n    show(params: any, successCallback?: () => void, cancelCallback?: () => void): void;\n}\n\n{\n    class PostSignupDialogService implements IPostSignupDialogService {\n        public constructor(private $mdDialog: angular.material.IDialogService) { };\n        public show(params: any, successCallback?: () => void, cancelCallback?: () => void) {\n            this.$mdDialog.show({\n                targetEvent: params.event,\n                templateUrl: 'post_signup/PostSignupDialog.html',\n                controller: PostSignupDialogController,\n                controllerAs: '$ctrl',\n                locals: {\n                    params: params\n                },\n                clickOutsideToClose: false\n            })\n                .then(() => {\n                    if (successCallback) {\n                        successCallback();\n                    }\n                }, () => {\n                    if (cancelCallback) {\n                        cancelCallback();\n                    }\n                });\n        }\n    }\n\n    class PostSignupDialogController {\n        public $party: any;\n        public goBack: any;\n\n        constructor(\n            $mdDialog: angular.material.IDialogService,\n            params: any,\n            private pipPostSignupViewModel: PostSignupViewModel\n        ) {\n            \"ngInject\";\n\n            this.goBack = $mdDialog.cancel;\n            this.$party = params.$party;\n        }\n\n        public onPostSignupSubmit() {\n            this.pipPostSignupViewModel.onPostSignupSubmit(() => {\n                this.goBack();\n            });\n        }\n\n        public get transaction() {\n            return this.pipPostSignupViewModel.transaction;\n        }\n    }\n\n    angular.module('pipEntry.PostSignupDialog', ['pipEntry.Common', \"pipPostSignupPanel\"])\n        .service('pipPostSignupDialog', PostSignupDialogService);\n\n}","import { EntryModel } from '../common/EntryModel';\nimport { IEntryCommonService } from \"../common/IEntryCommonService\";\nimport { IEntryDataService } from '../data/IEntryDataService';\nimport { IEntryService } from \"../common/EntryService\";\n\nexport class PostSignupModel extends EntryModel {\n    constructor(\n        pipEntryCommon: IEntryCommonService,\n        pipTransaction: pip.services.ITransactionService,\n        private $rootScope: ng.IRootScopeService,\n        private $location: ng.ILocationService,\n        private $state: ng.ui.IStateService,\n        private $injector: ng.auto.IInjectorService,\n        private pipErrorPageConfigService: pip.errors.IErrorPageConfigService,\n        private pipAuthState: pip.rest.IAuthStateService,\n        private pipFormErrors: pip.errors.IFormErrorsService,\n        private pipEntry: IEntryService,\n        private pipRest: pip.rest.IRestService,\n        private pipTranslate: pip.services.ITranslateService,\n        private pipEntryData: IEntryDataService,\n        private pipToasts: pip.controls.IToastService\n    ) {\n        \"ngInject\";\n\n        super(pipEntryCommon);\n        this.transaction = pipTransaction.create('entry.signin');\n    }\n\n    public init($scope) {\n        this.initModel($scope);\n        this.setElementVisability();\n    }\n\n    private setElementVisability() {\n        this.hideObject.subTitle = new Boolean(this.hideObject.subTitle) == true;\n        this.hideObject.title = new Boolean(this.hideObject.title) == true;\n        this.hideObject.successTitle = new Boolean(this.hideObject.successTitle) == true;\n        this.hideObject.progress = new Boolean(this.hideObject.progress) == true;\n    }\n\n    private checkSupported(): boolean {\n        let pipSystemInfo: any = this.$injector.has('pipSystemInfo') ? this.$injector.get('pipSystemInfo') : null;\n        if (!pipSystemInfo) {\n            return true;\n        }\n\n        if (!this.pipErrorPageConfigService || !this.pipErrorPageConfigService.configs || \n            !this.pipErrorPageConfigService.configs.Unsupported || !this.pipErrorPageConfigService.configs.Unsupported.Active) {\n\n            return true;\n        }\n\n        let browser: string = pipSystemInfo.browserName;\n        let version: string = pipSystemInfo.browserVersion;\n        version = version.split(\".\")[0];\n\n        let supported = this.pipErrorPageConfigService.configs.Unsupported.Params && this.pipErrorPageConfigService.configs.Unsupported.Params.supported ? this.pipErrorPageConfigService.configs.Unsupported.Params.supported : null;\n        if (!supported) {\n\n            return true;\n        }\n\n        if (browser && supported[browser] && version >= supported[browser]) {\n            return true;\n        }\n\n        this.pipEntry.signout();\n        this.$state.go(pip.errors.ErrorsUnsupportedState); \n        return false;\n    }\n\n    public onPostSignupSubmit(callback?: () => void) {\n        if (this.config.form.$invalid) {\n            this.pipFormErrors.resetFormErrors(this.config.form, true);\n            return;\n        }\n\n        var transactionId = this.transaction.begin('PROCESSING');\n        if (!transactionId) return;\n\n        if (callback) callback();\n        // this.pipPartyData.createParty(\n        //     this.config.data,\n        //     (party) => {\n        //         this.pipFormErrors.resetFormErrors(this.config.form, false);\n        //         if (this.transaction.aborted(transactionId)) return;\n\n        //         this.transaction.end();\n\n        //         if (this.checkSupported()) {\n        //             this.pipAuthState.goToAuthorized({\n        //                 party_id: party.id\n        //             });\n        //         }\n\n        //     },\n        //     (error) => {\n        //         this.transaction.end(error);\n        //         this.pipFormErrors.resetFormErrors(this.config.form, true);\n        //         this.pipFormErrors.setFormError(\n        //             this.config.form, error, {\n        //                 1000: 'form', // Unknown error\n        //                 1110: 'form', // Account is locked\n        //                 1111: 'form', // Number of attempts exceeded. Account was locked\n        //                 1112: 'form', // Account is not active\n        //                 '-1': 'form' // server not response\n        //             }\n        //         );\n        //     }\n        // );\n    }\n}","import { IEntryCommonService } from \"../common/IEntryCommonService\";\nimport { PostSignupViewModel } from './PostSignupViewModel';\nimport { GENDER } from '../data/Enums';\n\n{\n    interface IPostSignupPanelBindings {\n        [key: string]: any;\n\n        $party: any;\n    }\n\n    const PostSignupPanelBindings: IPostSignupPanelBindings = {\n        $party: '=pipParty',\n    }\n\n    class PostSignupPanelController {\n        public $party: any;\n        public picture: any;\n        public touchedErrorsWithHint: Function;\n\n        constructor(\n            private $scope: ng.IScope,\n            pipTranslate: pip.services.ITranslateService,\n            pipFormErrors: pip.errors.IFormErrorsService,\n            private pipPostSignupViewModel: PostSignupViewModel\n        ) {\n             \"ngInject\";\n\n            pipPostSignupViewModel.initModel($scope);\n            this.touchedErrorsWithHint = pipFormErrors.touchedErrorsWithHint;\n            this.config.data = {\n                id: this.$party.id,\n                name: this.$party.name,\n                email: this.$party.email,\n                about: this.$party.about,\n                language: pipTranslate.language,\n                birthday: this.$party.birthday,\n                gender: this.$party.gender || GENDER.NOT_SPECIFIED,\n                location: this.$party.location\n            };\n        }\n\n        public $postLink() {\n            this.config.form = this.$scope.form;\n        }\n\n        public get config(): any {\n            return this.pipPostSignupViewModel.config;\n        }\n\n        public get transaction(): any {\n            return this.pipPostSignupViewModel.transaction;\n        }\n\n        public get showServerError(): any {\n            return this.pipPostSignupViewModel.showServerError;\n        }\n\n        public get hideObject(): any {\n            return this.pipPostSignupViewModel.hideObject;\n        }\n\n        public onPictureChanged($control) {\n            if (!this.config.enableAvatar) { return }\n\n            if (this.picture)\n                this.picture.save(\n                    // Success callback\n                    function () {},\n                    // Error callback\n                    function (error) {\n                    }\n                );\n        }\n\n        public onPictureCreated($event) {\n            this.picture = $event.sender;\n        }\n    }\n\n    const PostSignupPanel: ng.IComponentOptions = {\n        bindings: PostSignupPanelBindings,\n        templateUrl: 'post_signup/PostSignupPanel.html',\n        controller: PostSignupPanelController\n    }\n\n    angular.module(\"pipPostSignupPanel\", ['pipFocused', 'pipEntry.Strings'])\n        .component('pipPostSignupPanel', PostSignupPanel);\n}","import { PostSignupModel } from './PostSignupModel';\nimport { IEntryService } from \"../common/EntryService\";\nimport { IEntryDataService } from '../data/IEntryDataService';\nimport { IEntryCommonService } from \"../common/IEntryCommonService\";\n\nexport class PostSignupViewModel {\n    public model: PostSignupModel;\n\n    constructor(\n        pipEntryCommon: IEntryCommonService,\n        pipTransaction: pip.services.ITransactionService,\n        $rootScope: ng.IRootScopeService,\n        $location: ng.ILocationService,\n        $state: ng.ui.IStateService,\n        $injector: ng.auto.IInjectorService,\n        pipErrorPageConfigService: pip.errors.IErrorPageConfigService,\n        pipAuthState: pip.rest.IAuthStateService,\n        pipEntry: IEntryService,\n        pipFormErrors: pip.errors.IFormErrorsService,\n        pipRest: pip.rest.IRestService,\n        private pipTranslate: pip.services.ITranslateService,\n        private pipEntryData: IEntryDataService,\n        private pipToasts: pip.controls.IToastService\n    ) {\n        \"ngInject\";\n\n        this.model = new PostSignupModel(pipEntryCommon, pipTransaction, $rootScope, $location, $state, $injector,\n            pipErrorPageConfigService, pipAuthState, pipFormErrors, pipEntry, pipRest, pipTranslate, pipEntryData, pipToasts);\n    }\n\n    public get transaction(): pip.services.Transaction {\n        return this.model.transaction;\n    }\n\n    public get hideObject(): any {\n        return this.model.hideObject;\n    }\n\n    public get showServerError(): any {\n        return this.model.showServerError;\n    }\n\n    public get config(): any {\n        return this.model.config;\n    }\n\n    public initModel($scope) {\n        this.model.init($scope);\n    }\n\n    public onPostSignupSubmit(callback?: () => void) {\n        this.model.onPostSignupSubmit(callback);\n    }\n}\n\nangular.module('pipEntry.PostSignup')\n    .service('pipPostSignupViewModel', PostSignupViewModel);","import { IEntryCommonService } from \"../common/IEntryCommonService\";\nimport { RecoverPasswordViewModel } from './RecoverPasswordViewModel';\nimport { IResetPasswordDialogService } from '../reset_password/ResetPasswordDialog';\n\nexport class RecoverPasswordController {\n    constructor(\n        private $scope: ng.IScope,\n        private pipRecoverPasswordViewModel: RecoverPasswordViewModel,\n        private pipResetPasswordDialog: IResetPasswordDialogService,\n        pipEntryCommon: IEntryCommonService,\n        private $state: ng.ui.IStateService,\n        private pipAuthState: pip.rest.IAuthStateService,\n        private pipFormErrors: pip.errors.IFormErrorsService,\n        private $window: ng.IWindowService\n    ) {\n        \"ngInject\";\n\n        pipEntryCommon.configureAppBar();\n    }\n\n    public goBack(): void {\n        this.$state.go(this.pipAuthState.signinState());\n    }\n\n    public get transaction(): any {\n        return this.pipRecoverPasswordViewModel.transaction;\n    }\n\n    public get config(): any {\n        return this.pipRecoverPasswordViewModel.config;\n    }\n\n    public onRecover(): void {\n        this.pipRecoverPasswordViewModel.onRecover(\n            () => {\n                this.pipResetPasswordDialog.show(\n                    {},\n                    () => {\n                        // reinit recovery panel\n                        this.$scope.$broadcast('RecoverPasswordInit');\n                    },\n                    () => {\n                        // reinit recovery panel\n                        this.$scope.$broadcast('RecoverPasswordInit');\n                    }\n                );\n            }\n        );\n    }\n}\n\n{\n    angular.module('pipEntry.RecoverPassword', ['pipEntry.Common', 'pipRecoverPasswordPanel', 'pipEntry.ResetPasswordDialog']);\n}","import { RecoverPasswordViewModel } from './RecoverPasswordViewModel';\nimport { IResetPasswordDialogService } from '../reset_password/ResetPasswordDialog';\n\nexport interface IRecoverPasswordDialogService {\n    show(params: any, successCallback?: () => void, cancelCallback?: () => void): void;\n}\n\n{\n    class RecoverPasswordDialogService implements IRecoverPasswordDialogService {\n        public constructor(private $mdDialog: angular.material.IDialogService) { };\n        public show(params: any, successCallback?: () => void, cancelCallback?: () => void) {\n            this.$mdDialog.show({\n                targetEvent: params.event,\n                templateUrl: 'recover_password/RecoverPasswordDialog.html',\n                controller: RecoverPasswordDialogController,\n                controllerAs: '$ctrl',\n                locals: {\n                    params: params\n                },\n                clickOutsideToClose: false\n            })\n                .then(() => {\n                    if (successCallback) {\n                        successCallback();\n                    }\n                }, () => {\n                    if (cancelCallback) {\n                        cancelCallback();\n                    }\n                });\n        }\n    }\n\n    class RecoverPasswordDialogController {\n        public goBack: any;\n\n        constructor(\n            private pipResetPasswordDialog: IResetPasswordDialogService,\n            private pipRecoverPasswordViewModel: RecoverPasswordViewModel,\n            private pipFormErrors : pip.errors.IFormErrorsService,\n            private $mdDialog: angular.material.IDialogService\n        ) {\n            \"ngInject\";\n\n            this.goBack = $mdDialog.cancel;\n        }\n\n        public get transaction(): any {\n            return this.pipRecoverPasswordViewModel.transaction;\n        }\n\n        public get config(): any {\n            return this.pipRecoverPasswordViewModel.config;\n        }\n\n        public onRecover(): void {\n            this.$mdDialog.cancel;\n            this.pipRecoverPasswordViewModel.onRecover(\n                () => {\n                    this.pipResetPasswordDialog.show({});\n                }\n            );\n        }\n    }\n\n    angular.module('pipEntry.RecoverPasswordDialog', ['pipEntry.Common', \"pipRecoverPasswordPanel\",\n        'pipEntry.ResetPasswordDialog'\n    ])\n        .service('pipRecoverPasswordDialog', RecoverPasswordDialogService);\n\n}","import { EntryModel } from '../common/EntryModel';\nimport { IEntryCommonService } from \"../common/IEntryCommonService\";\nimport { IEntryDataService } from '../data/IEntryDataService';\n\nexport class RecoverPasswordModel extends EntryModel {\n    constructor(\n        pipEntryCommon: IEntryCommonService,\n        pipTransaction: pip.services.ITransactionService,\n        private $rootScope: ng.IRootScopeService,\n        private $location: ng.ILocationService,\n        private $state: ng.ui.IStateService,\n        private $injector: ng.auto.IInjectorService,\n        private pipAuthState: pip.rest.IAuthStateService,\n        private pipFormErrors : pip.errors.IFormErrorsService,\n        private pipRest: pip.rest.IRestService,\n        private pipTranslate: pip.services.ITranslateService,\n        private pipEntryData: IEntryDataService,\n        private pipToasts: pip.controls.IToastService\n    ) {\n        \"ngInject\";\n        \n        super(pipEntryCommon);\n        this.transaction = pipTransaction.create('entry.signin');\n    }\n\n    public init($scope): void {\n        this.initModel($scope);\n        this.setElementVisability();\n    }\n\n    private setElementVisability(): void {\n        this.hideObject.title = new Boolean(this.hideObject.title) == true;\n        this.hideObject.subTitle1 = new Boolean(this.hideObject.subTitle1) == true;\n        this.hideObject.subTitle2 = new Boolean(this.hideObject.subTitle2) == true;\n        this.hideObject.server = new Boolean(this.hideObject.server) == true;\n        this.hideObject.hint = new Boolean(this.hideObject.hint) == true;\n        this.hideObject.progress = new Boolean(this.hideObject.progress) == true;\n    }\n\n    public onRecover(gotoReset: () => void): void {\n        if (this.config.form.$invalid) {\n            this.pipFormErrors.resetFormErrors(this.config.form, true);\n            return;\n        }\n        const transactionId = this.transaction.begin('PROCESSING');\n        if (!transactionId) return;\n        \n        if (!this.pipRest.lockServerUrl) {\n            this.pipRest.serverUrl = this.config.data.serverUrl;\n        }\n        this.pipEntryData.recoverPassword({\n                login: this.config.data.login\n            },\n            (data: any) => {\n                this.pipFormErrors.resetFormErrors(this.config.form, true);\n                if (this.transaction.aborted(transactionId)) return;\n\n                this.transaction.end();\n                if (!gotoReset) {\n                    this.$state.go('reset_password', {\n                        server_url: this.config.data.serverUrl,\n                        login: this.config.data.login\n                    });\n                } else {\n                    gotoReset();\n                }\n            },\n            (error: any) => {\n                this.transaction.end(error);\n                this.pipFormErrors.setFormError(\n                    this.config.form, error, {\n                        'WRONG_LOGIN': 'login', // Account  was not found\n                        'NO_LOGIN': 'login', // Missing account login\n                        'LOGIN_NOT_FOUND': 'login', // Missing account login\n                        'act_execute': 'form', // Unknown error\n                        '-1': 'form' // server not response\n                    }\n                );\n                this.pipFormErrors.resetFormErrors(this.config.form, true);\n            }\n        );\n    };\n}","import { EntryPageConfig } from '../common/EntryPageConfig';\nimport { IEntryCommonService } from \"../common/IEntryCommonService\";\nimport { RecoverPasswordViewModel } from './RecoverPasswordViewModel';\n\n{\n    interface IRecoverPasswordPanelBindings {\n        [key: string]: any;\n\n    }\n\n    const RecoverPasswordPanelBindings: IRecoverPasswordPanelBindings = {\n\n    }\n\n    class RecoverPasswordPanelController {\n        public touchedErrorsWithHint: Function;\n        constructor(\n            private $scope: ng.IScope,\n            private pipFormErrors: pip.errors.IFormErrorsService,\n            private pipRest: pip.rest.IRestService,\n            private pipRecoverPasswordViewModel: RecoverPasswordViewModel\n        ) {\n            \"ngInject\";\n            \n            this.touchedErrorsWithHint = pipFormErrors.touchedErrorsWithHint;\n            pipRecoverPasswordViewModel.initModel($scope);\n\n            this.$scope.$on('RecoverPasswordInit', () => {\n                this.config.form = this.$scope.form;\n            });\n        }\n\n        public $postLink(): void {\n            this.config.form = this.$scope.form;\n            this.config.data.password = null;\n            this.config.data.passwordNew = null;\n        }\n\n        public get config(): any {\n            return this.pipRecoverPasswordViewModel.config;\n        }\n\n        public get transaction(): any {\n            return this.pipRecoverPasswordViewModel.transaction;\n        }\n\n        public get showServerError(): any {\n            return this.pipRecoverPasswordViewModel.showServerError;\n        }\n\n        public onServerUrlChanged() {\n            this.config.onServerUrlChanged(this.config.form, this.config.selected.searchURLs);\n        }\n    \n        public onChanged() {\n            this.pipFormErrors.resetFormErrors(this.config.form, false);\n            this.pipFormErrors.resetFieldsErrors(this.config.form, null);\n            this.pipRest.serverUrl = this.config.selected.searchURLs;\n            this.config.data.serverUrl = this.config.selected.searchURLs;\n        }\n\n        public get hideObject(): any {\n            return this.pipRecoverPasswordViewModel.hideObject;\n        }\n    }\n\n    const RecoverPasswordPanel: ng.IComponentOptions = {\n        bindings: RecoverPasswordPanelBindings,\n        controller: RecoverPasswordPanelController,\n        templateUrl: 'recover_password/RecoverPasswordPanel.html'\n    }\n\n    angular.module(\"pipRecoverPasswordPanel\", ['pipFocused', 'pipEntry.Strings'])\n        .component('pipRecoverPasswordPanel', RecoverPasswordPanel);\n}","import { RecoverPasswordModel } from './RecoverPasswordModel';\n\nexport class RecoverPasswordViewModel {\n    public model: RecoverPasswordModel;\n\n    constructor(\n        pipEntryCommon: any,\n        pipTransaction: pip.services.ITransactionService,\n        $rootScope: ng.IRootScopeService,\n        $location: ng.ILocationService,\n        $state: ng.ui.IStateService,\n        $injector: ng.auto.IInjectorService,\n        pipAuthState: pip.rest.IAuthStateService,\n        pipFormErrors: pip.errors.IFormErrorsService,\n        pipRest: pip.rest.IRestService,\n        private pipTranslate: pip.services.ITranslateService,\n        private pipEntryData: any,\n        private pipToasts: any\n    ) {\n        \"ngInject\";\n\n        this.model = new RecoverPasswordModel(pipEntryCommon, pipTransaction, $rootScope, $location, $state,\n            $injector, pipAuthState, pipFormErrors, pipRest, pipTranslate, pipEntryData, pipToasts);\n    }\n\n    public get transaction(): pip.services.Transaction {\n        return this.model.transaction;\n    }\n\n    public get hideObject(): any {\n        return this.model.hideObject;\n    }\n\n    public get showServerError(): any {\n        return this.model.showServerError;\n    }\n\n    public get config(): any {\n        return this.model.config;\n    }\n\n    public initModel($scope): void {\n        this.model.init($scope);\n    }\n\n    public onRecover(gotoReset: any): void {\n        this.model.onRecover(gotoReset);\n    }\n}\n\nangular.module('pipEntry.RecoverPassword')\n    .service('pipRecoverPasswordViewModel', RecoverPasswordViewModel);","import { IEntryCommonService } from \"../common/IEntryCommonService\";\nimport { ResetPasswordViewModel } from './ResetPasswordViewModel';\n\nexport class ResetPasswordController {\n\n    constructor(\n        private pipResetPasswordViewModel: ResetPasswordViewModel,\n        pipEntryCommon: IEntryCommonService,\n        private $window: ng.IWindowService\n    ) {\n        \"ngInject\";\n\n        pipEntryCommon.configureAppBar();\n    }\n\n    public goBack() {\n        this.$window.history.back();\n    }\n\n    public get config(): any {\n        return this.pipResetPasswordViewModel.config;\n    }\n\n    public onReset() {\n        this.pipResetPasswordViewModel.onReset();\n    }\n}\n\n{\n    angular.module('pipEntry.ResetPassword', ['pipEntry.Common', 'pipResetPasswordPanel',\n        'pipEmailUnique'\n    ]);\n\n}","import { ResetPasswordViewModel } from './ResetPasswordViewModel';\n\nexport interface IResetPasswordDialogService {\n    show(params: any, successCallback?: () => void, cancelCallback?: () => void): void;\n}\n\n{\n    class ResetPasswordDialogService implements IResetPasswordDialogService {\n        public constructor(private $mdDialog: angular.material.IDialogService) { };\n        public show(params: any, successCallback?: () => void, cancelCallback?: () => void) {\n            this.$mdDialog.show({\n                targetEvent: params.event,\n                templateUrl: 'reset_password/ResetPasswordDialog.html',\n                controller: ResetPasswordDialogController,\n                controllerAs: '$ctrl',\n                locals: {\n                    params: params\n                },\n                clickOutsideToClose: false\n            })\n                .then(() => {\n                    if (successCallback) {\n                        successCallback();\n                    }\n                }, () => {\n                    if (cancelCallback) {\n                        cancelCallback();\n                    }\n                });\n        }\n    }\n\n    class ResetPasswordDialogController {\n        public goBack: any;\n\n        constructor(\n            $mdDialog: angular.material.IDialogService,\n            private pipResetPasswordViewModel: ResetPasswordViewModel\n        ) {\n            \"ngInject\";\n\n            this.goBack = $mdDialog.cancel;\n        }\n\n        public get config(): any {\n            return this.pipResetPasswordViewModel.config;\n        }\n\n        public onReset() {\n            this.pipResetPasswordViewModel.onReset(() => {\n                this.goBack();\n            });\n        }\n\n        public onCancel() {\n            this.goBack();\n        }\n\n    }\n\n    angular.module('pipEntry.ResetPasswordDialog', ['pipEntry.Common', \"pipResetPasswordPanel\"])\n        .service('pipResetPasswordDialog', ResetPasswordDialogService);\n\n}","import { EntryModel } from '../common/EntryModel';\nimport { IEntryCommonService } from \"../common/IEntryCommonService\";\nimport { IEntryDataService } from '../data/IEntryDataService';\n\nexport class ResetPasswordModel extends EntryModel {\n    constructor(\n        pipEntryCommon: IEntryCommonService,\n        pipTransaction: pip.services.ITransactionService,\n        // private $scope: ng.IScope,\n        private $rootScope: ng.IRootScopeService,\n        private $location: ng.ILocationService,\n        private $state: ng.ui.IStateService,\n        private $injector: ng.auto.IInjectorService,\n        // private $timeout: ng.ITimeoutService,\n        private pipAuthState: pip.rest.IAuthStateService,\n        private pipFormErrors: pip.errors.IFormErrorsService,\n        private pipRest: pip.rest.IRestService,\n        private pipTranslate: pip.services.ITranslateService,\n        private pipEntryData: IEntryDataService,\n        private pipToasts: pip.controls.IToastService\n    ) {\n        \"ngInject\";\n\n        super(pipEntryCommon);\n        this.transaction = pipTransaction.create('entry.signin');\n\n    }\n\n    public init($scope): void {\n        this.initModel($scope);\n        this.setElementVisability();\n    }\n\n    private setElementVisability(): void {\n        this.hideObject.subTitle = new Boolean(this.hideObject.subTitle) == true;\n        this.hideObject.title = new Boolean(this.hideObject.title) == true;\n        this.hideObject.server = new Boolean(this.hideObject.server) == true;\n        this.hideObject.hint = new Boolean(this.hideObject.hint) == true;\n        this.hideObject.progress = new Boolean(this.hideObject.progress) == true;\n    }\n\n    public onShowToast(message: string, type: string): void {\n        if (!message) return;\n        message = this.pipTranslate.translate(message);\n        type = type || 'message';\n\n        if (type == 'message') {\n            this.pipToasts.showMessage(message, null, null, null);\n            return;\n        }\n        if (type == 'error') {\n            this.pipToasts.showError(message, null, null, null, null);\n            return;\n        }\n    }\n\n    public onReset(callback?: () => void): void {\n        if (this.config.form.$invalid) {\n            this.pipFormErrors.resetFormErrors(this.config.form, true);\n\n            return;\n        }\n\n        const transactionId = this.transaction.begin('PROCESSING');\n        if (!transactionId) return;\n        if (!this.pipRest.lockServerUrl) {\n            this.pipRest.serverUrl = this.config.data.serverUrl;\n        }\n        this.pipEntryData.resetPassword({\n            login: this.config.data.login,\n            code: this.config.data.resetCode,\n            password: this.config.data.password\n        },\n            (data: any) => {\n                this.pipFormErrors.resetFormErrors(this.config.form, false);\n                if (this.transaction.aborted(transactionId)) return;\n\n                const message = String() + 'RESET_PWD_SUCCESS_TEXT';\n                this.onShowToast(message, 'message');\n                this.transaction.end();\n                if (callback) callback();\n                this.$state.go('signin', {\n                    server_url: this.config.data.serverUrl,\n                    login: this.config.data.login\n                });\n            },\n            (error: any) => {\n                this.transaction.end(error);\n                this.pipFormErrors.resetFormErrors(this.config.form, true);\n                this.pipFormErrors.setFormError(\n                    this.config.form, error, {\n                        'NO_LOGIN': 'login', // Missing account login\n                        'WRONG_LOGIN': 'login', // Account  was not found\n                        'LOGIN_NOT_FOUND': 'login', // Account  was not found\n                        'WRONG_PASSWORD': 'password', // Invalid password\n                        'WRONG_CODE': 'resetCode', // Invalid password recovery code\n                        'act_execute': 'form', // Unknown error\n                        '-1': 'form' // server not response\n                    }\n                );\n            }\n        );\n    }\n\n}","import { EntryPageConfig } from '../common/EntryPageConfig';\nimport { IEntryCommonService } from \"../common/IEntryCommonService\";\nimport { ResetPasswordViewModel } from './ResetPasswordViewModel';\n\n{\n    interface IResetPasswordPanelBindings {\n        [key: string]: any;\n\n\n    }\n\n    const ResetPasswordPanelBindings: IResetPasswordPanelBindings = {\n\n    }\n\n    class ResetPasswordPanelController {\n        public touchedErrorsWithHint: Function;\n        constructor(\n            private $scope: ng.IScope,\n            private pipFormErrors: pip.errors.IFormErrorsService,\n            private pipRest: pip.rest.IRestService,\n            private pipResetPasswordViewModel: ResetPasswordViewModel\n        ) {\n            \"ngInject\";\n\n            this.touchedErrorsWithHint = pipFormErrors.touchedErrorsWithHint;\n            pipResetPasswordViewModel.initModel($scope);\n     \n        }\n\n        public $postLink(): void {\n            this.config.form = this.$scope.form;\n            this.config.data.password = null;\n            this.config.data.passwordNew = null;\n        }\n\n        public get config(): any {\n            return this.pipResetPasswordViewModel.config;\n        }\n\n        public get transaction(): any {\n            return this.pipResetPasswordViewModel.transaction;\n        }\n\n        public get showServerError(): any {\n            return this.pipResetPasswordViewModel.showServerError;\n        }\n\n        public get hideObject(): any {\n            return this.pipResetPasswordViewModel.hideObject;\n        }\n\n        public onServerUrlChanged() {\n            this.config.onServerUrlChanged(this.config.form, this.config.selected.searchURLs);\n        }\n    \n        public onChanged() {\n            this.pipFormErrors.resetFormErrors(this.config.form, false);\n            this.pipFormErrors.resetFieldsErrors(this.config.form, null);\n            this.pipRest.serverUrl = this.config.selected.searchURLs;\n            this.config.data.serverUrl = this.config.selected.searchURLs;\n        }\n\n        public onShowToast(message: string, type: string): void {\n            this.pipResetPasswordViewModel.onShowToast(message, type);\n        }\n\n    }\n\n    const ResetPasswordPanel: ng.IComponentOptions = {\n        bindings: ResetPasswordPanelBindings,\n        controller: ResetPasswordPanelController,\n        templateUrl: 'reset_password/ResetPasswordPanel.html'\n    }\n\n    angular.module(\"pipResetPasswordPanel\", ['pipFocused', 'pipEntry.Strings'])\n        .component('pipResetPasswordPanel', ResetPasswordPanel);\n}","import { ResetPasswordModel } from './ResetPasswordModel';\n\nexport class ResetPasswordViewModel {\n    public model: ResetPasswordModel;\n\n    constructor(\n        pipEntryCommon: any,\n        pipTransaction: pip.services.ITransactionService,\n        $rootScope: ng.IRootScopeService,\n        $location: ng.ILocationService,\n        $state: ng.ui.IStateService,\n        $injector: ng.auto.IInjectorService,\n        pipAuthState: pip.rest.IAuthStateService,\n        pipFormErrors: pip.errors.IFormErrorsService,\n        pipRest: pip.rest.IRestService,\n        private pipTranslate: pip.services.ITranslateService,\n        private pipEntryData: any,\n        private pipToasts: any\n    ) {\n        \"ngInject\";\n\n        this.model = new ResetPasswordModel(pipEntryCommon, pipTransaction, $rootScope, $location, $state,\n            $injector, pipAuthState, pipFormErrors, pipRest, pipTranslate, pipEntryData, pipToasts);\n    }\n\n    public get transaction(): pip.services.Transaction {\n        return this.model.transaction;\n    }\n\n    public get hideObject(): any {\n        return this.model.hideObject;\n    }\n\n    public get showServerError(): any {\n        return this.model.showServerError;\n    }\n\n    public get config(): any {\n        return this.model.config;\n    }\n\n    public initModel($scope) {\n        this.model.init($scope);\n    }\n\n    public onShowToast(message, type) {\n        this.model.onShowToast(message, type);\n    }\n\n    public onReset(callback?: () => void) {\n        this.model.onReset(callback);\n    }\n}\n\nangular.module('pipEntry.ResetPassword')\n    .service('pipResetPasswordViewModel', ResetPasswordViewModel);","function configEntryResources(pipRestProvider: pip.rest.IRestProvider) {\n    // resource, url, path, defaultParams, actions\n    pipRestProvider.registerOperation('signin', '/api/v1/signin');\n    pipRestProvider.registerOperation('signout', '/api/v1/signout');\n    pipRestProvider.registerOperation('signup', '/api/v1/signup');\n    pipRestProvider.registerOperation('recoverPassword', '/api/v1/passwords/recover');\n    pipRestProvider.registerOperation('resetPassword', '/api/v1/passwords/reset');\n    pipRestProvider.registerCollection('changePassword', '/api/v1/passwords/:user_id/change',\n     { user_id: '@user_id' });\n\n    pipRestProvider.registerOperation('requestEmailVerification', '/api/v1/email_settings/resend');\n    pipRestProvider.registerOperation('verifyEmail', '/api/v1/email_settings/verify');\n    pipRestProvider.registerOperation('email_settings', '/api/v1/email_settings/:user_id', \n        { user_id: '@user_id' },\n        {\n            get: { method: 'GET', isArray: false }\n        }\n    ); \n    pipRestProvider.registerOperation('signupValidate', '/api/v1/signup/validate', {},\n        {\n            get: { method: 'GET', isArray: false }\n        }\n    ); \n}\n\nangular\n    .module('pipEntry.Rest')\n    .config(configEntryResources);\n\n\n","function configSessionResources(pipRestProvider: pip.rest.IRestProvider) {\n    pipRestProvider.registerPagedCollection('sessions', '/api/v1/sessions');\n    pipRestProvider.registerOperation('restoreSessions', '/api/v1/sessions/restore');\n    pipRestProvider.registerPagedCollection('userSessions', '/api/v1//sessions/:user_id');\n}\n\nangular\n    .module('pipEntry.Rest')\n    .config(configSessionResources);\n\n","function configSettingsResources(pipRestProvider: pip.rest.IRestProvider) {\n    // resource, url, path, defaultParams, actions\n    pipRestProvider.registerPagedCollection('settings', '/api/v1/settings/:section/:key',\n        { section: '@section' },\n        {\n            update: { method: 'PUT' }\n        }\n    );\n}\n\nangular\n    .module('pipEntry.Rest')\n    .config(configSettingsResources);","\n\nangular.module('pipEntry.Rest', []);\n\nimport './EntryResources';\nimport './SettingsResources';\nimport './SessionResources';","/// <reference path=\"../../typings/tsd.d.ts\" />\nimport { IEntryService } from \"../common/EntryService\";\nimport { IEntryCommonService } from \"../common/IEntryCommonService\";\n\nexport const isSignin = 'isSignin';\n\n{\n    class SigninController {\n        public fixedServerUrl: boolean = false;\n        constructor(\n            $scope: ng.IScope,\n            $rootScope: ng.IRootScopeService,\n            pipEntry: IEntryService,\n            pipEntryCommon: IEntryCommonService,\n            pipSession: pip.services.ISessionService\n        ) {\n            \"ngIngect\";\n\n            pipEntryCommon.configureAppBar();\n            // if (!$rootScope[isSignin] && pipSession.isOpened()) { // ??\n            //     pipEntry.signout(); // hack for set language\n            // }\n            $rootScope[isSignin] = false;\n            this.fixedServerUrl = $scope['fixedServerUrl'];\n        }\n    }\n\n    const SigninConfig = ($stateProvider, pipAuthStateProvider) => {\n\n        $stateProvider\n            .state('signin', {\n                url: '/signin?login&server_url&redirect_to&language&email',\n                auth: false,\n                controller: SigninController,\n                controllerAs: '$ctrl',\n                templateUrl: 'signin/Signin.html'\n            })\n        pipAuthStateProvider.signinState = 'signin';\n    }\n\n    angular.module('pipEntry.Signin', ['pipEntry.Common', \"pipSigninPanel\"])\n        .config(SigninConfig)\n\n}","/// <reference path=\"../../typings/tsd.d.ts\" />\nimport { IEntryService } from \"../common/EntryService\";\n\ninterface ISigninDialogService {\n    show(params: any, successCallback ? : () => void, cancelCallback ? : () => void): void;\n}\n\nclass SigninDialogService implements ISigninDialogService {\n\n    public constructor(private $mdDialog: angular.material.IDialogService) {}\n    public show(params: any, successCallback ? : () => void, cancelCallback ? : () => void) {\n        this.$mdDialog.show({\n                targetEvent: params.event,\n                templateUrl: 'signin/SigninDialog.html',\n                controller: SigninDialogController,\n                locals: {\n                    params: params\n                },\n                clickOutsideToClose: false\n            })\n            .then(() => {\n                if (successCallback) {\n                    successCallback();\n                }\n            }, () => {\n                if (cancelCallback) {\n                    cancelCallback();\n                }\n            });\n    }\n}\n\nexport interface ISigninDialogController {\n    pipGotoSignupDialog: Function;\n    pipGotoRecoverPasswordDialog: Function;\n}\n\nclass SigninDialogController implements ISigninDialogController {\n    public pipGotoSignupDialog: Function;\n    public pipGotoRecoverPasswordDialog: Function;\n\n    constructor(\n        private pipSignupDialog,\n        private pipRecoverPasswordDialog,\n        private pipEntry: IEntryService,\n    ) {\n        \"ngInject\";\n        \n        //pipEntry.signout();\n        this.pipGotoSignupDialog = () => {\n            this.gotoSignupDialog();\n        }\n        this.pipGotoRecoverPasswordDialog = () => {\n            this.gotoRecoverPasswordDialog();\n        }\n    }\n\n    private gotoSignupDialog() {\n        this.pipSignupDialog.show({});\n    }\n\n    private gotoRecoverPasswordDialog() {\n        this.pipRecoverPasswordDialog.show({});\n    }\n}\n\n{\n\n    angular.module('pipEntry.SigninDialog', [\n            'pipEntry.Common',\n            'pipSigninPanel',\n            'pipEntry.SignupDialog',\n            'pipEntry.RecoverPasswordDialog'\n        ])\n        .service('pipSigninDialog', SigninDialogService);\n\n}","import { EntryModel } from '../common/EntryModel';\nimport { IEntryCommonService } from \"../common/IEntryCommonService\";\nimport { IEntryService } from \"../common/EntryService\";\nimport { AuthSessionData } from '../common/EntryPageConfig';\nimport { SessionData } from '../data/SessionData';\nimport { EmailSettings } from '../data/EmailSettings';\n\nexport class SinginModel extends EntryModel {\n    constructor(\n        pipEntryCommon: IEntryCommonService,\n        pipTransaction: pip.services.ITransactionService,\n        private $rootScope: ng.IRootScopeService,\n        private $location: ng.ILocationService,\n        private $state: ng.ui.IStateService,\n        private $injector: ng.auto.IInjectorService,\n        private pipErrorPageConfigService: pip.errors.IErrorPageConfigService,\n        private pipAuthState: pip.rest.IAuthStateService,\n        private pipEntry: IEntryService,\n        private pipFormErrors: pip.errors.IFormErrorsService,\n        private pipNavService: pip.nav.INavService,\n        private pipRest: pip.rest.IRestService,\n    ) {\n        \"ngInject\";\n        \n        super(pipEntryCommon);\n\n        this.transaction = pipTransaction.create('entry.signin');\n    }\n\n    public init($scope) {\n        this.initModel($scope);\n        this.setElementVisability();\n    }\n\n    private setElementVisability() {\n        this.hideObject.remember = new Boolean(this.hideObject.remember) == true;\n        this.hideObject.title = new Boolean(this.hideObject.title) == true;\n        this.hideObject.server = new Boolean(this.hideObject.server) == true;\n        this.hideObject.forgotPassword = new Boolean(this.hideObject.forgotPassword) == true;\n        this.hideObject.signup = new Boolean(this.hideObject.signup) == true;\n        this.hideObject.hint = new Boolean(this.hideObject.hint) == true;\n        this.hideObject.progress = new Boolean(this.hideObject.progress) == true;\n    }\n\n    private checkSupported(): boolean {\n        let pipSystemInfo: any = this.$injector.has('pipSystemInfo') ? this.$injector.get('pipSystemInfo') : null;\n        if (!pipSystemInfo) {\n            return true;\n        }\n\n        if (!this.pipErrorPageConfigService || !this.pipErrorPageConfigService.configs || \n            !this.pipErrorPageConfigService.configs.Unsupported || !this.pipErrorPageConfigService.configs.Unsupported.Active) {\n\n            return true;\n        }\n\n        let browser: string = pipSystemInfo.browserName;\n        let version: string = pipSystemInfo.browserVersion;\n        version = version.split(\".\")[0];\n\n        let supported = this.pipErrorPageConfigService.configs.Unsupported.Params && this.pipErrorPageConfigService.configs.Unsupported.Params.supported ? this.pipErrorPageConfigService.configs.Unsupported.Params.supported : null;\n        if (!supported) {\n\n            return true;\n        }\n\n        if (browser && supported[browser] && version >= supported[browser]) {\n            return true;\n        }\n\n        this.pipEntry.signout();\n        this.$state.go(pip.errors.ErrorsUnsupportedState); \n        return false;\n    }\n\n    public gotoSignup(gotoSignupPage: any, gotoSignupDialog: any): void {\n        if (!gotoSignupPage && !gotoSignupDialog) {\n            this.$state.go('signup', {\n                server_url: this.config.data.serverUrl,\n                login: this.config.data.login\n            });\n            return;\n        }\n        if (gotoSignupPage) {\n            this.$state.go(gotoSignupPage);\n            return;\n        }\n        if (gotoSignupDialog) {\n            gotoSignupDialog();\n            return;\n        }\n    }\n\n    public gotoRecoverPassword(gotoRecoverPasswordDialog: any): void {\n\n        if (!gotoRecoverPasswordDialog) {\n            this.$state.go('recover_password', {\n                server_url: this.config.data.serverUrl,\n                login: this.config.data.login\n            });\n            return;\n        }\n        if (gotoRecoverPasswordDialog) {\n            gotoRecoverPasswordDialog();\n            return;\n        }\n    }\n\n    private inSigninComplete(data: SessionData): void {\n        if (this.checkSupported()) {\n            let passwordExpire: boolean = false;\n            // check password change\n            if (this.pipEntry.passwordExpire && data.user && data.user.change_pwd_time) {\n                let expireDate = new Date(data.user.change_pwd_time);\n                let nowDate = new Date();\n                \n                passwordExpire = expireDate.getTime() < nowDate.getTime();\n            }\n            if (passwordExpire) {\n                this.pipAuthState.go('change_password', {\n                    login: this.config.data.login,\n                    server_url: this.pipRest.serverUrl\n                    // redirect_to: this.pipAuthState.params.redirect_to\n                });\n            } else if (this.pipAuthState.params.redirect_to) {\n                if (this.pipAuthState.params.toState) {\n                    if (this.pipAuthState.params.toState != this.pipAuthState.signinState) {\n                        this.pipAuthState.go(this.pipAuthState.params.toState, this.pipAuthState.params.toParams)\n                    } else {\n                        this.pipAuthState.goToAuthorized({});\n                    }\n                } else {\n                    if (decodeURIComponent(this.pipAuthState.params.redirect_to) != '/signin') {\n                        this.$location.url(decodeURIComponent(this.pipAuthState.params.redirect_to));\n                    } else {\n                        this.pipAuthState.goToAuthorized({});\n                    }\n                }\n            } else {\n                this.pipAuthState.goToAuthorized({});\n            }\n\n            this.pipNavService.sidenav.show();\n        }\n    }\n\n    private checkEmailVerification(data: SessionData): boolean {\n        return data.user && data.user.settings &&\n            data.user.settings['verified_email'] && data.user.settings['verified_email'] == \"true\";\n    }\n\n    public onSignin(rememberDefault: boolean): void {\n        if (this.config.form.$invalid) {\n            this.pipFormErrors.resetFormErrors(this.config.form, true);\n            return;\n        }\n\n        let transactionId: string = this.transaction.begin('ENTERING');\n        if (!transactionId) return;\n\n         this.$rootScope['isSignin'] = true;\n\n        if (this.hideObject.remember && !!rememberDefault) {\n            this.config.data.remember = true;\n        }\n\n        if (!this.pipRest.lockServerUrl) {\n            this.pipRest.serverUrl = this.config.data.serverUrl;\n        }\n\n        let session: AuthSessionData = new AuthSessionData();\n        this.pipRest.setHeaders({\n            'session-id': undefined,\n            'user-id': undefined,\n            'account-id': undefined\n        });\n\n        this.pipRest.getResource('signin').call({ \n            login: this.config.data.login,\n            password: this.config.data.password\n        },\n            (data: SessionData) => {\n                this.pipFormErrors.resetFormErrors(this.config.form, false);\n                if (this.transaction.aborted(transactionId)) return;\n\n                this.pipEntry.openSession(data, this.config.data.remember);\n                if (this.checkEmailVerification(data)) {\n                    this.inSigninComplete(data);\n                    this.transaction.end();\n                } else {\n                    this.pipRest.getResource('email_settings').get(\n                        {\n                            user_id: data.user.id\n                        },\n                        (setting: EmailSettings) => {\n                            if (setting && setting.verified && setting.email == data.user.login) {\n                                this.inSigninComplete(data);\n                            } else {\n                                this.pipAuthState.go('verify_email', { email: data.user.login || data.user['email'], serverUrl: this.pipRest.serverUrl });\n                            }\n                            this.transaction.end();\n                        }, \n                        (error: any) => {\n                            this.$rootScope['isSignin'] = false;\n                            this.pipFormErrors.resetFormErrors(this.config.form, true);\n                            this.pipFormErrors.setFormError(this.config.form, error, {\n                                'WRONG_LOGIN': 'login', // Account was not found\n                                'NO_LOGIN': 'login', // Missing account login\n                                'LOGIN_NOT_FOUND': 'login', // Missing account login\n                                'WRONG_PASSWORD': 'password', // Missing password\n                                'ACCOUNT_LOCKED': 'form',\n                                'act_execute': 'form', // Unknown error\n                                '-1': 'form' // server not response\n                            });\n                            this.transaction.end({\n                                message: error\n                            });\n                        });\n                }\n                \n            },\n            (error: any) => {\n                this.$rootScope['isSignin'] = false;\n                this.pipFormErrors.resetFormErrors(this.config.form, true);\n                this.pipFormErrors.setFormError(this.config.form, error, {\n                    'WRONG_LOGIN': 'login', // Account was not found\n                    'NO_LOGIN': 'login', // Missing account login\n                    'LOGIN_NOT_FOUND': 'login', // Missing account login\n                    'WRONG_PASSWORD': 'password', // Missing password\n                    'act_execute': 'form', // Unknown error\n                    '-1': 'form' // server not response\n                });\n                this.transaction.end({\n                    message: error\n                });\n            });\n    }\n}","/// <reference path=\"../../typings/tsd.d.ts\" />\n\nimport { EntryPageConfig } from '../common/EntryPageConfig';\nimport { IEntryCommonService } from '../common/IEntryCommonService';\nimport { SigninViewModel } from './SigninViewModel';\n\ninterface ISigninPanelController {\n    pipMedia: pip.layouts.IMediaService;\n\n    gotoSignup(): void;\n    onSignin(): void;\n    gotoRecoverPassword(): void;\n    onEnter(event): void;\n}\n\nclass SigninPanelController implements ISigninPanelController {\n    public gotoSignupDialog: Function;\n    public gotoRecoverPasswordDialog: Function;\n    public gotoSignupPage: any;\n    public rememberDefault: boolean;\n    public touchedErrorsWithHint: Function;\n\n    constructor(\n        private $scope: ng.IScope,\n        private $document: ng.IDocumentService,\n        private $timeout,\n        public pipMedia: pip.layouts.IMediaService,\n        private pipSigninViewModel: SigninViewModel,\n        private pipRest: pip.rest.IRestService,\n        private pipFormErrors: pip.errors.IFormErrorsService\n    ) {\n        \"ngInject\";\n\n        pipSigninViewModel.initModel($scope);\n        this.touchedErrorsWithHint = pipFormErrors.touchedErrorsWithHint;\n    }\n\n    public $postLink() {\n        this.config.form = this.$scope.form;\n\n        this.$timeout(() => {\n            if (this.$document && this.$document[0]) {\n                var elem = angular.element(this.$document[0].querySelector('input[type=password]:-webkit-autofill'));\n\n                if (elem.length) {\n                    elem.parent().addClass('md-input-has-value');\n                }\n            }\n        }, 150);\n    }\n\n    public get config(): any {\n        return this.pipSigninViewModel.config;\n    }\n\n    public get transaction(): any {\n        return this.pipSigninViewModel.transaction;\n    }\n\n    public get showServerError(): any {\n        return this.pipSigninViewModel.showServerError;\n    }\n\n    public get hideObject(): any {\n        return this.pipSigninViewModel.hideObject;\n    }\n\n    public gotoSignup() {\n        this.pipSigninViewModel.gotoSignup(this.gotoSignupPage, this.gotoSignupDialog);\n    }\n\n    public onSignin() {\n        this.pipSigninViewModel.onSignin(this.rememberDefault);\n    }\n\n    public gotoRecoverPassword() {\n        this.pipSigninViewModel.gotoRecoverPassword(this.gotoRecoverPasswordDialog);\n    }\n\n    public onServerUrlChanged() {\n        this.config.onServerUrlChanged(this.config.form, this.config.selected.searchURLs);\n    }\n\n    public onChanged() {\n        this.pipFormErrors.resetFormErrors(this.config.form, false);\n        this.pipFormErrors.resetFieldsErrors(this.config.form, null);\n        this.pipRest.serverUrl = this.config.selected.searchURLs;\n        this.config.data.serverUrl = this.config.selected.searchURLs;\n    }\n\n    public onEnter(event): void {\n        if (event.keyCode === 13) {\n            this.onSignin();\n        }\n    }\n}\n\ninterface ISigninBindings {\n    [key: string]: any;\n\n    gotoSignupPage: any,\n    gotoSignupDialog: any,\n    gotoRecoverPasswordDialog: any,\n    rememberDefault: any, // set remember check\n}\n\nconst SigninBindings: ISigninBindings = {\n    gotoSignupPage: '=pipGotoSignupPage',\n    gotoSignupDialog: '=pipGotoSignupDialog',\n    gotoRecoverPasswordDialog: '=pipGotoRecoverPasswordDialog',\n    rememberDefault: '=pipRemember', // set remember check\n};\n\n\nclass SigninChanges implements ng.IOnChangesObject, ISigninBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n\n    gotoSignupPage: ng.IChangesObject<any>;\n    gotoSignupDialog: ng.IChangesObject<Function>;\n    gotoRecoverPasswordDialog: ng.IChangesObject<Function>;\n    rememberDefault: ng.IChangesObject<boolean>; // set remember check\n}\n\n{\n\n    const SigninPanel: ng.IComponentOptions = {\n        bindings: SigninBindings,\n        templateUrl: 'signin/SigninPanel.html',\n        controller: SigninPanelController\n    };\n\n\n    angular.module(\"pipSigninPanel\", ['pipFocused', 'pipEntry.Strings'])\n        .component('pipSigninPanel', SigninPanel);\n\n}","import { SinginModel } from './SigninModel';\nimport { IEntryCommonService } from \"../common/IEntryCommonService\";\nimport { IEntryService } from \"../common/EntryService\";\n\nexport class SigninViewModel {\n    public model: SinginModel;\n\n    constructor(\n        pipEntryCommon: IEntryCommonService,\n        pipTransaction: pip.services.ITransactionService,\n        $rootScope: ng.IRootScopeService,\n        $location: ng.ILocationService,\n        $state: ng.ui.IStateService,\n        $injector: ng.auto.IInjectorService,\n        pipErrorPageConfigService: pip.errors.IErrorPageConfigService,\n        pipAuthState: pip.rest.IAuthStateService,\n        pipEntry: IEntryService,\n        pipFormErrors: pip.errors.IFormErrorsService,\n        pipNavService: pip.nav.INavService,\n        pipRest: pip.rest.IRestService\n    ) {\n        this.model = new SinginModel(\n            pipEntryCommon,\n            pipTransaction,\n            $rootScope,\n            $location,\n            $state,\n            $injector,\n            pipErrorPageConfigService,\n            pipAuthState,\n            pipEntry,\n            pipFormErrors,\n            pipNavService,\n            pipRest\n        );\n    }\n\n    public get transaction(): pip.services.Transaction {\n        return this.model.transaction;\n    }\n\n    public get hideObject(): any {\n        return this.model.hideObject;\n    }\n\n    public get showServerError(): any {\n        return this.model.showServerError;\n    }\n\n    public get config(): any {\n        return this.model.config;\n    }\n\n    public initModel($scope) {\n        this.model.init($scope);\n    }\n\n    public gotoSignup(gotoSignupPage: any, gotoSignupDialog: any) {\n        this.model.gotoSignup(gotoSignupPage, gotoSignupDialog);\n    }\n\n    public gotoRecoverPassword(gotoRecoverPasswordDialog: any) {\n        this.model.gotoRecoverPassword(gotoRecoverPasswordDialog);\n    }\n\n    public onSignin(rememberDefault: boolean) {\n        this.model.onSignin(rememberDefault);\n    }\n}\n\nangular.module('pipEntry.Signin')\n    .service('pipSigninViewModel', SigninViewModel);","/// <reference path=\"../../typings/tsd.d.ts\" />\nimport { IEntryService } from '../common/EntryService';\n\n\nexport class SignoutController {\n\n    constructor(\n        pipAuthState: pip.rest.IAuthStateService,\n        pipEntry: IEntryService\n    ) {\n        \"ngInject\";\n\n       pipEntry.signout();\n        pipAuthState.goToUnauthorized({});\n    }\n}\n\nangular.module('pipEntry.Signout', []);\n\n\n\n\n\n","import { IEntryCommonService } from \"../common/IEntryCommonService\";\nimport { IEntryService } from \"../common/EntryService\";\n\n{\n    class SignupController {\n        constructor(\n            pipEntryCommon: IEntryCommonService,\n            pipEntry: IEntryService,\n            $state: ng.ui.IStateService,\n            pipAuthState: pip.rest.IAuthStateService\n        ) {\n            \"ngInject\";\n\n            pipEntryCommon.configureAppBar();\n\n            if (pipEntry.entryHideObject && pipEntry.entryHideObject.signup === true) {\n                $state.go(pipAuthState.signinState(), {});\n            }\n        }\n    }\n\n    const SignupConfig = ($stateProvider, pipAuthStateProvider) => {\n        $stateProvider\n            .state('signup', {\n                url: '/signup?name&login&server_url&redirect_to&language',\n                auth: false,\n                controller: SignupController,\n                controllerAs: '$ctrl',\n                templateUrl: 'signup/Signup.html'\n            })\n    }\n\n    angular\n        .module('pipEntry.Signup', [\n            'pipEntry.Common',\n            // 'pipEmailUnique',\n            'pipSignupPanel',\n            'pipPasswordMatch'\n        ])\n        .config(SignupConfig)\n}","import { IEntryService } from \"../common/EntryService\";\n\ninterface ISignupDialogService {\n    show(params: any, successCallback ? : () => void, cancelCallback ? : () => void): void;\n}\n\nclass SignupDialogService implements ISignupDialogService {\n\n    public constructor(private $mdDialog: angular.material.IDialogService) {}\n    public show(params: any, successCallback ? : () => void, cancelCallback ? : () => void) {\n        this.$mdDialog.show({\n                targetEvent: params.event,\n                templateUrl: 'signup/SignupDialog.html',\n                controller: SignupDialogController,\n                controllerAs: '$ctrl',\n                locals: {\n                    params: params\n                },\n                clickOutsideToClose: false\n            })\n            .then(() => {\n                if (successCallback) {\n                    successCallback();\n                }\n            }, () => {\n                if (cancelCallback) {\n                    cancelCallback();\n                }\n            });\n    }\n}\n\ninterface ISignupDialogController {\n    pipGotoSigninDialog: Function;\n    pipGotoPostSignupDialog: Function;\n}\n\nclass SignupDialogController implements ISignupDialogController {\n    public pipGotoSigninDialog: Function;\n    public pipGotoPostSignupDialog: Function;\n\n    constructor(\n        private pipSigninDialog,\n        private pipPostSignupDialog,\n        private pipEntry: IEntryService,\n    ) {\n        \"ngInject\";\n        \n        pipEntry.signout();\n        this.pipGotoSigninDialog = () => {\n            this.gotoSigninDialog();\n        }\n        this.pipGotoPostSignupDialog = (user) => {\n            this.gotoPostSignupDialog(user);\n        }\n    }\n\n    private gotoSigninDialog() {\n        this.pipSigninDialog.show({});\n    }\n\n    private gotoPostSignupDialog(user) {\n        this.pipPostSignupDialog.show({\n            $party: user\n        });\n    }\n}\n\n{\n\n    angular.module('pipEntry.SignupDialog', [\n            'pipEntry.Common',\n            \"pipSignupPanel\",\n            'pipEntry.SigninDialog',\n            'pipEntry.PostSignupDialog'\n        ])\n        .service('pipSignupDialog', SignupDialogService)\n}","import { EntryModel } from '../common/EntryModel';\nimport { IEntryService } from \"../common/EntryService\";\nimport { IEntryCommonService } from \"../common/IEntryCommonService\";\nimport { IEntryDataService } from '../data/IEntryDataService';\nimport { AuthSessionData } from '../common/EntryPageConfig';\nimport { SessionData } from '../data/SessionData';\nimport { EmailSettings } from '../data/EmailSettings';\n\nexport class SingupModel extends EntryModel {\n    private session: AuthSessionData;\n    private regestryVerifyEmailKey: string = 'verified_email';\n\n    constructor(\n        pipEntryCommon: IEntryCommonService,\n        pipTransaction: pip.services.ITransactionService,\n        private $rootScope: ng.IRootScopeService,\n        private $location: ng.ILocationService,\n        private $state: ng.ui.IStateService,\n        private $injector: ng.auto.IInjectorService,\n        private pipAuthState: pip.rest.IAuthStateService,\n        private pipFormErrors: pip.errors.IFormErrorsService,\n        private pipRest: pip.rest.IRestService,\n        private pipEntry: IEntryService,\n        private pipEntryData: IEntryDataService,\n        private pipTranslate: pip.services.ITranslateService\n    ) {\n        \"ngInject\";\n\n        super(pipEntryCommon);\n        this.transaction = pipTransaction.create('entry.signup');\n    }\n\n    public init($scope) {\n        this.initModel($scope);\n        this.setElementVisability();\n    }\n\n    private setElementVisability() {\n        this.hideObject.agreement = new Boolean(this.hideObject.agreement) == true;\n        this.hideObject.title = new Boolean(this.hideObject.title) == true;\n        this.hideObject.server = new Boolean(this.hideObject.server) == true;\n        this.hideObject.passwordConfirm = new Boolean(this.hideObject.passwordConfirm) == true;\n        this.hideObject.signin = new Boolean(this.hideObject.signin) == true;\n        this.hideObject.hint = new Boolean(this.hideObject.hint) == true;\n        this.hideObject.progress = new Boolean(this.hideObject.progress) == true;\n    }\n\n    public gotoSignin(gotoSigninPage: any, gotoSigninDialog: any) {\n        if (!gotoSigninPage && !gotoSigninDialog) {\n            this.$state.go(this.pipAuthState.signinState(), {});\n            return;\n        }\n        if (gotoSigninPage) {\n            this.$state.go(gotoSigninPage);\n            return;\n        }\n        if (gotoSigninDialog) {\n            gotoSigninDialog();\n            return;\n        }\n    }\n\n    public onSignup(gotoPostSignup: any) {\n        if (this.config.form.$invalid) {\n            this.pipFormErrors.resetFormErrors(this.config.form, true);\n            return;\n        }\n        const transactionId = this.transaction.begin('PROCESSING');\n        if (!transactionId) return;\n\n        if (!this.pipRest.lockServerUrl) {\n            this.pipRest.serverUrl = this.config.data.serverUrl;\n        }\n        // todo theme name take from parametr\n        this.pipRest.getResource('signup').call({\n            serverUrl: this.config.data.serverUrl,\n            name: this.config.data.name,\n            login: this.config.useEmailAsLogin ? this.config.data.email : this.config.data.login,\n            email: this.config.data.email,\n            password: this.config.data.password,\n            language: this.pipTranslate.language || 'en',\n            theme: 'default', // todo this.$rootScope['theme'] || 'blue' // pipTheme.theme || 'blue'\n            time_zone: null\n        },\n            (data: SessionData) => {\n                this.pipFormErrors.resetFormErrors(this.config.form, false);\n                if (this.transaction.aborted(transactionId)) return;\n\n                this.pipEntry.openSession(data);\n                this.transaction.end();\n\n                /*this.pipSettingsData.saveSettingsKey(\n                    this.pipEntry.getUserId(data),\n                    this.regestryVerifyEmailKey,\n                    false);*/\n                    this.pipEntryData.saveSettingsKey(\n                        this.pipEntry.getUserId(data),\n                        this.regestryVerifyEmailKey,\n                        false);\n                \n\n                if (this.config.isPostSignup) {\n                    if (!gotoPostSignup) {\n                        this.pipAuthState.go('post_signup', {\n                            party_id: this.pipEntry.getUserId(data)\n                        });\n                    } else {\n                        gotoPostSignup(data);\n                    }\n                } else {\n                    this.pipRest.getResource('email_settings').get(\n                        {\n                            user_id: data.user.id\n                        },\n                        (setting: EmailSettings) => {\n                            if (setting && setting.verified && setting.email == data.user.login) {\n                                this.pipAuthState.goToAuthorized({});\n                            } else {\n                                this.pipAuthState.go('verify_email', {\n                                    email: data.user.login || data.user['email'], serverUrl: this.pipRest.serverUrl \n                                });\n                            }\n                            this.transaction.end();\n                        }, \n                        (error: any) => {\n                            this.pipFormErrors.resetFormErrors(this.config.form, true);\n                            this.pipFormErrors.setFormError(\n                                this.config.form, error, {\n                                    'WRONG_LOGIN': 'signupLogin', // Account was not found\n                                    'NO_LOGIN': 'signupLogin', // Missing account login\n                                    'ALREADY_EXIST': 'signupLogin', // account is already exist\n                                    'WRONG_PASSWORD': 'password', // Missing password\n                                    'NO_EMAIL': 'userEmail',\n                                    'NO_NAME': 'signupFullName',\n                                    'act_execute': 'form', // Unknown error\n                                    '-1': 'form' // server not response\n                                }\n                            );\n                            this.transaction.end(error);\n                        });\n\n\n                }\n            },\n            (error: any) => {\n                // todo error by login\n                this.pipFormErrors.resetFormErrors(this.config.form, true);\n                this.pipFormErrors.setFormError(\n                    this.config.form, error, {\n                        'WRONG_LOGIN': 'signupLogin', // Account was not found\n                        'NO_LOGIN': 'signupLogin', // Missing account login\n                        'ALREADY_EXIST': 'signupLogin', // account is already exist\n                        'WRONG_PASSWORD': 'password', // Missing password\n                        'NO_EMAIL': 'userEmail',\n                        'NO_NAME': 'signupFullName',\n                        'act_execute': 'form', // Unknown error\n                        '-1': 'form' // server not response\n                    }\n                );\n                this.transaction.end(error);\n            }\n        );\n    };\n}","import { EntryPageConfig } from '../common/EntryPageConfig';\nimport { IEntryCommonService } from '../common/IEntryCommonService';\nimport { SignupViewModel } from './SignupViewModel';\nimport { IEntryDataService } from '../data/IEntryDataService';\n\n{\n    class SignupPanelController {\n        public gotoSigninPage: any;\n        public gotoSigninDialog: any;\n        public gotoPostSignup: any;\n        public touchedErrorsWithHint: Function;\n        public isQuery: boolean = false;\n        public error: string;\n\n        constructor(\n            private $scope: ng.IScope,\n            public pipMedia: pip.layouts.IMediaService,\n            public pipFormErrors: pip.errors.IFormErrorsService,\n            public pipEntryData: IEntryDataService,\n            private pipRest: pip.rest.IRestService,\n            private pipSignupViewModel: SignupViewModel\n        ) {\n            \"ngInject\";\n\n            this.pipSignupViewModel.initModel(this.$scope);\n            this.touchedErrorsWithHint = pipFormErrors.touchedErrorsWithHint;\n        }\n\n        public $postLink() {\n            this.config.form = this.$scope.form;\n        }\n\n        public get config(): any {\n            return this.pipSignupViewModel.config;\n        }\n\n        public get transaction(): any {\n            return this.pipSignupViewModel.transaction;\n        }\n\n        public get showServerError(): any {\n            return this.pipSignupViewModel.showServerError;\n        }\n\n        public get hideObject(): any {\n            return this.pipSignupViewModel.hideObject;\n        }\n\n        public gotoSignin() {\n            this.pipSignupViewModel.gotoSignin(this.gotoSigninPage, this.gotoSigninDialog);\n        }\n\n        public onSignup() {\n            this.pipSignupViewModel.onSignup(this.gotoPostSignup);\n        }\n\n        public onEnter(event: any) {\n            if (event.keyCode === 13) {\n                this.onSignup();\n            }\n        }\n\n        public onChangeEmail(field: string) {\n            if (!this.config.data.email) { return }\n            if (this.isQuery) return;\n            this.error = null;\n            \n            this.isQuery = true;\n            this.pipEntryData.signupValidate(this.config.data.email,\n                (data) => {\n                    if (this.config.form && this.config.form[field]) {\n                        this.config.form[field].$setValidity('emailUnique', true);\n                    }\n                    this.isQuery = false;\n                },\n                (err) => {\n                    if (err && err.status == 400 && err.data && err.data.code == 'LOGIN_ALREADY_USED') {\n                        if (this.config.form && this.config.form[field]) {\n                            this.config.form[field].$setValidity('emailUnique', false);\n                        }\n                    } else {\n                        let code: string = err.code || (err.data || {}).code || null;\n                        if (!code && err.status) code = err.status;\n\n                        if (code == '-1') {\n                            this.error = 'ERROR_' + code;\n\n\n                        } else {\n                            // if undefined error for this form or code === undefined/null, go to unhandled error page\n                            if (err.data && err.data.message) {\n                                this.error = err.data.message;\n                            } else if (err.message) {\n                                this.error = err.message;\n                            } else if (err.name) {\n                                this.error = err.name;\n                            } else this.error = err;\n                        }\n                    }\n\n                    this.isQuery = false;\n                });\n        }\n\n        public onServerUrlChanged() {\n            this.error = null;\n            this.config.onServerUrlChanged(this.config.form, this.config.selected.searchURLs);\n        }\n    \n        public onChanged() {\n            this.pipFormErrors.resetFormErrors(this.config.form, false);\n            this.pipFormErrors.resetFieldsErrors(this.config.form, null);\n            this.pipRest.serverUrl = this.config.selected.searchURLs;\n            this.config.data.serverUrl = this.config.selected.searchURLs;\n        }\n        public isError(error: any): boolean {\n            return error.required || error.email || error.emailUnique || error.ERROR_WRONG_LOGIN || error.ERROR_NO_LOGIN\n        }\n    }\n\n    interface ISignupPanelBindings {\n        [key: string]: any;\n\n        gotoPostSignup: any;\n        gotoSigninPage: any;\n        gotoSigninDialog: any;\n    }\n\n    const SignupPanelBindings: ISignupPanelBindings = {\n        gotoPostSignup: '=pipPostSignup',\n        gotoSigninPage: '=pipGotoSigninPage',\n        gotoSigninDialog: '=pipGotoSigninDialog',\n    }\n\n    class SignupPanelBindingsChanges implements ng.IOnChangesObject, ISignupPanelBindings {\n        [key: string]: ng.IChangesObject<any>;\n\n        gotoPostSignup: ng.IChangesObject<boolean>;\n        gotoSigninPage: ng.IChangesObject<Function>;\n        gotoSigninDialog: ng.IChangesObject<boolean>;\n    }\n\n    const SignupPanel: ng.IComponentOptions = {\n        bindings: SignupPanelBindings,\n        controller: SignupPanelController,\n        templateUrl: 'signup/SignupPanel.html'\n    }\n\n    angular.module(\"pipSignupPanel\", ['pipFocused', 'pipEntry.Strings'])\n        .component('pipSignupPanel', SignupPanel);\n}","import { SingupModel } from './SignupModel';\nimport { IEntryDataService } from '../data/IEntryDataService';\nimport { IEntryCommonService } from \"../common/IEntryCommonService\";\nimport { IEntryService } from \"../common/EntryService\";\n\nexport class SignupViewModel {\n    public model: SingupModel;\n\n    constructor(\n        pipEntryCommon: IEntryCommonService,\n        pipTransaction: pip.services.ITransactionService,\n        $rootScope: ng.IRootScopeService,\n        $location: ng.ILocationService,\n        $state: ng.ui.IStateService,\n        $injector: ng.auto.IInjectorService,\n        pipAuthState: pip.rest.IAuthStateService,\n        pipFormErrors: pip.errors.IFormErrorsService,\n        pipRest: pip.rest.IRestService,\n        pipEntry: IEntryService,\n        pipEntryData: IEntryDataService,\n        pipTranslate: pip.services.ITranslateService\n    ) {\n        \"ngInject\";\n\n        this.model = new SingupModel(pipEntryCommon, pipTransaction, $rootScope, $location, $state, $injector,\n            pipAuthState, pipFormErrors, pipRest, pipEntry, pipEntryData, pipTranslate);\n    }\n\n    public get transaction(): pip.services.Transaction {\n        return this.model.transaction;\n    }\n\n    public get hideObject(): any {\n        return this.model.hideObject;\n    }\n\n    public get showServerError(): any {\n        return this.model.showServerError;\n    }\n\n    public get config(): any {\n        return this.model.config;\n    }\n\n    public initModel($scope) {\n        this.model.init($scope);\n    }\n\n    public gotoSignin(gotoSigninPage: any, gotoSigninDialog: any) {\n        this.model.gotoSignin(gotoSigninPage, gotoSigninDialog);  \n    }\n\n    public onSignup(gotoPostSignup: any) {\n        this.model.onSignup(gotoPostSignup);\n    }\n}\n\nangular.module('pipEntry.Signup')\n    .service('pipSignupViewModel', SignupViewModel);","import { IEntryCommonService } from '../common/IEntryCommonService';\nimport { VerifyEmailViewModel } from './VerifyEmailViewModel';\nimport { EntryPageConfig } from '../common/EntryPageConfig';\n\nexport class VerifyEmailController {\n    public showServerError: boolean;\n    public touchedErrorsWithHint: Function;\n    public form: any;\n    public data: any;\n    public error: any;\n    public serverUrl: string;\n    public email: string;\n    public showValidateProgress: boolean;\n\n    constructor(\n        private $scope: ng.IScope,\n        private $window: ng.IWindowService,\n        private pipFormErrors: pip.errors.IFormErrorsService,\n        private pipVerifyEmailViewModel: VerifyEmailViewModel,\n        private pipIdentity: pip.services.IIdentityService,\n        private $timeout: ng.ITimeoutService\n    ) {\n        \"ngInject\";\n\n        pipVerifyEmailViewModel.initModel(this.$scope);\n        this.touchedErrorsWithHint = pipFormErrors.touchedErrorsWithHint;\n\n        // postlink hak\n        $timeout(() => {\n            this.config.form = this.$scope.form;\n            if (this.config.data.code && this.config.data.email) {\n                this.showValidateProgress = true;\n                this.pipVerifyEmailViewModel.onVerify(\n                    (data: any) => {\n                        this.pipVerifyEmailViewModel.onContinue();\n                    },\n                    (error: any) => {\n                        this.showValidateProgress = false;\n                    }\n                );\n            } else {\n                this.showValidateProgress = false;\n            }\n        }, 0)\n    }\n\n    public goBack(): void {\n        // this.$window.history.back();\n        this.pipVerifyEmailViewModel.onCancel();\n    }\n\n    public get config(): EntryPageConfig {\n        return this.pipVerifyEmailViewModel.config;\n    }\n\n    public get transaction(): any {\n        return this.pipVerifyEmailViewModel.transaction;\n    }\n\n    public onVerify() {\n        this.pipVerifyEmailViewModel.onVerify();\n    }\n\n    public onRecover() {\n        this.pipVerifyEmailViewModel.onRecover();\n    }\n}\n\nexport class VerifyEmailSuccessController {\n    constructor(\n        $scope: ng.IScope,\n        private pipVerifyEmailViewModel: VerifyEmailViewModel\n    ) {\n        pipVerifyEmailViewModel.initModel($scope);\n    }\n\n    public onContinue() {\n        this.pipVerifyEmailViewModel.onContinue();\n    }\n}\n\nangular.module('pipEntry.VerifyEmail', []);","import { EntryModel } from '../common/EntryModel';\nimport { IEntryCommonService } from \"../common/IEntryCommonService\";\nimport { IEntryDataService } from '../data/IEntryDataService';\nimport { IEntryService } from \"../common/EntryService\";\n\nexport class VerifyEmailModel extends EntryModel {\n    private regestryVerifyEmailKey: string = 'verified_email';\n\n    constructor(\n        pipEntryCommon: IEntryCommonService,\n        pipTransaction: pip.services.ITransactionService,\n        private $rootScope: ng.IRootScopeService,\n        private $location: ng.ILocationService,\n        private $state: ng.ui.IStateService,\n        private $injector: ng.auto.IInjectorService,\n        private pipAuthState: pip.rest.IAuthStateService,\n        private pipFormErrors: pip.errors.IFormErrorsService,\n        private pipRest: pip.rest.IRestService,\n        private pipEntryData: IEntryDataService,\n        private pipIdentity: pip.services.IIdentityService,\n        private pipEntry: IEntryService\n    ) {\n        \"ngInject\";\n\n        super(pipEntryCommon);\n        this.transaction = pipTransaction.create('entry.verify_email');\n    }\n\n    public init($scope) {\n        this.initModel($scope);\n        this.setElementVisability();\n        this.pipEntryCommon.configureAppBar();\n    }\n\n    private setElementVisability() {\n        this.hideObject.remember = new Boolean(this.hideObject.remember) == true;\n        this.hideObject.title = new Boolean(this.hideObject.title) == true;\n        this.hideObject.server = new Boolean(this.hideObject.server) == true;\n        this.hideObject.forgotPassword = new Boolean(this.hideObject.forgotPassword) == true;\n        this.hideObject.signup = new Boolean(this.hideObject.signup) == true;\n        this.hideObject.hint = new Boolean(this.hideObject.hint) == true;\n        this.hideObject.progress = new Boolean(this.hideObject.progress) == true;\n    }\n\n    public onVerify(successCallback?: (data: any) => void, errorCallback?: (error: any) => void) {\n        if (this.config.form.$invalid) {\n            this.pipFormErrors.resetFormErrors(this.config.form, true);\n            return;\n        }\n\n        var transactionId = this.transaction.begin('PROCESSING');\n        if (!transactionId) return;\n\n        if (!this.pipRest.lockServerUrl) {\n            this.pipRest.serverUrl = this.config.data.serverUrl;\n        }\n\n        this.pipEntryData.verifyEmail({\n            login: this.config.data.login,\n            email: this.config.data.email || this.config.data.login,\n            code: this.config.data.code\n        },\n            (data) => {\n                this.pipFormErrors.resetFormErrors(this.config.form, false);\n                if (this.transaction.aborted(transactionId)) return;\n\n                let userId = this.pipEntryData.getUserId();\n                if (successCallback) successCallback(data);\n\n                this.transaction.end();\n                this.pipEntryData.saveSettingsKey(\n                    userId,\n                    this.regestryVerifyEmailKey,\n                    true,\n                    (data) => {\n                        let identity: any = this.pipIdentity.identity;\n                        if (identity && identity.user) {\n                            if (!identity.user.settings) identity.user.settings = {};\n\n                            identity.user.settings[this.regestryVerifyEmailKey] = \"true\";\n                            this.pipIdentity.identity = identity;\n                        }\n                        this.onContinue();\n                    },\n                (error: any) => {\n                    this.transaction.end(error)\n                });\n\n            },\n            (error) => {\n                this.transaction.end(error);\n                this.pipFormErrors.resetFormErrors(this.config.form, true);\n                this.pipFormErrors.setFormError(\n                    this.config.form, error, {\n                        'WRONG_LOGIN_EMAIL': 'login', // Account was not found\n                        'NO_LOGIN_EMAIL': 'login', // Missing account login\n                        'NO_EMAIL': 'login', // Missing account login\n                        'INVALID_CODE': 'code', // Invalid password recovery code\n                        'act_execute': 'form', // Unknown error\n                        '-1': 'form' // server not response\n                    }\n                );\n                if (errorCallback) errorCallback(error);\n            }\n        );\n    }\n\n    public onRecover() {\n        if (!this.config.data.login) {\n\n            return;\n        }\n\n        const tid = this.transaction.begin('PROCESSING');\n        if (!tid) return;\n\n        this.pipEntryData.requestEmailVerification({\n            login: this.config.data.login\n        },\n            (data) => {\n                if (this.transaction.aborted(tid)) return;\n                this.config.data.code = null\n                this.transaction.end();\n            },\n            (error) => {\n                this.transaction.end(error);\n            }\n        );\n    }\n// todo \n    public onContinue() {\n        if (this.pipAuthState.params.redirect_to) {\n            this.$location.url(this.pipAuthState.params.redirect_to);\n        } else {\n            this.pipAuthState.goToAuthorized(this.config && this.config.data ? this.config.data : {});\n        }\n    }\n\n    public onCancel() {\n        this.pipEntry.signout();\n        this.pipAuthState.goToUnauthorized({});\n    }\n}","import { VerifyEmailModel } from './VerifyEmailModel';\nimport { IEntryDataService } from '../data/IEntryDataService';\nimport { IEntryService } from \"../common/EntryService\";\n\nexport class VerifyEmailViewModel {\n    public model: VerifyEmailModel;\n\n    constructor(\n        pipEntryCommon: any,\n        pipTransaction: pip.services.ITransactionService,\n        $rootScope: ng.IRootScopeService,\n        $location: ng.ILocationService,\n        $state: ng.ui.IStateService,\n        $injector: ng.auto.IInjectorService,\n        pipAuthState: pip.rest.IAuthStateService,\n        pipFormErrors: pip.errors.IFormErrorsService,\n        pipRest: pip.rest.IRestService,\n        pipEntryData: IEntryDataService,\n        pipIdentity: pip.services.IIdentityService,\n        pipEntry: IEntryService\n    ) {\n        \"ngInject\";\n\n        this.model = new VerifyEmailModel(pipEntryCommon, pipTransaction, $rootScope, $location, $state,\n            $injector, pipAuthState, pipFormErrors, pipRest, pipEntryData, pipIdentity, pipEntry);\n    }\n\n    public get transaction(): pip.services.Transaction {\n        return this.model.transaction;\n    }\n\n    public get hideObject(): any {\n        return this.model.hideObject;\n    }\n\n    public get showServerError(): any {\n        return this.model.showServerError;\n    }\n\n    public get config(): any {\n        return this.model.config;\n    }\n\n    public initModel($scope) {\n        this.model.init($scope);\n    }\n\n    public onVerify(successCallback?: (data: any) => void, errorCallback?: (error: any) => void) {\n        this.model.onVerify(successCallback, errorCallback);\n    }\n\n    public onRecover() {\n        this.model.onRecover();\n    }\n\n    public onContinue() {\n        this.model.onContinue();\n    }\n\n    public onCancel() {\n        this.model.onCancel();\n    }\n}\n\nangular.module('pipEntry.VerifyEmail')\n    .service('pipVerifyEmailViewModel', VerifyEmailViewModel);","(function(module) {\ntry {\n  module = angular.module('pipEntry.Templates');\n} catch (e) {\n  module = angular.module('pipEntry.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('change_password/ChangePassword.html',\n    '<div class=\"pip-card-container pip-outer-scroll pip-entry\"><pip-card width=\"400\"><pip-change-password-panel class=\"scroll-y\"></pip-change-password-panel><div class=\"pip-footer\"><md-button ng-hide=\"$ctrl.transaction.busy()\" ng-click=\"$ctrl.goBack()\" class=\"rm8\" aria-label=\"CANCEL\">{{ ::\\'CANCEL\\' | translate }}</md-button><md-button ng-hide=\"$ctrl.transaction.busy()\" ng-click=\"$ctrl.onChange()\" aria-label=\"ENTRY_CHANGE_PASSWORD\" ng-disabled=\"($ctrl.config.form.$pristine && !$ctrl.config.data.login) || $ctrl.config.data.serverUrl.length == 0 || $ctrl.config.data.login.length == 0 || $ctrl.config.data.code.length == 0 || $ctrl.config.data.password.length < 6\" class=\"md-accent\" type=\"submit\">{{ ::\\'ENTRY_CHANGE_PASSWORD\\' | translate }}</md-button><md-button class=\"md-warn\" ng-show=\"$ctrl.transaction.busy()\" ng-click=\"$ctrl.transaction.abort()\" aria-label=\"ABORT\">{{ ::\\'CANCEL\\' | translate }}</md-button></div></pip-card></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipEntry.Templates');\n} catch (e) {\n  module = angular.module('pipEntry.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('change_password/ChangePasswordDialog.html',\n    '<md-dialog class=\"pip-entry lp0 rp0\"><md-dialog-content><pip-change-password-panel></pip-change-password-panel></md-dialog-content><md-dialog-actions class=\"layout-row layout-align-end-center\"><md-button ng-hide=\"$ctrl.transaction.busy()\" ng-click=\"$ctrl.goBack()\" class=\"rm8\" aria-label=\"CANCEL\">{{ ::\\'CANCEL\\' | translate }}</md-button><md-button ng-hide=\"$ctrl.transaction.busy()\" ng-click=\"$ctrl.onChange()\" aria-label=\"ENTRY_CHANGE_PASSWORD\" ng-disabled=\"($ctrl.config.form.$pristine && !$ctrl.config.data.login) || $ctrl.config.data.serverUrl.length == 0 || $ctrl.config.data.login.length == 0 || $ctrl.config.data.code.length == 0 || $ctrl.config.data.password.length < 6\" class=\"md-accent\" type=\"submit\">{{ ::\\'ENTRY_CHANGE_PASSWORD\\' | translate }}</md-button><md-button class=\"md-warn\" ng-show=\"$ctrl.transaction.busy()\" ng-click=\"$ctrl.transaction.abort()\" aria-label=\"ABORT\">{{ ::\\'CANCEL\\' | translate }}</md-button></md-dialog-actions></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipEntry.Templates');\n} catch (e) {\n  module = angular.module('pipEntry.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('change_password/ChangePasswordPanel.html',\n    '<div class=\"pip-body\"><div class=\"pip-content\"><md-progress-linear ng-show=\"$ctrl.transaction.busy() && $ctrl.showServerError && !$ctrl.hideObject.progress\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><h2 ng-if=\"!$ctrl.hideObject.changePwdTitle\">{{::\\'CHANGE_PWD_PASSWORD\\' | translate}}</h2><p class=\"title-padding bm16\" ng-if=\"!$ctrl.hideObject.changePwdSubTitle\">{{::\\'CHANGE_PWD_TEXT\\' | translate}}</p><form name=\"form\" novalidate=\"\" autocomplete=\"off\"><input name=\"password\" style=\"display:none\"> <input name=\"passwordNew\" style=\"display:none\"><div ng-messages=\"$ctrl.config.form.$serverError\" class=\"text-error bm8 color-error\" md-auto-hide=\"false\"><div ng-message=\"ERROR_act_execute\">{{ ::\\'ERROR_ACT_EXECUTE\\' | translate }}</div><div ng-message=\"ERROR_-1\">{{ ::\\'ERROR_SERVER\\' | translate }}</div><div ng-message=\"ERROR_UNKNOWN\">{{ \\'ERROR_UNKNOWN\\' | translate }}</div></div><div ng-show=\"$ctrl.config.showServerUrl && !$ctrl.hideObject.server\" class=\"bp8\"><md-autocomplete ng-initial=\"\" autofocus=\"\" tabindex=\"1\" class=\"pip-combobox w-stretch bm8\" name=\"server\" ng-enabled=\"!$ctrl.transaction.busy()\" placeholder=\"{{::\\'ENTRY_SERVER_URL\\' | translate}}\" md-no-cache=\"true\" md-selected-item=\"$ctrl.config.data.serverUrl\" md-search-text=\"$ctrl.config.selected.searchURLs\" md-items=\"item in $ctrl.config.getMatches($ctrl.config.selected.searchURLs)\" md-item-text=\"item\" md-selected-item-change=\"$ctrl.onServerUrlChanged()\" md-search-text-change=\"$ctrl.onChanged()\" md-delay=\"200\" ng-model=\"$ctrl.config.data.serverUrl\" pip-clear-errors=\"\"><span md-highlight-text=\"$ctrl.config.selected.searchURLs\">{{ item }}</span></md-autocomplete></div><md-input-container class=\"pip-no-hint\" style=\"padding-bottom: 4px!important;\"><label>{{::\\'OLD_PASSWORD\\' | translate}}</label> <input name=\"password\" ng-disabled=\"$ctrl.transaction.busy()\" xxxpip-clear-errors=\"\" type=\"password\" tabindex=\"4\" ng-model=\"$ctrl.config.data.password\" required=\"\" minlength=\"6\" ng-change=\"$ctrl.onChangePassword()\" pip-compare-old-password=\"\" compare-to=\"$ctrl.config.data.passwordNew\"><div class=\"hint\" ng-if=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.password, true).hint && !$ctrl.hideObject.hint\">{{::\\'HINT_PASSWORD\\' | translate}}</div><div ng-messages=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.password, true)\" class=\"md-input-error\" md-auto-hide=\"false\"><div ng-message=\"required\">{{::\\'MINLENGTH_PASSWORD\\' | translate}}</div><div ng-message=\"minlength\">{{::\\'MINLENGTH_PASSWORD\\' | translate}}</div><div ng-message=\"ERROR_WRONG_PASSWORD\">{{::\\'ERROR_WRONG_PASSWORD\\' | translate}}</div><div ng-message=\"ERROR_compareTo\">{{::\\'PASSWORD_IDENTICAL\\' | translate}}</div></div></md-input-container><md-input-container class=\"display bp4\"><label>{{::\\'NEW_PASSWORD_SET\\' | translate}}</label> <input name=\"passwordNew\" ng-disabled=\"$ctrl.transaction.busy()\" xxxpip-clear-errors=\"\" type=\"password\" tabindex=\"4\" ng-model=\"$ctrl.config.data.passwordNew\" ng-change=\"$ctrl.onChangePasswordNew()\" required=\"\" minlength=\"6\" ng-keypress=\"$ctrl.onEnter($event)\" pip-test=\"input-password\" autocomplete=\"off\" pip-compare-new-password=\"\" compare-to1=\"$ctrl.config.data.password\"><div class=\"hint\" ng-if=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.passwordNew, true).hint && !$ctrl.hideObject.hint\">{{::\\'HINT_PASSWORD\\' | translate}}</div><div ng-messages=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.passwordNew, true)\" md-auto-hide=\"false\"><div ng-message=\"required\">{{::\\'HINT_PASSWORD\\' | translate}}</div><div ng-message=\"minlength\">{{::\\'HINT_PASSWORD\\' | translate}}</div><div ng-message=\"ERROR_compareTo\">{{::\\'PASSWORD_IDENTICAL\\' | translate}}</div><div ng-message=\"ERROR_WRONG_PASSWORD\" xxxng-if=\"!$ctrl.config.form.passwordNew.$pristine\">{{::\\'ERROR_WRONG_PASSWORD\\' | translate}}</div></div></md-input-container><md-input-container class=\"display bp4\" ng-if=\"!$ctrl.hideObject.passwordConfirm\"><label>{{::\\'NEW_PASSWORD_CONFIRM\\' | translate}}</label> <input name=\"passwordConfirm\" type=\"password\" tabindex=\"4\" required=\"\" minlength=\"6\" ng-model=\"$ctrl.confirmPassword\" ng-disabled=\"$ctrl.transaction.busy()\" xxpip-clear-errors=\"\" ng-change=\"$ctrl.onChangePasswordConfirm()\" pip-compare-password-match=\"\" compare-to2=\"$ctrl.config.data.passwordNew\" ng-keypress=\"$ctrl.onEnter($event)\" pip-test=\"input-password\"><div class=\"hint\" ng-if=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.passwordConfirm, true).hint && !$ctrl.hideObject.hint\">{{::\\'HINT_PASSWORD\\' | translate}}</div><div ng-messages=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.passwordConfirm, true)\" md-auto-hide=\"false\"><div ng-message=\"required\">{{::\\'HINT_PASSWORD\\' | translate}}</div><div ng-message=\"minlength\">{{::\\'HINT_PASSWORD\\' | translate}}</div><div ng-message=\"ERROR_compareTo\">{{::\\'PASSWORD_MATCH\\' | translate}}</div></div></md-input-container></form></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipEntry.Templates');\n} catch (e) {\n  module = angular.module('pipEntry.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('expire_change_password/ExpireChangePassword.html',\n    '<div class=\"pip-card-container pip-outer-scroll pip-entry\"><pip-card width=\"400\"><pip-expire-change-password-panel class=\"scroll-y\"></pip-expire-change-password-panel><div class=\"pip-footer\"><md-button ng-hide=\"$ctrl.transaction.busy()\" ng-click=\"$ctrl.goBack()\" class=\"rm8\" aria-label=\"CANCEL\">{{ ::\\'CANCEL\\' | translate }}</md-button><md-button ng-hide=\"$ctrl.transaction.busy()\" ng-click=\"$ctrl.onChange()\" aria-label=\"ENTRY_EXPIRE_CHANGE_PASSWORD\" ng-disabled=\"($ctrl.config.form.$pristine && !$ctrl.config.data.login) || $ctrl.config.data.serverUrl.length == 0 || $ctrl.config.data.login.length == 0 || $ctrl.config.data.code.length == 0 || $ctrl.config.data.password.length < 6\" class=\"md-accent\" type=\"submit\">{{ ::\\'ENTRY_EXPIRE_CHANGE_PASSWORD\\' | translate }}</md-button><md-button class=\"md-warn\" ng-show=\"$ctrl.transaction.busy()\" ng-click=\"$ctrl.transaction.abort()\" aria-label=\"ABORT\">{{ ::\\'CANCEL\\' | translate }}</md-button></div></pip-card></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipEntry.Templates');\n} catch (e) {\n  module = angular.module('pipEntry.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('expire_change_password/ExpireChangePasswordDialog.html',\n    '<md-dialog class=\"pip-entry lp0 rp0\"><md-dialog-content><pip-expire-change-password-panel></pip-expire-change-password-panel></md-dialog-content><md-dialog-actions class=\"layout-row layout-align-end-center\"><md-button ng-hide=\"$ctrl.transaction.busy()\" ng-click=\"$ctrl.goBack()\" class=\"rm8\" aria-label=\"CANCEL\">{{ ::\\'CANCEL\\' | translate }}</md-button><md-button ng-hide=\"$ctrl.transaction.busy()\" ng-click=\"$ctrl.onChange()\" aria-label=\"ENTRY_EXPIRE_CHANGE_PASSWORD\" ng-disabled=\"($ctrl.config.form.$pristine && !$ctrl.config.data.login) || $ctrl.config.data.serverUrl.length == 0 || $ctrl.config.data.login.length == 0 || $ctrl.config.data.code.length == 0 || $ctrl.config.data.password.length < 6\" class=\"md-accent\" type=\"submit\">{{ ::\\'ENTRY_EXPIRE_CHANGE_PASSWORD\\' | translate }}</md-button><md-button class=\"md-warn\" ng-show=\"$ctrl.transaction.busy()\" ng-click=\"$ctrl.transaction.abort()\" aria-label=\"ABORT\">{{ ::\\'CANCEL\\' | translate }}</md-button></md-dialog-actions></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipEntry.Templates');\n} catch (e) {\n  module = angular.module('pipEntry.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('expire_change_password/ExpireChangePasswordPanel.html',\n    '<div class=\"pip-body\"><div class=\"pip-content\"><md-progress-linear ng-show=\"$ctrl.transaction.busy() && $ctrl.showServerError && !$ctrl.hideObject.progress\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><h2 ng-if=\"!$ctrl.hideObject.changePwdTitle\">{{::\\'EXPIRE_CHANGE_PWD_PASSWORD\\' | translate}}</h2><p class=\"title-padding bm16\" ng-if=\"!$ctrl.hideObject.changePwdSubTitle\">{{::\\'EXPIRE_CHANGE_PWD_TEXT\\' | translate}}</p><form name=\"form\" novalidate=\"\" autocomplete=\"off\"><div ng-messages=\"$ctrl.config.form.$serverError\" class=\"text-error bm8 color-error\" md-auto-hide=\"false\"><div ng-message=\"ERROR_act_execute\">{{::\\'ERROR_ACT_EXECUTE\\' | translate}}</div><div ng-message=\"ERROR_-1\">{{::\\'ERROR_SERVER\\' | translate}}</div><div ng-message=\"ERROR_UNKNOWN\">{{ $ctrl.config.form.$serverError.ERROR_UNKNOWN | translate }}</div></div><div class=\"bp16\"><a ng-hide=\"$ctrl.config.showServerUrl || $ctrl.config.fixedServerUrl || $ctrl.hideObject.server\" ng-click=\"$ctrl.config.showServerUrl = true\" href=\"\">{{::\\'ENTRY_CHANGE_SERVER\\' | translate}}</a></div><div ng-show=\"$ctrl.config.showServerUrl && !$ctrl.hideObject.server\" class=\"bp8\"><md-autocomplete ng-initial=\"\" autofocus=\"\" tabindex=\"1\" class=\"pip-combobox w-stretch bm8\" name=\"server\" ng-enabled=\"!$ctrl.transaction.busy()\" placeholder=\"{{::\\'ENTRY_SERVER_URL\\' | translate}}\" md-no-cache=\"true\" md-selected-item=\"$ctrl.config.data.serverUrl\" md-search-text=\"$ctrl.config.selected.searchURLs\" md-items=\"item in $ctrl.config.getMatches($ctrl.config.selected.searchURLs)\" md-item-text=\"item\" md-selected-item-change=\"$ctrl.onServerUrlChanged()\" md-search-text-change=\"$ctrl.onChanged()\" md-delay=\"200\" ng-model=\"$ctrl.config.data.serverUrl\" pip-clear-errors=\"\"><span md-highlight-text=\"$ctrl.config.selected.searchURLs\">{{ item }}</span></md-autocomplete></div><md-input-container class=\"pip-no-hint\" style=\"padding-bottom: 4px!important;\"><label>{{::\\'OLD_PASSWORD\\' | translate}}</label> <input name=\"password\" ng-disabled=\"$ctrl.transaction.busy()\" pip-clear-errors=\"\" type=\"password\" tabindex=\"4\" ng-model=\"$ctrl.config.data.password\" required=\"\" minlength=\"6\"><div class=\"hint\" ng-if=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.password).hint && !$ctrl.hideObject.hint\">{{::\\'HINT_PASSWORD\\' | translate}}</div><div ng-messages=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.password)\" class=\"md-input-error\" md-auto-hide=\"false\"><div ng-message=\"required\">{{::\\'MINLENGTH_PASSWORD\\' | translate}}</div><div ng-message=\"minlength\">{{::\\'MINLENGTH_PASSWORD\\' | translate}}</div><div ng-message=\"ERROR_WRONG_PASSWORD\">{{::\\'ERROR_WRONG_PASSWORD\\' | translate}}</div></div></md-input-container><md-input-container class=\"display bp4\"><label>{{::\\'NEW_PASSWORD_SET\\' | translate}}</label> <input name=\"passwordNew\" ng-disabled=\"$ctrl.transaction.busy()\" pip-clear-errors=\"\" type=\"password\" tabindex=\"4\" ng-model=\"$ctrl.config.data.passwordNew\" required=\"\" minlength=\"6\" ng-keypress=\"$ctrl.onEnter($event)\" pip-test=\"input-password\"><div class=\"hint\" ng-if=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.passwordNew).hint && !$ctrl.hideObject.hint\">{{::\\'HINT_PASSWORD\\' | translate}}</div><div ng-messages=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.passwordNew)\" md-auto-hide=\"false\"><div ng-message=\"required\">{{::\\'HINT_PASSWORD\\' | translate}}</div><div ng-message=\"minlength\">{{::\\'HINT_PASSWORD\\' | translate}}</div><div ng-message=\"ERROR_WRONG_PASSWORD\" xxxng-if=\"!$ctrl.config.form.passwordNew.$pristine\">{{::\\'ERROR_WRONG_PASSWORD\\' | translate}}</div></div></md-input-container><md-input-container class=\"display bp4\" ng-if=\"!$ctrl.hideObject.passwordConfirm\"><label>{{::\\'NEW_PASSWORD_CONFIRM\\' | translate}}</label> <input name=\"passwordConfirm\" type=\"password\" tabindex=\"4\" required=\"\" minlength=\"6\" ng-model=\"$ctrl.confirmPassword\" ng-disabled=\"$ctrl.transaction.busy()\" pip-clear-errors=\"\" pip-compare-password-match=\"\" compare-to2=\"$ctrl.config.data.passwordNew\" ng-keypress=\"$ctrl.onEnter($event)\" pip-test=\"input-password\"><div class=\"hint\" ng-if=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.passwordConfirm, true).hint && !$ctrl.hideObject.hint\">{{::\\'HINT_PASSWORD\\' | translate}}</div><div ng-messages=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.passwordConfirm, true)\" md-auto-hide=\"false\"><div ng-message=\"ERROR_compareTo\">{{::\\'PASSWORD_MATCH\\' | translate}}</div><div ng-message=\"required\">{{::\\'HINT_PASSWORD\\' | translate}}</div><div ng-message=\"minlength\">{{::\\'HINT_PASSWORD\\' | translate}}</div></div></md-input-container></form></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipEntry.Templates');\n} catch (e) {\n  module = angular.module('pipEntry.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('recover_password/RecoverPassword.html',\n    '<div class=\"pip-card-container pip-outer-scroll pip-entry\"><pip-card width=\"400\"><pip-recover-password-panel class=\"scroll-y\"></pip-recover-password-panel><div class=\"pip-footer\"><md-button ng-hide=\"$ctrl.transaction.busy()\" ng-click=\"$ctrl.goBack()\" class=\"rm8\" aria-label=\"CANCEL\">{{ ::\\'CANCEL\\' | translate }}</md-button><md-button ng-hide=\"$ctrl.transaction.busy()\" class=\"md-accent\" ng-click=\"$ctrl.onRecover()\" aria-label=\"RECOVER_PWD_RECOVER\" type=\"submit\" ng-disabled=\"($ctrl.config.form.$pristine && !$ctrl.config.data.login) || $ctrl.config.data.serverUrl.length == 0 || $ctrl.config.data.login.length == 0\">{{ ::\\'RECOVER_PWD_RECOVER\\' | translate }}</md-button><md-button ng-show=\"$ctrl.transaction.busy()\" class=\"md-warn\" ng-click=\"$ctrl.transaction.abort()\" aria-label=\"ABORT\">{{ ::\\'CANCEL\\' | translate }}</md-button></div></pip-card></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipEntry.Templates');\n} catch (e) {\n  module = angular.module('pipEntry.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('recover_password/RecoverPasswordDialog.html',\n    '<md-dialog class=\"pip-entry lp0 rp0\"><md-dialog-content><pip-recover-password-panel></pip-recover-password-panel></md-dialog-content><md-dialog-actions class=\"layout-row layout-align-end-center\"><md-button ng-hide=\"$ctlr.transaction.busy()\" ng-click=\"$ctlr.goBack()\" class=\"rm8\" aria-label=\"CANCEL\">{{::\\'CANCEL\\' | translate}}</md-button><md-button ng-hide=\"$ctlr.transaction.busy()\" class=\"md-accent\" ng-click=\"$ctlr.onRecover()\" aria-label=\"RECOVER_PWD_RECOVER\" ng-disabled=\"($$ctlr.config.form.$pristine && !$ctlr.config.data.login) || $ctlr.config.data.login== undefined || || $ctlr.config.data.serverUrl.length == 0 || $ctlr.config.data.login.length == 0\">{{::\\'RECOVER_PWD_RECOVER\\' | translate}}</md-button><md-button ng-show=\"$ctlr.transaction.busy()\" class=\"md-warn\" ng-click=\"$ctlr.transaction.abort()\" aria-label=\"ABORT\">{{::\\'CANCEL\\' | translate}}</md-button></md-dialog-actions></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipEntry.Templates');\n} catch (e) {\n  module = angular.module('pipEntry.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('recover_password/RecoverPasswordPanel.html',\n    '<div class=\"pip-body\"><div class=\"pip-content\"><md-progress-linear ng-show=\"$ctrl.transaction.busy() && !$ctrl.hideObject.progress\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><h2 ng-if=\"!$ctrl.hideObject.title\">{{ \\'RECOVER_PWD_TITLE\\' | translate }}</h2><p class=\"text-primary tm0 bm16\" ng-if=\"!$ctrl.hideObject.subTitle1 && !$ctrl.config.useEmailAsLogin\">{{ \\'RECOVER_PWD_TEXT_1_LOGIN\\' | translate }}</p><p class=\"text-primary tm0 bm16\" ng-if=\"!$ctrl.hideObject.subTitle1 && $ctrl.config.useEmailAsLogin\">{{ \\'RECOVER_PWD_TEXT_1_EMAIL\\' | translate }}</p><p class=\"text-primary tm0 bm16\" ng-if=\"!$ctrl.hideObject.subTitle2\">{{ \\'RECOVER_PWD_TEXT_2\\' | translate }}</p><form name=\"form\" novalidate=\"\" autocomplete=\"off\"><div ng-messages=\"$ctrl.config.form.$serverError\" class=\"text-error bm8 color-error\" md-auto-hide=\"false\"><div ng-message=\"ERROR_act_execute\">{{::\\'ERROR_ACT_EXECUTE\\' | translate}}</div><div ng-message=\"ERROR_-1\">{{::\\'ERROR_SERVER\\' | translate}}</div><div ng-message=\"ERROR_UNKNOWN\">{{ $ctrl.config.form.$serverError.ERROR_UNKNOWN | translate }}</div></div><div class=\"bp16\"><a ng-hide=\"$ctrl.config.showServerUrl || $ctrl.config.fixedServerUrl || $ctrl.hideObject.server\" ng-click=\"$ctrl.config.showServerUrl = true\" href=\"\">{{ ::\\'ENTRY_CHANGE_SERVER\\' | translate }}</a></div><div ng-show=\"$ctrl.config.showServerUrl && !$ctrl.hideObject.server\" class=\"bp8\"><md-autocomplete ng-initial=\"\" autofocus=\"\" tabindex=\"1\" class=\"pip-combobox w-stretch bm8\" name=\"server\" aria-label=\"URL\" ng-enabled=\"!$ctrl.transaction.busy()\" placeholder=\"{{::\\'ENTRY_SERVER_URL\\' | translate}}\" md-no-cache=\"true\" md-selected-item=\"$ctrl.config.data.serverUrl\" md-search-text=\"$ctrl.config.selected.searchURLs\" md-items=\"item in $ctrl.config.getMatches($ctrl.config.selected.searchURLs)\" md-item-text=\"item\" md-selected-item-change=\"$ctrl.onServerUrlChanged()\" md-search-text-change=\"$ctrl.onChanged()\" md-delay=\"200\" ng-model=\"$ctrl.config.data.serverUrl\" pip-clear-errors=\"\"><span md-highlight-text=\"$ctrl.config.selected.searchURLs\">{{ item }}</span></md-autocomplete></div><md-input-container class=\"pip-no-hint\" style=\"padding-bottom: 4px!important;\"><label ng-if=\"!$ctrl.config.useEmailAsLogin\">{{::\\'LOGIN\\' | translate}}</label> <label ng-if=\"$ctrl.config.useEmailAsLogin\">{{::\\'EMAIL\\' | translate}}</label> <input name=\"login\" type=\"text\" aria-label=\"LOGIN\" ng-model=\"$ctrl.config.data.login\" required=\"\" step=\"any\" pip-clear-errors=\"\" ng-disabled=\"$ctrl.transaction.busy()\" tabindex=\"2\"><div class=\"hint\" ng-if=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.login).hint && !$ctrl.hideObject.hint && !$ctrl.config.useEmailAsLogin\">{{::\\'HINT_LOGIN\\' | translate}}</div><div class=\"hint\" ng-if=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.login).hint && !$ctrl.hideObject.hint && $ctrl.config.useEmailAsLogin\">{{::\\'HINT_EMAIL\\' | translate}}</div><div ng-messages=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.login)\" class=\"md-input-error\" md-auto-hide=\"false\"><div ng-message=\"required\">{{::\\'ERROR_LOGIN_INVALID\\' | translate }}</div><div ng-message=\"ERROR_WRONG_LOGIN\">{{::\\'ERROR_WRONG_LOGIN\\' | translate}}</div><div ng-message=\"ERROR_NO_LOGIN\">{{::\\'ERROR_NO_LOGIN\\' | translate}}</div><div ng-message=\"ERROR_LOGIN_NOT_FOUND\">{{::\\'ERROR_LOGIN_NOT_FOUND\\' | translate}}</div></div></md-input-container></form></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipEntry.Templates');\n} catch (e) {\n  module = angular.module('pipEntry.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('post_signup/PostSignup.html',\n    '<div class=\"pip-card-container pip-outer-scroll pip-entry\"><pip-card width=\"400\"><pip-post-signup-panel pip-party=\"$ctrl.$party\"></pip-post-signup-panel><div class=\"pip-footer\"><md-button ng-hide=\"$ctrl.transaction.busy()\" class=\"md-accent\" type=\"submit\" ng-click=\"$ctrl.onPostSignupSubmit()\" aria-label=\"CONTINUE\">{{ ::\\'CONTINUE\\' | translate }}</md-button><md-button ng-show=\"$ctrl.transaction.busy()\" class=\"md-warn\" ng-click=\"$ctrl.transaction.abort()\" aria-label=\"ABORT\">{{ ::\\'CANCEL\\' | translate }}</md-button></div></pip-card></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipEntry.Templates');\n} catch (e) {\n  module = angular.module('pipEntry.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('post_signup/PostSignupDialog.html',\n    '<md-dialog class=\"pip-entry lp0 rp0\"><md-dialog-content><pip-post-signup-panel pip-party=\"$ctrl.$party\"></pip-post-signup-panel></md-dialog-content><md-dialog-actions class=\"layout-row layout-align-end-center\"><md-button ng-hide=\"$ctrl.transaction.busy()\" class=\"md-accent\" ng-click=\"$ctrl.onPostSignupSubmit()\" aria-label=\"CONTINUE\">{{ ::\\'CONTINUE\\' | translate }}</md-button><md-button ng-show=\"$ctrl.transaction.busy()\" class=\"md-warn\" ng-click=\"$ctrl.transaction.abort()\" aria-label=\"ABORT\">{{ ::\\'CANCEL\\' | translate }}</md-button></md-dialog-actions></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipEntry.Templates');\n} catch (e) {\n  module = angular.module('pipEntry.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('post_signup/PostSignupPanel.html',\n    '<div class=\"pip-body\"><div class=\"pip-content\"><md-progress-linear ng-show=\"$ctrl.transaction.busy() && !$ctrl.hideObject.progress\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><h2 class=\"text-overflow\" ng-if=\"!$ctrl.hideObject.title\">{{ \\'POST_SIGNUP_TITLE\\' | translate }}</h2><p class=\"bm0 line-height-string\" ng-if=\"!$ctrl.hideObject.successTitle\">{{ \\'POST_SIGNUP_TEXT_1\\' | translate }}</p><p class=\"line-height-string m0\" ng-if=\"!$ctrl.hideObject.subTitle\">{{ \\'POST_SIGNUP_TEXT_2\\' | translate }}</p><form name=\"form\" novalidate=\"\"><div ng-messages=\"$ctrl.config.form.$serverError\" class=\"text-error bm8\" md-auto-hide=\"false\"><div ng-message=\"ERROR_1000\">{{::\\'ERROR_1000\\' | translate}}</div><div ng-message=\"ERROR_1110\">{{::\\'ERROR_1110\\' | translate}}</div><div ng-message=\"ERROR_1111\">{{::\\'ERROR_1111\\' | translate}}</div><div ng-message=\"ERROR_1112\">{{::\\'ERROR_1112\\' | translate}}</div><div ng-message=\"ERROR_1002\">{{::\\'ERROR_1002\\' | translate}}</div><div ng-message=\"ERROR_-1\">{{::\\'ERROR_SERVER\\' | translate}}</div><div ng-message=\"ERROR_UNKNOWN\">{{ $ctrl.config.form.$serverError.ERROR_UNKNOWN | translate }}</div></div><div class=\"pip-ref-item\"><pip-avatar-edit ng-disabled=\"$ctrl.transaction.busy()\" ng-if=\"$ctrl.config.enableAvatar\" pip-reset=\"false\" pip-party-id=\"$ctrl.config.data.id\" pip-created=\"$ctrl.onPictureCreated($event)\" pip-changed=\"$ctrl.onPictureChanged($control, $event)\" class=\"rm16 flex-fixed\"></pip-avatar-edit><div class=\"pip-content\"><p class=\"pip-title\">{{ $ctrl.config.data.name }}</p><p class=\"pip-subtitle\">{{ $ctrl.config.data.email }}</p></div></div><md-input-container class=\"pip-no-hint bp4\"><label>{{ \\'HINT_ABOUT\\' | translate }}</label> <textarea ng-model=\"$ctrl.config.data.about\" ng-initial=\"\" ng-disabled=\"$ctrl.transaction.busy()\" pip-clear-errors=\"\">\\n' +\n    '                        </textarea></md-input-container><div class=\"tm2\"><p class=\"text-caption bm0\">{{ \\'GENDER\\' | translate }}</p><md-select class=\"w-stretch tm0 tp0 bp8\" ng-disabled=\"$ctrl.transaction.busy()\" ng-model=\"$ctrl.config.data.gender\" label=\"{{\\'GENDER\\' | translate}}\" ng-change=\"$ctrl.onStatusChange($ctrl.config.data)\" pip-clear-errors=\"\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in $ctrl.genders track by opt.id\">{{ opt.name }}</md-option></md-select></div><div class=\"tm2\"><p class=\"text-caption bm0\">{{ ::\\'BIRTHDAY\\' | translate }}</p><pip-date ng-disabled=\"$ctrl.transaction.busy()\" ng-model=\"$ctrl.config.data.birthday\" pip-time-mode=\"past\" pip-clear-errors=\"\" time-mode=\"past\"></pip-date></div><md-input-container><label>{{ ::\\'LANGUAGE\\' | translate }}</label><md-select class=\"w-stretch tm0 tp0 bp16\" ng-disabled=\"$ctrl.transaction.busy()\" ng-model=\"$ctrl.config.data.language\" ng-change=\"$ctrl.onStatusChange($ctrl.config.data)\" pip-clear-errors=\"\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in $ctrl.languages track by opt.id\">{{ opt.name }}</md-option></md-select></md-input-container></form></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipEntry.Templates');\n} catch (e) {\n  module = angular.module('pipEntry.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('reset_password/ResetPassword.html',\n    '<div class=\"pip-card-container pip-outer-scroll pip-entry\"><pip-card width=\"400\"><pip-reset-password-panel class=\"scroll-y\"></pip-reset-password-panel><div class=\"pip-footer\"><md-button ng-hide=\"$ctrl.transaction.busy()\" ng-click=\"$ctrl.goBack()\" class=\"rm8\" aria-label=\"CANCEL\">{{ ::\\'CANCEL\\' | translate }}</md-button><md-button ng-hide=\"$ctrl.transaction.busy()\" ng-click=\"$ctrl.onReset()\" aria-label=\"ENTRY_RESET_PASSWORD\" ng-disabled=\"($ctrl.config.form.$pristine && !$ctrl.config.data.login) || $ctrl.config.data.serverUrl.length == 0 || $ctrl.config.data.login.length == 0 || $ctrl.config.data.resetCode.length == 0 || $ctrl.config.data.password.length < 6\" class=\"md-accent\" type=\"submit\">{{ ::\\'ENTRY_RESET_PASSWORD\\' | translate }}</md-button><md-button class=\"md-warn\" ng-show=\"$ctrl.transaction.busy()\" ng-click=\"$ctrl.transaction.abort()\" aria-label=\"ABORT\">{{ ::\\'CANCEL\\' | translate }}</md-button></div></pip-card></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipEntry.Templates');\n} catch (e) {\n  module = angular.module('pipEntry.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('reset_password/ResetPasswordDialog.html',\n    '<md-dialog class=\"pip-entry lp0 rp0\"><md-dialog-content><pip-reset-password-panel></pip-reset-password-panel></md-dialog-content><md-dialog-actions class=\"layout-row layout-align-end-center\"><md-button ng-hide=\"$ctrl.transaction.busy()\" ng-click=\"$ctrl.onCancel()\" class=\"rm8\" aria-label=\"CANCEL\">{{ ::\\'CANCEL\\' | translate }}</md-button><md-button ng-hide=\"$ctrl.transaction.busy()\" ng-click=\"$ctrl.onReset()\" aria-label=\"ENTRY_RESET_PASSWORD\" ng-disabled=\"($ctrl.config.form.$pristine && !$ctrl.config.data.login) || $ctrl.config.data.serverUrl.length == 0 || $ctrl.config.data.login.length == 0 || $ctrl.config.data.resetCode.length == 0 || $ctrl.config.data.password.length < 6\" class=\"md-accent\" type=\"submit\">{{ ::\\'ENTRY_RESET_PASSWORD\\' | translate }}</md-button><md-button class=\"md-warn\" ng-show=\"$ctrl.transaction.busy()\" ng-click=\"$ctrl.transaction.abort()\" aria-label=\"ABORT\">{{ ::\\'CANCEL\\' | translate }}</md-button></md-dialog-actions></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipEntry.Templates');\n} catch (e) {\n  module = angular.module('pipEntry.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('reset_password/ResetPasswordPanel.html',\n    '<div class=\"pip-body\"><div class=\"pip-content\"><md-progress-linear ng-show=\"$ctrl.transaction.busy() && $ctrl.showServerError && !$ctrl.hideObject.progress\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><h2 ng-if=\"!$ctrl.hideObject.title\">{{::\\'RESET_PWD_PASSWORD\\' | translate}}</h2><p class=\"title-padding bm16\" ng-if=\"!$ctrl.hideObject.resetSubTitle && !$ctrl.config.useEmailAsLogin\">{{::\\'RESET_PWD_TEXT_LOGIN\\' | translate}}</p><p class=\"title-padding bm16\" ng-if=\"!$ctrl.hideObject.resetSubTitle && $ctrl.config.useEmailAsLogin\">{{::\\'RESET_PWD_TEXT_EMAIL\\' | translate}}</p><form name=\"form\" novalidate=\"\" autocomplete=\"off\"><input name=\"code\" style=\"display:none\"> <input name=\"resetCode\" style=\"display:none\"> <input name=\"password\" style=\"display:none\"><div ng-messages=\"$ctrl.config.form.$serverError\" class=\"text-error bm8 color-error\" md-auto-hide=\"false\"><div ng-message=\"ERROR_act_execute\">{{::\\'ERROR_ACT_EXECUTE\\' | translate}}</div><div ng-message=\"ERROR_-1\">{{::\\'ERROR_SERVER\\' | translate}}</div><div ng-message=\"ERROR_UNKNOWN\">{{ $ctrl.config.form.$serverError.ERROR_UNKNOWN | translate }}</div></div><div class=\"bp16\"><a ng-hide=\"$ctrl.config.showServerUrl || $ctrl.config.fixedServerUrl || $ctrl.hideObject.server\" ng-click=\"$ctrl.config.showServerUrl = true\" href=\"\">{{::\\'ENTRY_CHANGE_SERVER\\' | translate}}</a></div><div ng-show=\"$ctrl.config.showServerUrl && !$ctrl.hideObject.server\" class=\"bp8\"><md-autocomplete ng-initial=\"\" autofocus=\"\" tabindex=\"1\" class=\"pip-combobox w-stretch bm8\" name=\"server\" aria-label=\"URL\" ng-enabled=\"!$ctrl.transaction.busy()\" placeholder=\"{{::\\'ENTRY_SERVER_URL\\' | translate}}\" md-no-cache=\"true\" md-selected-item=\"$ctrl.config.data.serverUrl\" md-search-text=\"$ctrl.config.selected.searchURLs\" md-items=\"item in $ctrl.config.getMatches($ctrl.config.selected.searchURLs)\" md-item-text=\"item\" md-selected-item-change=\"$ctrl.onServerUrlChanged()\" md-search-text-change=\"$ctrl.onChanged()\" md-delay=\"200\" ng-model=\"$ctrl.config.data.serverUrl\" pip-clear-errors=\"\"><span md-highlight-text=\"$ctrl.config.selected.searchURLs\">{{ item }}</span></md-autocomplete></div><md-input-container class=\"pip-no-hint\" style=\"padding-bottom: 4px!important;\"><label ng-if=\"!$ctrl.config.useEmailAsLogin\">{{::\\'LOGIN\\' | translate}}</label> <label ng-if=\"$ctrl.config.useEmailAsLogin\">{{::\\'EMAIL\\' | translate}}</label> <input name=\"login\" type=\"login\" ng-model=\"$ctrl.config.data.login\" required=\"\" step=\"any\" aria-label=\"LOGIN\" pip-clear-errors=\"\" ng-disabled=\"$ctrl.transaction.busy()\" tabindex=\"2\"><div class=\"hint\" ng-if=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.login).hint && !$ctrl.hideObject.hint && !$ctrl.config.useEmailAsLogin\">{{::\\'HINT_LOGIN\\' | translate}}</div><div class=\"hint\" ng-if=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.login).hint && !$ctrl.hideObject.hint && $ctrl.config.useEmailAsLogin\">{{::\\'HINT_EMAIL\\' | translate}}</div><div ng-messages=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.login)\" class=\"md-input-error\" md-auto-hide=\"false\"><div ng-message=\"required\">{{::\\'ERROR_LOGIN_INVALID\\' | translate }}</div><div ng-message=\"ERROR_NO_LOGIN\">{{::\\'ERROR_NO_LOGIN\\' | translate}}</div><div ng-message=\"ERROR_WRONG_LOGIN\">{{::\\'ERROR_WRONG_LOGIN\\' | translate}}</div><div ng-message=\"ERROR_LOGIN_NOT_FOUND\">{{::\\'ERROR_LOGIN_NOT_FOUND\\' | translate}}</div></div></md-input-container><md-input-container class=\"pip-no-hint\"><label>{{::\\'ENTRY_RESET_CODE\\' | translate}}</label> <input name=\"resetCode\" ng-disabled=\"$ctrl.transaction.busy()\" autocomplete=\"off\" aria-label=\"CODE\" ng-model=\"$ctrl.config.data.resetCode\" required=\"\" tabindex=\"3\" pip-clear-errors=\"\"><div class=\"hint\" ng-if=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.resetCode).hint && !$ctrl.hideObject.hint\">{{::\\'ENTRY_RESET_CODE\\' | translate}}</div><div ng-messages=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.resetCode)\" class=\"md-input-error\" md-auto-hide=\"false\"><div ng-message=\"required\">{{::\\'ERROR_CODE_WRONG\\' | translate }}</div><div ng-message=\"ERROR_WRONG_CODE\">{{::\\'ERROR_WRONG_CODE\\' | translate}}</div></div></md-input-container><md-input-container class=\"pip-no-hint\" style=\"padding-bottom: 4px!important;\"><label>{{::\\'NEW_PASSWORD_SET\\' | translate}}</label> <input name=\"passwordNew\" ng-disabled=\"$ctrl.transaction.busy()\" pip-clear-errors=\"\" autocomplete=\"off\" type=\"password\" tabindex=\"4\" ng-model=\"$ctrl.config.data.password\" required=\"\" minlength=\"6\" aria-label=\"password\"><div class=\"hint\" ng-if=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.passwordNew).hint && !$ctrl.hideObject.hint\">{{::\\'HINT_PASSWORD\\' | translate}}</div><div ng-messages=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.passwordNew)\" class=\"md-input-error\" md-auto-hide=\"false\"><div ng-message=\"required\">{{::\\'MINLENGTH_PASSWORD\\' | translate}}</div><div ng-message=\"minlength\">{{::\\'MINLENGTH_PASSWORD\\' | translate}}</div><div ng-message=\"ERROR_WRONG_PASSWORD\">{{::\\'ERROR_WRONG_PASSWORD\\' | translate}}</div></div></md-input-container></form></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipEntry.Templates');\n} catch (e) {\n  module = angular.module('pipEntry.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('signin/Signin.html',\n    '<div class=\"pip-card-container pip-outer-scroll pip-entry\"><pip-card width=\"400\"><pip-signin-panel pipfixedserverurl=\"$ctrl.fixedServerUrl\" class=\"scroll-y\"></pip-signin-panel></pip-card></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipEntry.Templates');\n} catch (e) {\n  module = angular.module('pipEntry.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('signin/SigninDialog.html',\n    '<md-dialog class=\"pip-entry\"><md-dialog-content><pip-signin-panel pip-goto-signup-dialog=\"$ctrl.pipGotoSignupDialog\" pip-goto-recover-password-dialog=\"$ctrl.pipGotoRecoverPasswordDialog\"></pip-signin-panel></md-dialog-content></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipEntry.Templates');\n} catch (e) {\n  module = angular.module('pipEntry.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('signin/SigninPanel.html',\n    '<div class=\"pip-body\"><div class=\"pip-content\"><md-progress-linear ng-show=\"$ctrl.transaction.busy() && !$ctrl.hideObject.progress\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><h2 pip-translate=\"SIGNIN_TITLE\" ng-if=\"!$ctrl.hideObject.title\"></h2><form name=\"form\" novalidate=\"\"><input type=\"password\" style=\"display:none\"><div ng-messages=\"$ctrl.config.form.$serverError\" class=\"text-error bm8 color-error\" md-auto-hide=\"false\"><div ng-message=\"ERROR_act_execute\">{{::\\'ERROR_ACT_EXECUTE\\' | translate}}</div><div ng-message=\"ERROR_-1\">{{::\\'ERROR_SERVER\\' | translate}}</div><div ng-message=\"ERROR_ACCOUNT_LOCKED\">{{::\\'ERROR_ACCOUNT_LOCKED\\' | translate}}</div><div ng-message=\"ERROR_UNKNOWN\">{{ $ctrl.config.form.$serverError.ERROR_UNKNOWN | translate }}</div></div><div class=\"bp16\"><a ng-hide=\"$ctrl.config.showServerUrl || $ctrl.config.fixedServerUrl || $ctrl.hideObject.server\" ng-click=\"$ctrl.config.showServerUrl = true\" href=\"\" id=\"link-server-url\" pip-test=\"link-server-url\">{{::\\'ENTRY_CHANGE_SERVER\\' | translate}}</a></div><div ng-show=\"$ctrl.config.showServerUrl && !$ctrl.hideObject.server\" class=\"bp8\"><md-autocomplete ng-initial=\"\" autofocus=\"\" tabindex=\"1\" class=\"pip-combobox w-stretch bm8\" name=\"server\" placeholder=\"{{::\\'ENTRY_SERVER_URL\\' | translate}}\" md-no-cache=\"true\" md-selected-item=\"$ctrl.config.data.serverUrl\" md-search-text=\"$ctrl.config.selected.searchURLs\" md-items=\"item in $ctrl.config.getMatches($ctrl.config.selected.searchURLs)\" md-item-text=\"item\" md-selected-item-change=\"$ctrl.onServerUrlChanged()\" md-search-text-change=\"$ctrl.onChanged()\" md-delay=\"200\" ng-model=\"$ctrl.config.data.serverUrl\" ng-disabled=\"$ctrl.transaction.busy()\" pip-clear-errors=\"\" pip-test=\"autocomplete-server\"><span md-highlight-text=\"$ctrl.config.selected.searchURLs\">{{item}}</span></md-autocomplete></div><md-input-container class=\"display bp4\"><label ng-if=\"!$ctrl.config.useEmailAsLogin\">{{::\\'LOGIN\\' | translate}}</label> <label ng-if=\"$ctrl.config.useEmailAsLogin\">{{::\\'EMAIL\\' | translate}}</label> <input name=\"login\" ng-model=\"$ctrl.config.data.login\" required=\"\" step=\"any\" ng-keypress=\"$ctrl.onEnter($event)\" aria-label=\"LOGIN\" pip-clear-errors=\"\" ng-disabled=\"$ctrl.transaction.busy()\" tabindex=\"2\" pip-test=\"input-login\"><div class=\"hint\" ng-if=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.login).hint && !$ctrl.hideObject.hint && !$ctrl.config.useEmailAsLogin\">{{::\\'HINT_LOGIN\\' | translate}}</div><div class=\"hint\" ng-if=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.login).hint && !$ctrl.hideObject.hint && $ctrl.config.useEmailAsLogin\">{{::\\'HINT_EMAIL\\' | translate}}</div><div ng-messages=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.login)\" md-auto-hide=\"false\"><div ng-message=\"required\">{{::\\'ERROR_LOGIN_INVALID\\' | translate }}</div><div ng-message=\"ERROR_WRONG_LOGIN\">{{::\\'ERROR_WRONG_LOGIN\\' | translate}}</div><div ng-message=\"ERROR_NO_LOGIN\">{{::\\'ERROR_NO_LOGIN\\' | translate}}</div><div ng-message=\"ERROR_LOGIN_NOT_FOUND\">{{::\\'ERROR_LOGIN_NOT_FOUND\\' | translate}}</div></div></md-input-container><md-input-container class=\"display bp4\"><label>{{::\\'PASSWORD\\' | translate}}</label> <input name=\"password\" ng-disabled=\"$ctrl.transaction.busy()\" pip-clear-errors=\"\" type=\"password\" tabindex=\"3\" ng-model=\"$ctrl.config.data.password\" ng-keypress=\"$ctrl.onEnter($event)\" required=\"\" minlength=\"6\" pip-test=\"input-password\"><div class=\"hint\" ng-if=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.password).hint && !$ctrl.hideObject.hint\">{{::\\'SIGNIN_HINT_PASSWORD\\' | translate}}</div><div ng-messages=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.password)\" md-auto-hide=\"false\"><div ng-message=\"required\">{{::\\'SIGNIN_HINT_PASSWORD\\' | translate}}</div><div ng-message=\"ERROR_WRONG_PASSWORD\">{{::\\'ERROR_WRONG_PASSWORD\\' | translate}}</div><div ng-message=\"minlength\">{{::\\'HINT_PASSWORD\\' | translate}}</div></div></md-input-container><a href=\"\" class=\"display bm16\" ng-if=\"!$ctrl.hideObject.forgotPassword\" ng-click=\"$ctrl.gotoRecoverPassword()\" tabindex=\"4\">{{::\\'SIGNIN_FORGOT_PASSWORD\\' | translate}}</a><md-checkbox ng-disabled=\"$ctrl.transaction.busy()\" ng-if=\"!$ctrl.hideObject.forgotPassword\" md-no-ink=\"\" class=\"lm0\" aria-label=\"{{\\'SIGNIN_REMEMBER\\' | translate}}\" tabindex=\"5\" ng-model=\"$ctrl.config.data.remember\" pip-test-checkbox=\"remember\"><label class=\"label-check\">{{::\\'SIGNIN_REMEMBER\\' | translate}}</label></md-checkbox><div style=\"height: 36px; overflow: hidden;\"><md-button ng-if=\"!$ctrl.transaction.busy()\" ng-click=\"$ctrl.onSignin()\" aria-label=\"SIGNIN\" class=\"md-raised md-accent w-stretch m0\" tabindex=\"6\" type=\"submit\" xxng-disabled=\"($ctrl.config.data.login == undefined) || $ctrl.config.data.login.length == 0 || $ctrl.config.data.serverUrl == \\'\\' || $ctrl.config.data.serverUrl == undefined || $ctrl.config.data.serverUrl.length == 0 || ($ctrl.config.data.password == undefined)\" pip-test=\"button-signin\">{{::\\'SIGNIN_TITLE\\' | translate}}</md-button><md-button ng-if=\"$ctrl.transaction.busy()\" ng-click=\"$ctrl.transaction.abort()\" class=\"md-raised md-warn m0 w-stretch\" tabindex=\"5\" aria-label=\"ABORT\" pip-test=\"button-cancel\">{{::\\'CANCEL\\' | translate}}</md-button></div><div class=\"tm24 layout-row\" ng-if=\"!$ctrl.config.adminOnly && $ctrl.pipMedia(\\'gt-xs\\') && !$ctrl.hideObject.signup\"><p class=\"m0 text-small\">{{::\\'SIGNIN_NOT_MEMBER\\' | translate}} <a href=\"\" ng-click=\"$ctrl.gotoSignup()\" tabindex=\"6\">{{::\\'SIGNIN_SIGNUP_HERE\\' | translate}}</a></p></div><div class=\"tm24 divider-top text-signup\" ng-if=\"!$ctrl.config.adminOnly && $ctrl.pipMedia(\\'xs\\') && !$ctrl.hideObject.signup\"><div class=\"h48 layout-row layout-align-center-end\"><p class=\"m0 text-small\">{{::\\'SIGNIN_NOT_MEMBER\\' | translate}}</p></div><div class=\"h48 layout-row layout-align-center-start\"><a class=\"text-small\" ng-click=\"$ctrl.gotoSignup()\" href=\"\" tabindex=\"6\">{{::\\'SIGNIN_SIGNUP_HERE\\' | translate}}</a></div></div></form></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipEntry.Templates');\n} catch (e) {\n  module = angular.module('pipEntry.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('signup/Signup.html',\n    '<div class=\"pip-card-container pip-outer-scroll pip-entry\"><pip-card width=\"400\"><pip-signup-panel class=\"scroll-y\"></pip-signup-panel></pip-card></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipEntry.Templates');\n} catch (e) {\n  module = angular.module('pipEntry.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('signup/SignupDialog.html',\n    '<md-dialog class=\"pip-entry\"><md-dialog-content><pip-signup-panel pip-goto-signin-dialog=\"$ctrl.pipGotoSigninDialog\" pip-post-signup=\"$ctrl.pipPostSignup\"></pip-signup-panel></md-dialog-content></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipEntry.Templates');\n} catch (e) {\n  module = angular.module('pipEntry.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('signup/SignupPanel.html',\n    '<div class=\"pip-body\"><div class=\"pip-content\"><md-progress-linear ng-show=\"$ctrl.transaction.busy() && !$ctrl.hideObject.progress\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><h2 pip-translate=\"SIGNUP_TITLE\" ng-if=\"!$ctrl.hideObject.title\"></h2><form name=\"form\" novalidate=\"\" autocomplete=\"off\"><input type=\"email\" style=\"display:none\"> <input type=\"login\" style=\"display:none\"> <input type=\"password\" style=\"display:none\"><div ng-messages=\"$ctrl.config.form.$serverError\" class=\"text-error bm8 color-error\" md-auto-hide=\"false\"><div ng-message=\"ERROR_act_execute\">{{::\\'ERROR_ACT_EXECUTE\\' | translate}}</div><div ng-message=\"ERROR_-1\">{{::\\'ERROR_SERVER\\' | translate}}</div><div ng-message=\"ERROR_UNKNOWN\">{{ $ctrl.config.form.$serverError.ERROR_UNKNOWN | translate }}</div></div><div ng-if=\"$ctrl.error\" class=\"text-error bm8 color-error\" md-auto-hide=\"false\">{{::\\'ERROR_SERVER\\' | translate}}</div><div class=\"bp16\"><a ng-hide=\"$ctrl.config.showServerUrl || $ctrl.config.fixedServerUrl || $ctrl.hideObject.server\" ng-click=\"$ctrl.config.showServerUrl = true\" href=\"\">{{::\\'ENTRY_CHANGE_SERVER\\' | translate}}</a></div><div ng-show=\"$ctrl.config.showServerUrl && !$ctrl.hideObject.server\" class=\"bp8\"><md-autocomplete ng-initial=\"\" autofocus=\"\" tabindex=\"1\" class=\"pip-combobox w-stretch bm8\" name=\"server\" ng-enabled=\"!$ctrl.transaction.busy()\" placeholder=\"{{::\\'ENTRY_SERVER_URL\\' | translate}}\" md-no-cache=\"true\" md-selected-item=\"$ctrl.config.data.serverUrl\" md-search-text=\"$ctrl.config.selected.searchURLs\" md-items=\"item in $ctrl.config.getMatches($ctrl.config.selected.searchURLs)\" md-item-text=\"item\" md-selected-item-change=\"$ctrl.onServerUrlChanged()\" md-search-text-change=\"$ctrl.onChanged()\" md-delay=\"200\" ng-model=\"$ctrl.config.data.serverUrl\" ng-disabled=\"$ctrl.transaction.busy()\" pip-clear-errors=\"\"><span md-highlight-text=\"$ctrl.config.selected.searchURLs\">{{item}}</span></md-autocomplete></div><md-input-container class=\"display bp4\"><label>{{::\\'FULLNAME\\' | translate}}</label> <input name=\"signupFullName\" ng-disabled=\"$ctrl.transaction.busy()\" autocomplete=\"off\" ng-model=\"$ctrl.config.data.name\" ng-init=\"$ctrl.config.data.name = \\'\\'\" required=\"\" tabindex=\"2\" pip-clear-errors=\"\" ng-keypress=\"$ctrl.onEnter($event)\"><div class=\"hint text-overflow w-stretch\" ng-if=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.signupFullName).hint && !$ctrl.hideObject.hint\">{{ ::\\'HINT_FULLNAME\\' | translate}}</div><div ng-messages=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.signupFullName)\" md-auto-hide=\"false\"><div ng-message=\"required\">{{ ::\\'HINT_FULLNAME\\' | translate}} {{::\\'ERROR_FULLNAME_INVALID\\' | translate }}</div><div ng-message=\"ERROR_NO_NAME\">{{ ::\\'ERROR_NO_NAME\\' | translate }}</div></div></md-input-container><div ng-if=\"!$ctrl.config.useEmailAsLogin\"><md-input-container class=\"display bp4\"><label>{{ ::\\'LOGIN\\' | translate}}</label> <input name=\"signupLogin\" ng-disabled=\"$ctrl.transaction.busy()\" autocomplete=\"off\" ng-model=\"$ctrl.config.data.login\" ng-init=\"$ctrl.config.data.login = \\'\\'\" required=\"\" tabindex=\"2\" pip-clear-errors=\"\" ng-keypress=\"$ctrl.onEnter($event)\"><div class=\"hint text-overflow w-stretch\" ng-if=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.signupLogin).hint && !$ctrl.hideObject.hint\">{{::\\'HINT_LOGIN\\' | translate}}</div><div ng-messages=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.signupLogin)\" md-auto-hide=\"false\"><div ng-message=\"required\">{{::\\'HINT_LOGIN\\' | translate}} {{::\\'ERROR_LOGIN_INVALID\\' | translate }}</div><div ng-message=\"ERROR_WRONG_LOGIN\">{{::\\'ERROR_WRONG_LOGIN\\' | translate}}</div><div ng-message=\"ERROR_NO_LOGIN\">{{::\\'ERROR_NO_LOGIN\\' | translate}}</div></div></md-input-container><md-input-container class=\"display bp4\"><label>{{::\\'EMAIL\\' | translate}}</label> <input name=\"userEmail\" ng-disabled=\"$ctrl.transaction.busy()\" pip-clear-errors=\"\" type=\"email\" tabindex=\"3\" ng-model=\"$ctrl.config.data.email\" xxxxpip-email-unique=\"$ctrl.config.data.email\" ng-change=\"$ctrl.onChangeEmail(\\'userEmail\\')\" ng-model-options=\"{ delay: 500 }\" required=\"\" ng-keypress=\"$ctrl.onEnter($event)\" xxxpip-test=\"input-password\"><div class=\"hint\" ng-if=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.userEmail, true).hint && !$ctrl.hideObject.hint\">{{::\\'HINT_EMAIL\\' | translate}}</div><div ng-messages=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.userEmail, true)\" md-auto-hide=\"false\"><div ng-message=\"emailUnique\">{{::\\'ERROR_ALREADY_EXIST\\' | translate}}</div><div ng-message=\"required\">{{::\\'ERROR_EMAIL_INVALID\\' | translate }}</div><div ng-message=\"email\">{{::\\'ERROR_EMAIL_INVALID\\' | translate }}</div><div ng-message=\"ERROR_NO_EMAIL\">{{::\\'ERROR_NO_EMAIL\\' | translate}}</div></div></md-input-container></div><div ng-if=\"$ctrl.config.useEmailAsLogin\"><md-input-container class=\"display bp4\" xxxmd-is-error=\"$ctrl.isError($ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.userEmail1))\"><label>{{::\\'EMAIL\\' | translate}}</label> <input name=\"userEmail1\" ng-disabled=\"$ctrl.transaction.busy()\" pip-clear-errors=\"\" type=\"email\" tabindex=\"3\" ng-model=\"$ctrl.config.data.email\" ng-change=\"$ctrl.onChangeEmail(\\'userEmail1\\')\" ng-model-options=\"{ delay: 500 }\" required=\"\" ng-keypress=\"$ctrl.onEnter($event)\" pip-test=\"input-password\"><div class=\"hint\" ng-if=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.userEmail1, true).hint && !$ctrl.hideObject.hint\">{{::\\'HINT_EMAIL\\' | translate}}</div><div ng-messages=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.userEmail1, true)\" md-auto-hide=\"false\"><div ng-message=\"required\">{{::\\'ERROR_EMAIL_INVALID\\' | translate }}</div><div ng-message=\"email\">{{::\\'ERROR_EMAIL_INVALID\\' | translate }}</div><div ng-message=\"emailUnique\">{{::\\'ERROR_ALREADY_EXIST_EMAIL\\' | translate}}</div><div ng-message=\"ERROR_WRONG_LOGIN\">{{::\\'ERROR_WRONG_LOGIN_EMAIL\\' | translate}}</div><div ng-message=\"ERROR_NO_LOGIN\">{{::\\'ERROR_NO_LOGIN_EMAIL\\' | translate}}</div></div></md-input-container></div><md-input-container class=\"display bp4\"><label>{{::\\'PASSWORD_SET\\' | translate}}</label> <input name=\"password\" ng-disabled=\"$ctrl.transaction.busy()\" autocomplete=\"off\" pip-clear-errors=\"\" type=\"password\" tabindex=\"4\" ng-model=\"$ctrl.config.data.password\" required=\"\" minlength=\"6\" ng-keypress=\"$ctrl.onEnter($event)\" pip-test=\"input-password\"><div class=\"hint\" ng-if=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.password).hint && !$ctrl.hideObject.hint\">{{::\\'HINT_PASSWORD\\' | translate}}</div><div ng-messages=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.password)\" md-auto-hide=\"false\"><div ng-message=\"required\">{{::\\'HINT_PASSWORD\\' | translate}}</div><div ng-message=\"minlength\">{{::\\'HINT_PASSWORD\\' | translate}}</div><div ng-message=\"ERROR_WRONG_PASSWORD\" xxxng-if=\"!$ctrl.config.form.password.$pristine\">{{::\\'ERROR_WRONG_PASSWORD\\' | translate}}</div></div></md-input-container><md-input-container class=\"display bp4\" ng-if=\"!$ctrl.hideObject.passwordConfirm\"><label>{{::\\'PASSWORD_CONFIRM\\' | translate}}</label> <input name=\"passwordConfirm\" type=\"password\" tabindex=\"4\" required=\"\" minlength=\"6\" ng-model=\"$ctrl.confirmPassword\" ng-disabled=\"$ctrl.transaction.busy()\" pip-clear-errors=\"\" pip-compare-password-match=\"\" compare-to2=\"$ctrl.config.data.password\" ng-keypress=\"$ctrl.onEnter($event)\" pip-test=\"input-password\"><div class=\"hint\" ng-if=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.passwordConfirm, true).hint && !$ctrl.hideObject.hint\">{{::\\'HINT_PASSWORD\\' | translate}}</div><div ng-messages=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.passwordConfirm, true)\" md-auto-hide=\"false\"><div ng-message=\"ERROR_compareTo\">{{::\\'PASSWORD_MATCH\\' | translate}}</div><div ng-message=\"required\">{{::\\'HINT_PASSWORD\\' | translate}}</div><div ng-message=\"minlength\">{{::\\'HINT_PASSWORD\\' | translate}}</div></div></md-input-container><p class=\"text-small-secondary\" ng-if=\"!$ctrl.hideObject.agreement\">{{::\\'SIGNUP_TEXT_11\\' | translate}} <a href=\"#/legal/privacy\" target=\"_blank\">{{::\\'SIGNUP_PRIVACY\\' | translate}}</a> {{::\\'SIGNUP_TEXT_12\\' | translate}} <a href=\"#/legal/services\" target=\"_blank\">{{::\\'SIGNUP_SERVICES\\' | translate}}</a></p><md-button ng-hide=\"$ctrl.transaction.busy()\" class=\"md-raised m0 md-accent w-stretch\" ng-click=\"$ctrl.onSignup()\" aria-label=\"SIGNUP\" type=\"submit\" xxng-disabled=\"$ctrl.config.form.$invalid || ($ctrl.config.form.$pristine && !$ctrl.config.data.email) || $ctrl.config.data.serverUrl.length == 0 || $ctrl.config.data.email.length == 0 || ($ctrl.config.data.login.length == 0 && !$ctrl.config.useEmailAsLogin) || (!$ctrl.config.data.password) || (!$ctrl.config.data.name) || $ctrl.config.data.name.length == 0 || $ctrl.config.data.password.length == 0\">{{::\\'SIGNUP_TITLE\\' | translate}}</md-button><md-button ng-show=\"$ctrl.transaction.busy()\" ng-click=\"$ctrl.transaction.abort()\" class=\"md-raised md-warn m0 w-stretch\" aria-label=\"ABORT\">{{::\\'CANCEL\\' | translate}}</md-button><div class=\"tm24 layout-row\" ng-if=\"$ctrl.pipMedia(\\'gt-xs\\') && !$ctrl.hideObject.signin\"><p class=\"text-small m0\">{{::\\'SIGNUP_TEXT_2\\' | translate}} <a href=\"\" ng-click=\"$ctrl.gotoSignin()\">{{::\\'SIGNUP_SIGNIN_HERE\\' | translate}}</a></p></div><div class=\"tm24 divider-top\" ng-if=\"$ctrl.pipMedia(\\'xs\\') && !$ctrl.hideObject.signin\" style=\"margin-right: -16px; margin-left: -16px; background-color: rgb(238, 238, 238);\"><div class=\"h48 layout-row layout-align-center-end\"><p class=\"bm0 text-small\">{{::\\'SIGNUP_TEXT_2\\' | translate}}</p></div><div class=\"h48 layout-row layout-align-center-start\"><p class=\"bm0 text-small\"><a href=\"\" ng-click=\"$ctrl.gotoSignin()\">{{::\\'SIGNUP_SIGNIN_HERE\\' | translate}}</a></p></div></div></form></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipEntry.Templates');\n} catch (e) {\n  module = angular.module('pipEntry.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('verify_email/VerifyEmail.html',\n    '<div class=\"pip-card-container pip-outer-scroll pip-entry\"><pip-card width=\"400\"><div class=\"pip-body\"><div class=\"pip-content layout-column flex\" style=\"position: absolute; top: 0px; right: 0px; left: 0px; bottom: 0px; background-color: #fafafa; z-index: 100;\" ng-if=\"$ctrl.showValidateProgress\"><h2 class=\"p24-flex m0\">{{\\'VERIFY_EMAIL_WAIT\\' | translate}}</h2><div class=\"layout-column flex layout-align-center-center\"><md-progress-circular md-diameter=\"96\"></md-progress-circular></div></div><div class=\"pip-content\"><md-progress-linear ng-show=\"$ctrl.transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><h2>{{\\'VERIFY_EMAIL_TITLE\\' | translate}}</h2><p class=\"title-padding\">{{\\'VERIFY_EMAIL_TEXT_1\\' | translate}}</p><form name=\"form\" novalidate=\"\" ng-init=\"$ctrl.formCreated(form)\" autocomplete=\"off\"><div ng-messages=\"$ctrl.config.form.$serverError\" class=\"text-error color-error bm8\"><div ng-message=\"ERROR_act_execute\">{{::\\'ERROR_ACT_EXECUTE\\' | translate}}</div><div ng-message=\"ERROR_-1\">{{::\\'ERROR_SERVER\\' | translate}}</div><div ng-message=\"ERROR_UNKNOWN\">{{ $ctrl.config.form.$serverError.ERROR_UNKNOWN | translate }}</div></div><div ng-show=\"$ctrl.config.showServerUrl && !$ctrl.hideObject.server\" class=\"tp8 bp8\">{{::\\'ENTRY_SERVER_URL\\' | translate}}: {{ $ctrl.config.data.serverUrl }}</div><div class=\"tp8 bp8\"><span ng-if=\"!$ctrl.config.useEmailAsLogin\">{{::\\'LOGIN\\' | translate}}</span> <span ng-if=\"$ctrl.config.useEmailAsLogin\">{{::\\'EMAIL\\' | translate}}</span> : {{ $ctrl.config.data.login }}</div><md-input-container class=\"pip-no-hint\"><label>{{::\\'ENTRY_VERIFICATION_CODE\\' | translate}}</label> <input name=\"code\" ng-disabled=\"$ctrl.transaction.busy()\" pip-clear-errors=\"\" ng-model=\"$ctrl.config.data.code\" required=\"\" tabindex=\"3\"><div class=\"hint text-overflow w-stretch\" ng-if=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.code).hint && !$ctrl.hideObject.hint\">{{::\\'ENTRY_VERIFICATION_CODE\\' | translate}}</div><div ng-messages=\"$ctrl.touchedErrorsWithHint($ctrl.config.form, $ctrl.config.form.code)\" ng-if=\"!$ctrl.config.form.$pristine\" class=\"md-input-error\"><div ng-message=\"required\">{{::\\'ERROR_CODE_INVALID\\' | translate }}</div><div ng-message=\"ERROR_INVALID_CODE\">{{::\\'ERROR_INVALID_CODE\\' | translate }}</div></div></md-input-container><p>{{\\'VERIFY_EMAIL_TEXT_21\\' | translate}} <a ng-click=\"$ctrl.onRecover()\" class=\"pointer\" href=\"\">{{\\'VERIFY_EMAIL_RESEND\\' | translate}}</a> {{\\'VERIFY_EMAIL_TEXT_22\\' | translate}}</p></form></div></div><div class=\"pip-footer\"><md-button ng-click=\"$ctrl.goBack()\" ng-hide=\"$ctrl.transaction.busy()\" class=\"rm8\" aria-label=\"CANCEL\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onVerify()\" ng-hide=\"$ctrl.transaction.busy()\" aria-label=\"VERIFY\" ng-if=\"!$ctrl.showValidateProgress\" type=\"submit\" ng-disabled=\"$ctrl.config.data.code.length == 0 || $ctrl.config.data.login.length == 0 || (!$ctrl.config.data.login && $ctrl.config.form.$pristine) || (!$ctrl.config.data.code)\">{{::\\'VERIFY\\' | translate}}</md-button><md-button class=\"md-warn\" ng-show=\"$ctrl.transaction.busy()\" ng-click=\"$ctrl.transaction.abort()\" aria-label=\"ABORT\">{{::\\'CANCEL\\' | translate}}</md-button></div></pip-card></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipEntry.Templates');\n} catch (e) {\n  module = angular.module('pipEntry.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('verify_email/VerifyEmailSuccess.html',\n    '<div class=\"pip-card-container pip-outer-scroll pip-entry\"><pip-card width=\"400\"><div class=\"pip-footer\"><md-button ng-click=\"$ctrl.onContinue()\" class=\"md-accent\">{{\\'CONTINUE\\' | translate}}</md-button></div><div class=\"pip-body\"><div class=\"pip-content\"><h2>{{\\'VERIFY_EMAIL_TITLE\\' | translate}}</h2><p class=\"title-padding\">{{\\'VERIFY_EMAIL_SUCCESS_TEXT\\' | translate}}</p></div></div></pip-card></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-suite-entry-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}